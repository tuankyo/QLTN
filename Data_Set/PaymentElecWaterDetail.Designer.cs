//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5448
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Man.Data_Set {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("PaymentElecWaterDetail")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class PaymentElecWaterDetail : global::System.Data.DataSet {
        
        private dsPaymentElecWaterDetailDataTable tabledsPaymentElecWaterDetail;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PaymentElecWaterDetail() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected PaymentElecWaterDetail(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["dsPaymentElecWaterDetail"] != null)) {
                    base.Tables.Add(new dsPaymentElecWaterDetailDataTable(ds.Tables["dsPaymentElecWaterDetail"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsPaymentElecWaterDetailDataTable dsPaymentElecWaterDetail {
            get {
                return this.tabledsPaymentElecWaterDetail;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            PaymentElecWaterDetail cln = ((PaymentElecWaterDetail)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["dsPaymentElecWaterDetail"] != null)) {
                    base.Tables.Add(new dsPaymentElecWaterDetailDataTable(ds.Tables["dsPaymentElecWaterDetail"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tabledsPaymentElecWaterDetail = ((dsPaymentElecWaterDetailDataTable)(base.Tables["dsPaymentElecWaterDetail"]));
            if ((initTable == true)) {
                if ((this.tabledsPaymentElecWaterDetail != null)) {
                    this.tabledsPaymentElecWaterDetail.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "PaymentElecWaterDetail";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/PaymentBooking.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabledsPaymentElecWaterDetail = new dsPaymentElecWaterDetailDataTable();
            base.Tables.Add(this.tabledsPaymentElecWaterDetail);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsPaymentElecWaterDetail() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            PaymentElecWaterDetail ds = new PaymentElecWaterDetail();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void dsPaymentElecWaterDetailRowChangeEventHandler(object sender, dsPaymentElecWaterDetailRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsPaymentElecWaterDetailDataTable : global::System.Data.TypedTableBase<dsPaymentElecWaterDetailRow> {
            
            private global::System.Data.DataColumn coloumnid;
            
            private global::System.Data.DataColumn coloumnUsedElecWaterId;
            
            private global::System.Data.DataColumn coloumnName;
            
            private global::System.Data.DataColumn coloumnFromIndex;
            
            private global::System.Data.DataColumn coloumnToIndex;
            
            private global::System.Data.DataColumn coloumnVAT;
            
            private global::System.Data.DataColumn coloumnOtherFee01;
            
            private global::System.Data.DataColumn coloumnOtherFee02;
            
            private global::System.Data.DataColumn coloumnPriceUSD;
            
            private global::System.Data.DataColumn coloumnPriceVND;
            
            private global::System.Data.DataColumn coloumnVatUSD;
            
            private global::System.Data.DataColumn coloumnVatVND;
            
            private global::System.Data.DataColumn coloumnSumUSD;
            
            private global::System.Data.DataColumn coloumnSumVND;
            
            private global::System.Data.DataColumn coloumnLastPriceUSD;
            
            private global::System.Data.DataColumn coloumnLastPriceVND;
            
            private global::System.Data.DataColumn coloumnMount;
            
            private global::System.Data.DataColumn coloumnYearMonth;
            
            private global::System.Data.DataColumn coloumnBuildingId;
            
            private global::System.Data.DataColumn coloumnCustomerId;
            
            private global::System.Data.DataColumn coloumnRoomId;
            
            private global::System.Data.DataColumn coloumnDateFrom;
            
            private global::System.Data.DataColumn coloumnDateTo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPaymentElecWaterDetailDataTable() {
                this.TableName = "dsPaymentElecWaterDetail";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsPaymentElecWaterDetailDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsPaymentElecWaterDetailDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.coloumnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UsedElecWaterIdColumn {
                get {
                    return this.coloumnUsedElecWaterId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.coloumnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FromIndexColumn {
                get {
                    return this.coloumnFromIndex;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ToIndexColumn {
                get {
                    return this.coloumnToIndex;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VATColumn {
                get {
                    return this.coloumnVAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OtherFee01Column {
                get {
                    return this.coloumnOtherFee01;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OtherFee02Column {
                get {
                    return this.coloumnOtherFee02;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PriceUSDColumn {
                get {
                    return this.coloumnPriceUSD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PriceVNDColumn {
                get {
                    return this.coloumnPriceVND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VatUSDColumn {
                get {
                    return this.coloumnVatUSD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VatVNDColumn {
                get {
                    return this.coloumnVatVND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SumUSDColumn {
                get {
                    return this.coloumnSumUSD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SumVNDColumn {
                get {
                    return this.coloumnSumVND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastPriceUSDColumn {
                get {
                    return this.coloumnLastPriceUSD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastPriceVNDColumn {
                get {
                    return this.coloumnLastPriceVND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MountColumn {
                get {
                    return this.coloumnMount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YearMonthColumn {
                get {
                    return this.coloumnYearMonth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BuildingIdColumn {
                get {
                    return this.coloumnBuildingId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerIdColumn {
                get {
                    return this.coloumnCustomerId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RoomIdColumn {
                get {
                    return this.coloumnRoomId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateFromColumn {
                get {
                    return this.coloumnDateFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateToColumn {
                get {
                    return this.coloumnDateTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPaymentElecWaterDetailRow this[int index] {
                get {
                    return ((dsPaymentElecWaterDetailRow)(this.Rows[index]));
                }
            }
            
            public event dsPaymentElecWaterDetailRowChangeEventHandler dsPaymentElecWaterDetailRowChanging;
            
            public event dsPaymentElecWaterDetailRowChangeEventHandler dsPaymentElecWaterDetailRowChanged;
            
            public event dsPaymentElecWaterDetailRowChangeEventHandler dsPaymentElecWaterDetailRowDeleting;
            
            public event dsPaymentElecWaterDetailRowChangeEventHandler dsPaymentElecWaterDetailRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsPaymentElecWaterDetailRow(dsPaymentElecWaterDetailRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPaymentElecWaterDetailRow AdddsPaymentElecWaterDetailRow(
                        string id, 
                        string UsedElecWaterId, 
                        string Name, 
                        short FromIndex, 
                        short ToIndex, 
                        decimal VAT, 
                        decimal OtherFee01, 
                        decimal OtherFee02, 
                        decimal PriceUSD, 
                        double PriceVND, 
                        decimal VatUSD, 
                        double VatVND, 
                        decimal SumUSD, 
                        double SumVND, 
                        decimal LastPriceUSD, 
                        double LastPriceVND, 
                        short Mount, 
                        string YearMonth, 
                        string BuildingId, 
                        string CustomerId, 
                        string RoomId, 
                        System.DateTime DateFrom, 
                        System.DateTime DateTo) {
                dsPaymentElecWaterDetailRow rowdsPaymentElecWaterDetailRow = ((dsPaymentElecWaterDetailRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        id,
                        UsedElecWaterId,
                        Name,
                        FromIndex,
                        ToIndex,
                        VAT,
                        OtherFee01,
                        OtherFee02,
                        PriceUSD,
                        PriceVND,
                        VatUSD,
                        VatVND,
                        SumUSD,
                        SumVND,
                        LastPriceUSD,
                        LastPriceVND,
                        Mount,
                        YearMonth,
                        BuildingId,
                        CustomerId,
                        RoomId,
                        DateFrom,
                        DateTo};
                rowdsPaymentElecWaterDetailRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsPaymentElecWaterDetailRow);
                return rowdsPaymentElecWaterDetailRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsPaymentElecWaterDetailDataTable cln = ((dsPaymentElecWaterDetailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsPaymentElecWaterDetailDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.coloumnid = base.Columns["id"];
                this.coloumnUsedElecWaterId = base.Columns["UsedElecWaterId"];
                this.coloumnName = base.Columns["Name"];
                this.coloumnFromIndex = base.Columns["FromIndex"];
                this.coloumnToIndex = base.Columns["ToIndex"];
                this.coloumnVAT = base.Columns["VAT"];
                this.coloumnOtherFee01 = base.Columns["OtherFee01"];
                this.coloumnOtherFee02 = base.Columns["OtherFee02"];
                this.coloumnPriceUSD = base.Columns["PriceUSD"];
                this.coloumnPriceVND = base.Columns["PriceVND"];
                this.coloumnVatUSD = base.Columns["VatUSD"];
                this.coloumnVatVND = base.Columns["VatVND"];
                this.coloumnSumUSD = base.Columns["SumUSD"];
                this.coloumnSumVND = base.Columns["SumVND"];
                this.coloumnLastPriceUSD = base.Columns["LastPriceUSD"];
                this.coloumnLastPriceVND = base.Columns["LastPriceVND"];
                this.coloumnMount = base.Columns["Mount"];
                this.coloumnYearMonth = base.Columns["YearMonth"];
                this.coloumnBuildingId = base.Columns["BuildingId"];
                this.coloumnCustomerId = base.Columns["CustomerId"];
                this.coloumnRoomId = base.Columns["RoomId"];
                this.coloumnDateFrom = base.Columns["DateFrom"];
                this.coloumnDateTo = base.Columns["DateTo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.coloumnid = new global::System.Data.DataColumn("id", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnid.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnid");
                this.coloumnid.ExtendedProperties.Add("Generator_UserColumnName", "id");
                base.Columns.Add(this.coloumnid);
                this.coloumnUsedElecWaterId = new global::System.Data.DataColumn("UsedElecWaterId", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnUsedElecWaterId.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnUsedElecWaterId");
                this.coloumnUsedElecWaterId.ExtendedProperties.Add("Generator_UserColumnName", "UsedElecWaterId");
                base.Columns.Add(this.coloumnUsedElecWaterId);
                this.coloumnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnName.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnName");
                this.coloumnName.ExtendedProperties.Add("Generator_UserColumnName", "Name");
                base.Columns.Add(this.coloumnName);
                this.coloumnFromIndex = new global::System.Data.DataColumn("FromIndex", typeof(short), null, global::System.Data.MappingType.Element);
                this.coloumnFromIndex.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnFromIndex");
                this.coloumnFromIndex.ExtendedProperties.Add("Generator_UserColumnName", "FromIndex");
                base.Columns.Add(this.coloumnFromIndex);
                this.coloumnToIndex = new global::System.Data.DataColumn("ToIndex", typeof(short), null, global::System.Data.MappingType.Element);
                this.coloumnToIndex.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnToIndex");
                this.coloumnToIndex.ExtendedProperties.Add("Generator_UserColumnName", "ToIndex");
                base.Columns.Add(this.coloumnToIndex);
                this.coloumnVAT = new global::System.Data.DataColumn("VAT", typeof(decimal), null, global::System.Data.MappingType.Element);
                this.coloumnVAT.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnVAT");
                this.coloumnVAT.ExtendedProperties.Add("Generator_UserColumnName", "VAT");
                base.Columns.Add(this.coloumnVAT);
                this.coloumnOtherFee01 = new global::System.Data.DataColumn("OtherFee01", typeof(decimal), null, global::System.Data.MappingType.Element);
                this.coloumnOtherFee01.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnOtherFee01");
                this.coloumnOtherFee01.ExtendedProperties.Add("Generator_UserColumnName", "OtherFee01");
                base.Columns.Add(this.coloumnOtherFee01);
                this.coloumnOtherFee02 = new global::System.Data.DataColumn("OtherFee02", typeof(decimal), null, global::System.Data.MappingType.Element);
                this.coloumnOtherFee02.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnOtherFee02");
                this.coloumnOtherFee02.ExtendedProperties.Add("Generator_UserColumnName", "OtherFee02");
                base.Columns.Add(this.coloumnOtherFee02);
                this.coloumnPriceUSD = new global::System.Data.DataColumn("PriceUSD", typeof(decimal), null, global::System.Data.MappingType.Element);
                this.coloumnPriceUSD.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnPriceUSD");
                this.coloumnPriceUSD.ExtendedProperties.Add("Generator_UserColumnName", "PriceUSD");
                base.Columns.Add(this.coloumnPriceUSD);
                this.coloumnPriceVND = new global::System.Data.DataColumn("PriceVND", typeof(double), null, global::System.Data.MappingType.Element);
                this.coloumnPriceVND.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnPriceVND");
                this.coloumnPriceVND.ExtendedProperties.Add("Generator_UserColumnName", "PriceVND");
                base.Columns.Add(this.coloumnPriceVND);
                this.coloumnVatUSD = new global::System.Data.DataColumn("VatUSD", typeof(decimal), null, global::System.Data.MappingType.Element);
                this.coloumnVatUSD.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnVatUSD");
                this.coloumnVatUSD.ExtendedProperties.Add("Generator_UserColumnName", "VatUSD");
                base.Columns.Add(this.coloumnVatUSD);
                this.coloumnVatVND = new global::System.Data.DataColumn("VatVND", typeof(double), null, global::System.Data.MappingType.Element);
                this.coloumnVatVND.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnVatVND");
                this.coloumnVatVND.ExtendedProperties.Add("Generator_UserColumnName", "VatVND");
                base.Columns.Add(this.coloumnVatVND);
                this.coloumnSumUSD = new global::System.Data.DataColumn("SumUSD", typeof(decimal), null, global::System.Data.MappingType.Element);
                this.coloumnSumUSD.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnSumUSD");
                this.coloumnSumUSD.ExtendedProperties.Add("Generator_UserColumnName", "SumUSD");
                base.Columns.Add(this.coloumnSumUSD);
                this.coloumnSumVND = new global::System.Data.DataColumn("SumVND", typeof(double), null, global::System.Data.MappingType.Element);
                this.coloumnSumVND.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnSumVND");
                this.coloumnSumVND.ExtendedProperties.Add("Generator_UserColumnName", "SumVND");
                base.Columns.Add(this.coloumnSumVND);
                this.coloumnLastPriceUSD = new global::System.Data.DataColumn("LastPriceUSD", typeof(decimal), null, global::System.Data.MappingType.Element);
                this.coloumnLastPriceUSD.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnLastPriceUSD");
                this.coloumnLastPriceUSD.ExtendedProperties.Add("Generator_UserColumnName", "LastPriceUSD");
                base.Columns.Add(this.coloumnLastPriceUSD);
                this.coloumnLastPriceVND = new global::System.Data.DataColumn("LastPriceVND", typeof(double), null, global::System.Data.MappingType.Element);
                this.coloumnLastPriceVND.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnLastPriceVND");
                this.coloumnLastPriceVND.ExtendedProperties.Add("Generator_UserColumnName", "LastPriceVND");
                base.Columns.Add(this.coloumnLastPriceVND);
                this.coloumnMount = new global::System.Data.DataColumn("Mount", typeof(short), null, global::System.Data.MappingType.Element);
                this.coloumnMount.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnMount");
                this.coloumnMount.ExtendedProperties.Add("Generator_UserColumnName", "Mount");
                base.Columns.Add(this.coloumnMount);
                this.coloumnYearMonth = new global::System.Data.DataColumn("YearMonth", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnYearMonth.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnYearMonth");
                this.coloumnYearMonth.ExtendedProperties.Add("Generator_UserColumnName", "YearMonth");
                base.Columns.Add(this.coloumnYearMonth);
                this.coloumnBuildingId = new global::System.Data.DataColumn("BuildingId", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnBuildingId.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnBuildingId");
                this.coloumnBuildingId.ExtendedProperties.Add("Generator_UserColumnName", "BuildingId");
                base.Columns.Add(this.coloumnBuildingId);
                this.coloumnCustomerId = new global::System.Data.DataColumn("CustomerId", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnCustomerId.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnCustomerId");
                this.coloumnCustomerId.ExtendedProperties.Add("Generator_UserColumnName", "CustomerId");
                base.Columns.Add(this.coloumnCustomerId);
                this.coloumnRoomId = new global::System.Data.DataColumn("RoomId", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnRoomId.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnRoomId");
                this.coloumnRoomId.ExtendedProperties.Add("Generator_UserColumnName", "RoomId");
                base.Columns.Add(this.coloumnRoomId);
                this.coloumnDateFrom = new global::System.Data.DataColumn("DateFrom", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                this.coloumnDateFrom.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnDateFrom");
                this.coloumnDateFrom.ExtendedProperties.Add("Generator_UserColumnName", "DateFrom");
                base.Columns.Add(this.coloumnDateFrom);
                this.coloumnDateTo = new global::System.Data.DataColumn("DateTo", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                this.coloumnDateTo.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnDateTo");
                this.coloumnDateTo.ExtendedProperties.Add("Generator_UserColumnName", "DateTo");
                base.Columns.Add(this.coloumnDateTo);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPaymentElecWaterDetailRow NewdsPaymentElecWaterDetailRow() {
                return ((dsPaymentElecWaterDetailRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsPaymentElecWaterDetailRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsPaymentElecWaterDetailRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsPaymentElecWaterDetailRowChanged != null)) {
                    this.dsPaymentElecWaterDetailRowChanged(this, new dsPaymentElecWaterDetailRowChangeEvent(((dsPaymentElecWaterDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsPaymentElecWaterDetailRowChanging != null)) {
                    this.dsPaymentElecWaterDetailRowChanging(this, new dsPaymentElecWaterDetailRowChangeEvent(((dsPaymentElecWaterDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsPaymentElecWaterDetailRowDeleted != null)) {
                    this.dsPaymentElecWaterDetailRowDeleted(this, new dsPaymentElecWaterDetailRowChangeEvent(((dsPaymentElecWaterDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsPaymentElecWaterDetailRowDeleting != null)) {
                    this.dsPaymentElecWaterDetailRowDeleting(this, new dsPaymentElecWaterDetailRowChangeEvent(((dsPaymentElecWaterDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsPaymentElecWaterDetailRow(dsPaymentElecWaterDetailRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                PaymentElecWaterDetail ds = new PaymentElecWaterDetail();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsPaymentElecWaterDetailDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsPaymentElecWaterDetailRow : global::System.Data.DataRow {
            
            private dsPaymentElecWaterDetailDataTable tabledsPaymentElecWaterDetail;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsPaymentElecWaterDetailRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsPaymentElecWaterDetail = ((dsPaymentElecWaterDetailDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string id {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentElecWaterDetail.idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'id\' in table \'dsPaymentElecWaterDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentElecWaterDetail.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UsedElecWaterId {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentElecWaterDetail.UsedElecWaterIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UsedElecWaterId\' in table \'dsPaymentElecWaterDetail\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentElecWaterDetail.UsedElecWaterIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentElecWaterDetail.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'dsPaymentElecWaterDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentElecWaterDetail.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short FromIndex {
                get {
                    try {
                        return ((short)(this[this.tabledsPaymentElecWaterDetail.FromIndexColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FromIndex\' in table \'dsPaymentElecWaterDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentElecWaterDetail.FromIndexColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ToIndex {
                get {
                    try {
                        return ((short)(this[this.tabledsPaymentElecWaterDetail.ToIndexColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ToIndex\' in table \'dsPaymentElecWaterDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentElecWaterDetail.ToIndexColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal VAT {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPaymentElecWaterDetail.VATColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VAT\' in table \'dsPaymentElecWaterDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentElecWaterDetail.VATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OtherFee01 {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPaymentElecWaterDetail.OtherFee01Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherFee01\' in table \'dsPaymentElecWaterDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentElecWaterDetail.OtherFee01Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OtherFee02 {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPaymentElecWaterDetail.OtherFee02Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherFee02\' in table \'dsPaymentElecWaterDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentElecWaterDetail.OtherFee02Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PriceUSD {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPaymentElecWaterDetail.PriceUSDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PriceUSD\' in table \'dsPaymentElecWaterDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentElecWaterDetail.PriceUSDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PriceVND {
                get {
                    try {
                        return ((double)(this[this.tabledsPaymentElecWaterDetail.PriceVNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PriceVND\' in table \'dsPaymentElecWaterDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentElecWaterDetail.PriceVNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal VatUSD {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPaymentElecWaterDetail.VatUSDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VatUSD\' in table \'dsPaymentElecWaterDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentElecWaterDetail.VatUSDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double VatVND {
                get {
                    try {
                        return ((double)(this[this.tabledsPaymentElecWaterDetail.VatVNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VatVND\' in table \'dsPaymentElecWaterDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentElecWaterDetail.VatVNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SumUSD {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPaymentElecWaterDetail.SumUSDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SumUSD\' in table \'dsPaymentElecWaterDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentElecWaterDetail.SumUSDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SumVND {
                get {
                    try {
                        return ((double)(this[this.tabledsPaymentElecWaterDetail.SumVNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SumVND\' in table \'dsPaymentElecWaterDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentElecWaterDetail.SumVNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LastPriceUSD {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPaymentElecWaterDetail.LastPriceUSDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastPriceUSD\' in table \'dsPaymentElecWaterDetail\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tabledsPaymentElecWaterDetail.LastPriceUSDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double LastPriceVND {
                get {
                    try {
                        return ((double)(this[this.tabledsPaymentElecWaterDetail.LastPriceVNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastPriceVND\' in table \'dsPaymentElecWaterDetail\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tabledsPaymentElecWaterDetail.LastPriceVNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short Mount {
                get {
                    try {
                        return ((short)(this[this.tabledsPaymentElecWaterDetail.MountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mount\' in table \'dsPaymentElecWaterDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentElecWaterDetail.MountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string YearMonth {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentElecWaterDetail.YearMonthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'YearMonth\' in table \'dsPaymentElecWaterDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentElecWaterDetail.YearMonthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BuildingId {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentElecWaterDetail.BuildingIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BuildingId\' in table \'dsPaymentElecWaterDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentElecWaterDetail.BuildingIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerId {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentElecWaterDetail.CustomerIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerId\' in table \'dsPaymentElecWaterDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentElecWaterDetail.CustomerIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RoomId {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentElecWaterDetail.RoomIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RoomId\' in table \'dsPaymentElecWaterDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentElecWaterDetail.RoomIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateFrom {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledsPaymentElecWaterDetail.DateFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateFrom\' in table \'dsPaymentElecWaterDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentElecWaterDetail.DateFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTo {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledsPaymentElecWaterDetail.DateToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTo\' in table \'dsPaymentElecWaterDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentElecWaterDetail.DateToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidNull() {
                return this.IsNull(this.tabledsPaymentElecWaterDetail.idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidNull() {
                this[this.tabledsPaymentElecWaterDetail.idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUsedElecWaterIdNull() {
                return this.IsNull(this.tabledsPaymentElecWaterDetail.UsedElecWaterIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUsedElecWaterIdNull() {
                this[this.tabledsPaymentElecWaterDetail.UsedElecWaterIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tabledsPaymentElecWaterDetail.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tabledsPaymentElecWaterDetail.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFromIndexNull() {
                return this.IsNull(this.tabledsPaymentElecWaterDetail.FromIndexColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFromIndexNull() {
                this[this.tabledsPaymentElecWaterDetail.FromIndexColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsToIndexNull() {
                return this.IsNull(this.tabledsPaymentElecWaterDetail.ToIndexColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetToIndexNull() {
                this[this.tabledsPaymentElecWaterDetail.ToIndexColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVATNull() {
                return this.IsNull(this.tabledsPaymentElecWaterDetail.VATColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVATNull() {
                this[this.tabledsPaymentElecWaterDetail.VATColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOtherFee01Null() {
                return this.IsNull(this.tabledsPaymentElecWaterDetail.OtherFee01Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOtherFee01Null() {
                this[this.tabledsPaymentElecWaterDetail.OtherFee01Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOtherFee02Null() {
                return this.IsNull(this.tabledsPaymentElecWaterDetail.OtherFee02Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOtherFee02Null() {
                this[this.tabledsPaymentElecWaterDetail.OtherFee02Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPriceUSDNull() {
                return this.IsNull(this.tabledsPaymentElecWaterDetail.PriceUSDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPriceUSDNull() {
                this[this.tabledsPaymentElecWaterDetail.PriceUSDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPriceVNDNull() {
                return this.IsNull(this.tabledsPaymentElecWaterDetail.PriceVNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPriceVNDNull() {
                this[this.tabledsPaymentElecWaterDetail.PriceVNDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVatUSDNull() {
                return this.IsNull(this.tabledsPaymentElecWaterDetail.VatUSDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVatUSDNull() {
                this[this.tabledsPaymentElecWaterDetail.VatUSDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVatVNDNull() {
                return this.IsNull(this.tabledsPaymentElecWaterDetail.VatVNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVatVNDNull() {
                this[this.tabledsPaymentElecWaterDetail.VatVNDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSumUSDNull() {
                return this.IsNull(this.tabledsPaymentElecWaterDetail.SumUSDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSumUSDNull() {
                this[this.tabledsPaymentElecWaterDetail.SumUSDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSumVNDNull() {
                return this.IsNull(this.tabledsPaymentElecWaterDetail.SumVNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSumVNDNull() {
                this[this.tabledsPaymentElecWaterDetail.SumVNDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastPriceUSDNull() {
                return this.IsNull(this.tabledsPaymentElecWaterDetail.LastPriceUSDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastPriceUSDNull() {
                this[this.tabledsPaymentElecWaterDetail.LastPriceUSDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastPriceVNDNull() {
                return this.IsNull(this.tabledsPaymentElecWaterDetail.LastPriceVNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastPriceVNDNull() {
                this[this.tabledsPaymentElecWaterDetail.LastPriceVNDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMountNull() {
                return this.IsNull(this.tabledsPaymentElecWaterDetail.MountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMountNull() {
                this[this.tabledsPaymentElecWaterDetail.MountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsYearMonthNull() {
                return this.IsNull(this.tabledsPaymentElecWaterDetail.YearMonthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetYearMonthNull() {
                this[this.tabledsPaymentElecWaterDetail.YearMonthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBuildingIdNull() {
                return this.IsNull(this.tabledsPaymentElecWaterDetail.BuildingIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBuildingIdNull() {
                this[this.tabledsPaymentElecWaterDetail.BuildingIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerIdNull() {
                return this.IsNull(this.tabledsPaymentElecWaterDetail.CustomerIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerIdNull() {
                this[this.tabledsPaymentElecWaterDetail.CustomerIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRoomIdNull() {
                return this.IsNull(this.tabledsPaymentElecWaterDetail.RoomIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRoomIdNull() {
                this[this.tabledsPaymentElecWaterDetail.RoomIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateFromNull() {
                return this.IsNull(this.tabledsPaymentElecWaterDetail.DateFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateFromNull() {
                this[this.tabledsPaymentElecWaterDetail.DateFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateToNull() {
                return this.IsNull(this.tabledsPaymentElecWaterDetail.DateToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateToNull() {
                this[this.tabledsPaymentElecWaterDetail.DateToColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsPaymentElecWaterDetailRowChangeEvent : global::System.EventArgs {
            
            private dsPaymentElecWaterDetailRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPaymentElecWaterDetailRowChangeEvent(dsPaymentElecWaterDetailRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPaymentElecWaterDetailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591