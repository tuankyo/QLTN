//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5448
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Man.Data_Set {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("_RentContractRoom")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class _RentContractRoom : global::System.Data.DataSet {
        
        private dsRentContractRoomDataTable tabledsRentContractRoom;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public _RentContractRoom() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected _RentContractRoom(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["dsRentContractRoom"] != null)) {
                    base.Tables.Add(new dsRentContractRoomDataTable(ds.Tables["dsRentContractRoom"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsRentContractRoomDataTable dsRentContractRoom {
            get {
                return this.tabledsRentContractRoom;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            _RentContractRoom cln = ((_RentContractRoom)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["dsRentContractRoom"] != null)) {
                    base.Tables.Add(new dsRentContractRoomDataTable(ds.Tables["dsRentContractRoom"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tabledsRentContractRoom = ((dsRentContractRoomDataTable)(base.Tables["dsRentContractRoom"]));
            if ((initTable == true)) {
                if ((this.tabledsRentContractRoom != null)) {
                    this.tabledsRentContractRoom.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "RentContractRoom";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/Customer.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabledsRentContractRoom = new dsRentContractRoomDataTable();
            base.Tables.Add(this.tabledsRentContractRoom);
            this.ExtendedProperties.Add("Generator_DataSetName", "_RentContractRoom");
            this.ExtendedProperties.Add("Generator_UserDSName", "RentContractRoom");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsRentContractRoom() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            _RentContractRoom ds = new _RentContractRoom();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void dsRentContractRoomRowChangeEventHandler(object sender, dsRentContractRoomRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsRentContractRoomDataTable : global::System.Data.TypedTableBase<dsRentContractRoomRow> {
            
            private global::System.Data.DataColumn columnBuildingId;
            
            private global::System.Data.DataColumn columnCustomerId;
            
            private global::System.Data.DataColumn columnContractId;
            
            private global::System.Data.DataColumn columnBeginContract;
            
            private global::System.Data.DataColumn columnEndContract;
            
            private global::System.Data.DataColumn columnRoomId;
            
            private global::System.Data.DataColumn columnRegional;
            
            private global::System.Data.DataColumn columnArea;
            
            private global::System.Data.DataColumn columnMonthRentPriceVND;
            
            private global::System.Data.DataColumn columnMonthRentPriceUSD;
            
            private global::System.Data.DataColumn columnMonthManagerPriceVND;
            
            private global::System.Data.DataColumn columnMonthManagerPriceUSD;
            
            private global::System.Data.DataColumn columnVAT;
            
            private global::System.Data.DataColumn columnMonthExtraTimePriceVND;
            
            private global::System.Data.DataColumn columnMonthExtraTimePriceUSD;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsRentContractRoomDataTable() {
                this.TableName = "dsRentContractRoom";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsRentContractRoomDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsRentContractRoomDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BuildingIdColumn {
                get {
                    return this.columnBuildingId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerIdColumn {
                get {
                    return this.columnCustomerId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContractIdColumn {
                get {
                    return this.columnContractId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BeginContractColumn {
                get {
                    return this.columnBeginContract;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EndContractColumn {
                get {
                    return this.columnEndContract;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RoomIdColumn {
                get {
                    return this.columnRoomId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RegionalColumn {
                get {
                    return this.columnRegional;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AreaColumn {
                get {
                    return this.columnArea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonthRentPriceVNDColumn {
                get {
                    return this.columnMonthRentPriceVND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonthRentPriceUSDColumn {
                get {
                    return this.columnMonthRentPriceUSD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonthManagerPriceVNDColumn {
                get {
                    return this.columnMonthManagerPriceVND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonthManagerPriceUSDColumn {
                get {
                    return this.columnMonthManagerPriceUSD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VATColumn {
                get {
                    return this.columnVAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonthExtraTimePriceVNDColumn {
                get {
                    return this.columnMonthExtraTimePriceVND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonthExtraTimePriceUSDColumn {
                get {
                    return this.columnMonthExtraTimePriceUSD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsRentContractRoomRow this[int index] {
                get {
                    return ((dsRentContractRoomRow)(this.Rows[index]));
                }
            }
            
            public event dsRentContractRoomRowChangeEventHandler dsRentContractRoomRowChanging;
            
            public event dsRentContractRoomRowChangeEventHandler dsRentContractRoomRowChanged;
            
            public event dsRentContractRoomRowChangeEventHandler dsRentContractRoomRowDeleting;
            
            public event dsRentContractRoomRowChangeEventHandler dsRentContractRoomRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsRentContractRoomRow(dsRentContractRoomRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsRentContractRoomRow AdddsRentContractRoomRow(string BuildingId, string CustomerId, string ContractId, System.DateTime BeginContract, System.DateTime EndContract, string RoomId, short Regional, short Area, short MonthRentPriceVND, decimal MonthRentPriceUSD, short MonthManagerPriceVND, decimal MonthManagerPriceUSD, decimal VAT, short MonthExtraTimePriceVND, decimal MonthExtraTimePriceUSD) {
                dsRentContractRoomRow rowdsRentContractRoomRow = ((dsRentContractRoomRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        BuildingId,
                        CustomerId,
                        ContractId,
                        BeginContract,
                        EndContract,
                        RoomId,
                        Regional,
                        Area,
                        MonthRentPriceVND,
                        MonthRentPriceUSD,
                        MonthManagerPriceVND,
                        MonthManagerPriceUSD,
                        VAT,
                        MonthExtraTimePriceVND,
                        MonthExtraTimePriceUSD};
                rowdsRentContractRoomRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsRentContractRoomRow);
                return rowdsRentContractRoomRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsRentContractRoomDataTable cln = ((dsRentContractRoomDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsRentContractRoomDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnBuildingId = base.Columns["BuildingId"];
                this.columnCustomerId = base.Columns["CustomerId"];
                this.columnContractId = base.Columns["ContractId"];
                this.columnBeginContract = base.Columns["BeginContract"];
                this.columnEndContract = base.Columns["EndContract"];
                this.columnRoomId = base.Columns["RoomId"];
                this.columnRegional = base.Columns["Regional"];
                this.columnArea = base.Columns["Area"];
                this.columnMonthRentPriceVND = base.Columns["MonthRentPriceVND"];
                this.columnMonthRentPriceUSD = base.Columns["MonthRentPriceUSD"];
                this.columnMonthManagerPriceVND = base.Columns["MonthManagerPriceVND"];
                this.columnMonthManagerPriceUSD = base.Columns["MonthManagerPriceUSD"];
                this.columnVAT = base.Columns["VAT"];
                this.columnMonthExtraTimePriceVND = base.Columns["MonthExtraTimePriceVND"];
                this.columnMonthExtraTimePriceUSD = base.Columns["MonthExtraTimePriceUSD"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnBuildingId = new global::System.Data.DataColumn("BuildingId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBuildingId);
                this.columnCustomerId = new global::System.Data.DataColumn("CustomerId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerId);
                this.columnContractId = new global::System.Data.DataColumn("ContractId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractId);
                this.columnBeginContract = new global::System.Data.DataColumn("BeginContract", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBeginContract);
                this.columnEndContract = new global::System.Data.DataColumn("EndContract", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndContract);
                this.columnRoomId = new global::System.Data.DataColumn("RoomId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoomId);
                this.columnRegional = new global::System.Data.DataColumn("Regional", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegional);
                this.columnArea = new global::System.Data.DataColumn("Area", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArea);
                this.columnMonthRentPriceVND = new global::System.Data.DataColumn("MonthRentPriceVND", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonthRentPriceVND);
                this.columnMonthRentPriceUSD = new global::System.Data.DataColumn("MonthRentPriceUSD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonthRentPriceUSD);
                this.columnMonthManagerPriceVND = new global::System.Data.DataColumn("MonthManagerPriceVND", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonthManagerPriceVND);
                this.columnMonthManagerPriceUSD = new global::System.Data.DataColumn("MonthManagerPriceUSD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonthManagerPriceUSD);
                this.columnVAT = new global::System.Data.DataColumn("VAT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVAT);
                this.columnMonthExtraTimePriceVND = new global::System.Data.DataColumn("MonthExtraTimePriceVND", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonthExtraTimePriceVND);
                this.columnMonthExtraTimePriceUSD = new global::System.Data.DataColumn("MonthExtraTimePriceUSD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonthExtraTimePriceUSD);
                this.columnContractId.Caption = "Name";
                this.columnBeginContract.Caption = "Phone";
                this.columnEndContract.Caption = "Email";
                this.columnRoomId.Caption = "ContactName";
                this.columnRegional.Caption = "DataColumn1";
                this.columnArea.Caption = "DataColumn1";
                this.columnMonthRentPriceVND.Caption = "DataColumn1";
                this.columnMonthRentPriceUSD.Caption = "DataColumn1";
                this.columnMonthManagerPriceVND.Caption = "DataColumn1";
                this.columnMonthManagerPriceUSD.Caption = "DataColumn1";
                this.columnVAT.Caption = "DataColumn1";
                this.columnMonthExtraTimePriceVND.Caption = "DataColumn1";
                this.columnMonthExtraTimePriceUSD.Caption = "DataColumn1";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsRentContractRoomRow NewdsRentContractRoomRow() {
                return ((dsRentContractRoomRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsRentContractRoomRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsRentContractRoomRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsRentContractRoomRowChanged != null)) {
                    this.dsRentContractRoomRowChanged(this, new dsRentContractRoomRowChangeEvent(((dsRentContractRoomRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsRentContractRoomRowChanging != null)) {
                    this.dsRentContractRoomRowChanging(this, new dsRentContractRoomRowChangeEvent(((dsRentContractRoomRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsRentContractRoomRowDeleted != null)) {
                    this.dsRentContractRoomRowDeleted(this, new dsRentContractRoomRowChangeEvent(((dsRentContractRoomRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsRentContractRoomRowDeleting != null)) {
                    this.dsRentContractRoomRowDeleting(this, new dsRentContractRoomRowChangeEvent(((dsRentContractRoomRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsRentContractRoomRow(dsRentContractRoomRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                _RentContractRoom ds = new _RentContractRoom();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsRentContractRoomDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsRentContractRoomRow : global::System.Data.DataRow {
            
            private dsRentContractRoomDataTable tabledsRentContractRoom;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsRentContractRoomRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsRentContractRoom = ((dsRentContractRoomDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BuildingId {
                get {
                    try {
                        return ((string)(this[this.tabledsRentContractRoom.BuildingIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BuildingId\' in table \'dsRentContractRoom\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsRentContractRoom.BuildingIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerId {
                get {
                    try {
                        return ((string)(this[this.tabledsRentContractRoom.CustomerIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerId\' in table \'dsRentContractRoom\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsRentContractRoom.CustomerIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContractId {
                get {
                    try {
                        return ((string)(this[this.tabledsRentContractRoom.ContractIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContractId\' in table \'dsRentContractRoom\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsRentContractRoom.ContractIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime BeginContract {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledsRentContractRoom.BeginContractColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BeginContract\' in table \'dsRentContractRoom\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsRentContractRoom.BeginContractColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EndContract {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledsRentContractRoom.EndContractColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EndContract\' in table \'dsRentContractRoom\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsRentContractRoom.EndContractColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RoomId {
                get {
                    try {
                        return ((string)(this[this.tabledsRentContractRoom.RoomIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RoomId\' in table \'dsRentContractRoom\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsRentContractRoom.RoomIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short Regional {
                get {
                    try {
                        return ((short)(this[this.tabledsRentContractRoom.RegionalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Regional\' in table \'dsRentContractRoom\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsRentContractRoom.RegionalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short Area {
                get {
                    try {
                        return ((short)(this[this.tabledsRentContractRoom.AreaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Area\' in table \'dsRentContractRoom\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsRentContractRoom.AreaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short MonthRentPriceVND {
                get {
                    try {
                        return ((short)(this[this.tabledsRentContractRoom.MonthRentPriceVNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MonthRentPriceVND\' in table \'dsRentContractRoom\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tabledsRentContractRoom.MonthRentPriceVNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MonthRentPriceUSD {
                get {
                    try {
                        return ((decimal)(this[this.tabledsRentContractRoom.MonthRentPriceUSDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MonthRentPriceUSD\' in table \'dsRentContractRoom\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tabledsRentContractRoom.MonthRentPriceUSDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short MonthManagerPriceVND {
                get {
                    try {
                        return ((short)(this[this.tabledsRentContractRoom.MonthManagerPriceVNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MonthManagerPriceVND\' in table \'dsRentContractRoom\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tabledsRentContractRoom.MonthManagerPriceVNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MonthManagerPriceUSD {
                get {
                    try {
                        return ((decimal)(this[this.tabledsRentContractRoom.MonthManagerPriceUSDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MonthManagerPriceUSD\' in table \'dsRentContractRoom\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tabledsRentContractRoom.MonthManagerPriceUSDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal VAT {
                get {
                    try {
                        return ((decimal)(this[this.tabledsRentContractRoom.VATColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VAT\' in table \'dsRentContractRoom\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsRentContractRoom.VATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short MonthExtraTimePriceVND {
                get {
                    try {
                        return ((short)(this[this.tabledsRentContractRoom.MonthExtraTimePriceVNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MonthExtraTimePriceVND\' in table \'dsRentContractRoom\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tabledsRentContractRoom.MonthExtraTimePriceVNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MonthExtraTimePriceUSD {
                get {
                    try {
                        return ((decimal)(this[this.tabledsRentContractRoom.MonthExtraTimePriceUSDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MonthExtraTimePriceUSD\' in table \'dsRentContractRoom\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tabledsRentContractRoom.MonthExtraTimePriceUSDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBuildingIdNull() {
                return this.IsNull(this.tabledsRentContractRoom.BuildingIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBuildingIdNull() {
                this[this.tabledsRentContractRoom.BuildingIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerIdNull() {
                return this.IsNull(this.tabledsRentContractRoom.CustomerIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerIdNull() {
                this[this.tabledsRentContractRoom.CustomerIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContractIdNull() {
                return this.IsNull(this.tabledsRentContractRoom.ContractIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContractIdNull() {
                this[this.tabledsRentContractRoom.ContractIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBeginContractNull() {
                return this.IsNull(this.tabledsRentContractRoom.BeginContractColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBeginContractNull() {
                this[this.tabledsRentContractRoom.BeginContractColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEndContractNull() {
                return this.IsNull(this.tabledsRentContractRoom.EndContractColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEndContractNull() {
                this[this.tabledsRentContractRoom.EndContractColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRoomIdNull() {
                return this.IsNull(this.tabledsRentContractRoom.RoomIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRoomIdNull() {
                this[this.tabledsRentContractRoom.RoomIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRegionalNull() {
                return this.IsNull(this.tabledsRentContractRoom.RegionalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRegionalNull() {
                this[this.tabledsRentContractRoom.RegionalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAreaNull() {
                return this.IsNull(this.tabledsRentContractRoom.AreaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAreaNull() {
                this[this.tabledsRentContractRoom.AreaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonthRentPriceVNDNull() {
                return this.IsNull(this.tabledsRentContractRoom.MonthRentPriceVNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonthRentPriceVNDNull() {
                this[this.tabledsRentContractRoom.MonthRentPriceVNDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonthRentPriceUSDNull() {
                return this.IsNull(this.tabledsRentContractRoom.MonthRentPriceUSDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonthRentPriceUSDNull() {
                this[this.tabledsRentContractRoom.MonthRentPriceUSDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonthManagerPriceVNDNull() {
                return this.IsNull(this.tabledsRentContractRoom.MonthManagerPriceVNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonthManagerPriceVNDNull() {
                this[this.tabledsRentContractRoom.MonthManagerPriceVNDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonthManagerPriceUSDNull() {
                return this.IsNull(this.tabledsRentContractRoom.MonthManagerPriceUSDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonthManagerPriceUSDNull() {
                this[this.tabledsRentContractRoom.MonthManagerPriceUSDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVATNull() {
                return this.IsNull(this.tabledsRentContractRoom.VATColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVATNull() {
                this[this.tabledsRentContractRoom.VATColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonthExtraTimePriceVNDNull() {
                return this.IsNull(this.tabledsRentContractRoom.MonthExtraTimePriceVNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonthExtraTimePriceVNDNull() {
                this[this.tabledsRentContractRoom.MonthExtraTimePriceVNDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonthExtraTimePriceUSDNull() {
                return this.IsNull(this.tabledsRentContractRoom.MonthExtraTimePriceUSDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonthExtraTimePriceUSDNull() {
                this[this.tabledsRentContractRoom.MonthExtraTimePriceUSDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsRentContractRoomRowChangeEvent : global::System.EventArgs {
            
            private dsRentContractRoomRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsRentContractRoomRowChangeEvent(dsRentContractRoomRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsRentContractRoomRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591