//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5448
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Man.Data_Set {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("_BuildingExtraTimeInfo")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class _BuildingExtraTimeInfo : global::System.Data.DataSet {
        
        private dsBuildingExtraTimeInfoDataTable tabledsBuildingExtraTimeInfo;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public _BuildingExtraTimeInfo() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected _BuildingExtraTimeInfo(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["dsBuildingExtraTimeInfo"] != null)) {
                    base.Tables.Add(new dsBuildingExtraTimeInfoDataTable(ds.Tables["dsBuildingExtraTimeInfo"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsBuildingExtraTimeInfoDataTable dsBuildingExtraTimeInfo {
            get {
                return this.tabledsBuildingExtraTimeInfo;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            _BuildingExtraTimeInfo cln = ((_BuildingExtraTimeInfo)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["dsBuildingExtraTimeInfo"] != null)) {
                    base.Tables.Add(new dsBuildingExtraTimeInfoDataTable(ds.Tables["dsBuildingExtraTimeInfo"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tabledsBuildingExtraTimeInfo = ((dsBuildingExtraTimeInfoDataTable)(base.Tables["dsBuildingExtraTimeInfo"]));
            if ((initTable == true)) {
                if ((this.tabledsBuildingExtraTimeInfo != null)) {
                    this.tabledsBuildingExtraTimeInfo.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "BuildingExtraTimeInfo";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/Customer.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabledsBuildingExtraTimeInfo = new dsBuildingExtraTimeInfoDataTable();
            base.Tables.Add(this.tabledsBuildingExtraTimeInfo);
            this.ExtendedProperties.Add("Generator_DataSetName", "_BuildingExtraTimeInfo");
            this.ExtendedProperties.Add("Generator_UserDSName", "BuildingExtraTimeInfo");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsBuildingExtraTimeInfo() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            _BuildingExtraTimeInfo ds = new _BuildingExtraTimeInfo();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void dsBuildingExtraTimeInfoRowChangeEventHandler(object sender, dsBuildingExtraTimeInfoRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsBuildingExtraTimeInfoDataTable : global::System.Data.TypedTableBase<dsBuildingExtraTimeInfoRow> {
            
            private global::System.Data.DataColumn columnYearMonth;
            
            private global::System.Data.DataColumn columnBuildingId;
            
            private global::System.Data.DataColumn columnCompanyName;
            
            private global::System.Data.DataColumn columnRegional;
            
            private global::System.Data.DataColumn columnFloor;
            
            private global::System.Data.DataColumn columnArea;
            
            private global::System.Data.DataColumn columnHour;
            
            private global::System.Data.DataColumn columnPriceVND;
            
            private global::System.Data.DataColumn columnPriceUSD;
            
            private global::System.Data.DataColumn columnLastPriceVND;
            
            private global::System.Data.DataColumn columnLastPriceUSD;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsBuildingExtraTimeInfoDataTable() {
                this.TableName = "dsBuildingExtraTimeInfo";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsBuildingExtraTimeInfoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsBuildingExtraTimeInfoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YearMonthColumn {
                get {
                    return this.columnYearMonth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BuildingIdColumn {
                get {
                    return this.columnBuildingId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyNameColumn {
                get {
                    return this.columnCompanyName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RegionalColumn {
                get {
                    return this.columnRegional;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FloorColumn {
                get {
                    return this.columnFloor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AreaColumn {
                get {
                    return this.columnArea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HourColumn {
                get {
                    return this.columnHour;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PriceVNDColumn {
                get {
                    return this.columnPriceVND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PriceUSDColumn {
                get {
                    return this.columnPriceUSD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastPriceVNDColumn {
                get {
                    return this.columnLastPriceVND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastPriceUSDColumn {
                get {
                    return this.columnLastPriceUSD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsBuildingExtraTimeInfoRow this[int index] {
                get {
                    return ((dsBuildingExtraTimeInfoRow)(this.Rows[index]));
                }
            }
            
            public event dsBuildingExtraTimeInfoRowChangeEventHandler dsBuildingExtraTimeInfoRowChanging;
            
            public event dsBuildingExtraTimeInfoRowChangeEventHandler dsBuildingExtraTimeInfoRowChanged;
            
            public event dsBuildingExtraTimeInfoRowChangeEventHandler dsBuildingExtraTimeInfoRowDeleting;
            
            public event dsBuildingExtraTimeInfoRowChangeEventHandler dsBuildingExtraTimeInfoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsBuildingExtraTimeInfoRow(dsBuildingExtraTimeInfoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsBuildingExtraTimeInfoRow AdddsBuildingExtraTimeInfoRow(string YearMonth, string BuildingId, string CompanyName, string Regional, string Floor, decimal Area, decimal Hour, double PriceVND, decimal PriceUSD, double LastPriceVND, decimal LastPriceUSD) {
                dsBuildingExtraTimeInfoRow rowdsBuildingExtraTimeInfoRow = ((dsBuildingExtraTimeInfoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        YearMonth,
                        BuildingId,
                        CompanyName,
                        Regional,
                        Floor,
                        Area,
                        Hour,
                        PriceVND,
                        PriceUSD,
                        LastPriceVND,
                        LastPriceUSD};
                rowdsBuildingExtraTimeInfoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsBuildingExtraTimeInfoRow);
                return rowdsBuildingExtraTimeInfoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsBuildingExtraTimeInfoDataTable cln = ((dsBuildingExtraTimeInfoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsBuildingExtraTimeInfoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnYearMonth = base.Columns["YearMonth"];
                this.columnBuildingId = base.Columns["BuildingId"];
                this.columnCompanyName = base.Columns["CompanyName"];
                this.columnRegional = base.Columns["Regional"];
                this.columnFloor = base.Columns["Floor"];
                this.columnArea = base.Columns["Area"];
                this.columnHour = base.Columns["Hour"];
                this.columnPriceVND = base.Columns["PriceVND"];
                this.columnPriceUSD = base.Columns["PriceUSD"];
                this.columnLastPriceVND = base.Columns["LastPriceVND"];
                this.columnLastPriceUSD = base.Columns["LastPriceUSD"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnYearMonth = new global::System.Data.DataColumn("YearMonth", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYearMonth);
                this.columnBuildingId = new global::System.Data.DataColumn("BuildingId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBuildingId);
                this.columnCompanyName = new global::System.Data.DataColumn("CompanyName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyName);
                this.columnRegional = new global::System.Data.DataColumn("Regional", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegional);
                this.columnFloor = new global::System.Data.DataColumn("Floor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFloor);
                this.columnArea = new global::System.Data.DataColumn("Area", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArea);
                this.columnHour = new global::System.Data.DataColumn("Hour", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHour);
                this.columnPriceVND = new global::System.Data.DataColumn("PriceVND", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPriceVND);
                this.columnPriceUSD = new global::System.Data.DataColumn("PriceUSD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPriceUSD);
                this.columnLastPriceVND = new global::System.Data.DataColumn("LastPriceVND", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastPriceVND);
                this.columnLastPriceUSD = new global::System.Data.DataColumn("LastPriceUSD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastPriceUSD);
                this.columnLastPriceVND.Caption = "DataColumn1";
                this.columnLastPriceUSD.Caption = "DataColumn1";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsBuildingExtraTimeInfoRow NewdsBuildingExtraTimeInfoRow() {
                return ((dsBuildingExtraTimeInfoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsBuildingExtraTimeInfoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsBuildingExtraTimeInfoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsBuildingExtraTimeInfoRowChanged != null)) {
                    this.dsBuildingExtraTimeInfoRowChanged(this, new dsBuildingExtraTimeInfoRowChangeEvent(((dsBuildingExtraTimeInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsBuildingExtraTimeInfoRowChanging != null)) {
                    this.dsBuildingExtraTimeInfoRowChanging(this, new dsBuildingExtraTimeInfoRowChangeEvent(((dsBuildingExtraTimeInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsBuildingExtraTimeInfoRowDeleted != null)) {
                    this.dsBuildingExtraTimeInfoRowDeleted(this, new dsBuildingExtraTimeInfoRowChangeEvent(((dsBuildingExtraTimeInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsBuildingExtraTimeInfoRowDeleting != null)) {
                    this.dsBuildingExtraTimeInfoRowDeleting(this, new dsBuildingExtraTimeInfoRowChangeEvent(((dsBuildingExtraTimeInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsBuildingExtraTimeInfoRow(dsBuildingExtraTimeInfoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                _BuildingExtraTimeInfo ds = new _BuildingExtraTimeInfo();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsBuildingExtraTimeInfoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsBuildingExtraTimeInfoRow : global::System.Data.DataRow {
            
            private dsBuildingExtraTimeInfoDataTable tabledsBuildingExtraTimeInfo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsBuildingExtraTimeInfoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsBuildingExtraTimeInfo = ((dsBuildingExtraTimeInfoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string YearMonth {
                get {
                    try {
                        return ((string)(this[this.tabledsBuildingExtraTimeInfo.YearMonthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'YearMonth\' in table \'dsBuildingExtraTimeInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsBuildingExtraTimeInfo.YearMonthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BuildingId {
                get {
                    try {
                        return ((string)(this[this.tabledsBuildingExtraTimeInfo.BuildingIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BuildingId\' in table \'dsBuildingExtraTimeInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsBuildingExtraTimeInfo.BuildingIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompanyName {
                get {
                    try {
                        return ((string)(this[this.tabledsBuildingExtraTimeInfo.CompanyNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyName\' in table \'dsBuildingExtraTimeInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsBuildingExtraTimeInfo.CompanyNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Regional {
                get {
                    try {
                        return ((string)(this[this.tabledsBuildingExtraTimeInfo.RegionalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Regional\' in table \'dsBuildingExtraTimeInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsBuildingExtraTimeInfo.RegionalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Floor {
                get {
                    try {
                        return ((string)(this[this.tabledsBuildingExtraTimeInfo.FloorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Floor\' in table \'dsBuildingExtraTimeInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsBuildingExtraTimeInfo.FloorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Area {
                get {
                    try {
                        return ((decimal)(this[this.tabledsBuildingExtraTimeInfo.AreaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Area\' in table \'dsBuildingExtraTimeInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsBuildingExtraTimeInfo.AreaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Hour {
                get {
                    try {
                        return ((decimal)(this[this.tabledsBuildingExtraTimeInfo.HourColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Hour\' in table \'dsBuildingExtraTimeInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsBuildingExtraTimeInfo.HourColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PriceVND {
                get {
                    try {
                        return ((double)(this[this.tabledsBuildingExtraTimeInfo.PriceVNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PriceVND\' in table \'dsBuildingExtraTimeInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsBuildingExtraTimeInfo.PriceVNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PriceUSD {
                get {
                    try {
                        return ((decimal)(this[this.tabledsBuildingExtraTimeInfo.PriceUSDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PriceUSD\' in table \'dsBuildingExtraTimeInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsBuildingExtraTimeInfo.PriceUSDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double LastPriceVND {
                get {
                    try {
                        return ((double)(this[this.tabledsBuildingExtraTimeInfo.LastPriceVNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastPriceVND\' in table \'dsBuildingExtraTimeInfo\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tabledsBuildingExtraTimeInfo.LastPriceVNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LastPriceUSD {
                get {
                    try {
                        return ((decimal)(this[this.tabledsBuildingExtraTimeInfo.LastPriceUSDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastPriceUSD\' in table \'dsBuildingExtraTimeInfo\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tabledsBuildingExtraTimeInfo.LastPriceUSDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsYearMonthNull() {
                return this.IsNull(this.tabledsBuildingExtraTimeInfo.YearMonthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetYearMonthNull() {
                this[this.tabledsBuildingExtraTimeInfo.YearMonthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBuildingIdNull() {
                return this.IsNull(this.tabledsBuildingExtraTimeInfo.BuildingIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBuildingIdNull() {
                this[this.tabledsBuildingExtraTimeInfo.BuildingIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyNameNull() {
                return this.IsNull(this.tabledsBuildingExtraTimeInfo.CompanyNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyNameNull() {
                this[this.tabledsBuildingExtraTimeInfo.CompanyNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRegionalNull() {
                return this.IsNull(this.tabledsBuildingExtraTimeInfo.RegionalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRegionalNull() {
                this[this.tabledsBuildingExtraTimeInfo.RegionalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFloorNull() {
                return this.IsNull(this.tabledsBuildingExtraTimeInfo.FloorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFloorNull() {
                this[this.tabledsBuildingExtraTimeInfo.FloorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAreaNull() {
                return this.IsNull(this.tabledsBuildingExtraTimeInfo.AreaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAreaNull() {
                this[this.tabledsBuildingExtraTimeInfo.AreaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHourNull() {
                return this.IsNull(this.tabledsBuildingExtraTimeInfo.HourColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHourNull() {
                this[this.tabledsBuildingExtraTimeInfo.HourColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPriceVNDNull() {
                return this.IsNull(this.tabledsBuildingExtraTimeInfo.PriceVNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPriceVNDNull() {
                this[this.tabledsBuildingExtraTimeInfo.PriceVNDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPriceUSDNull() {
                return this.IsNull(this.tabledsBuildingExtraTimeInfo.PriceUSDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPriceUSDNull() {
                this[this.tabledsBuildingExtraTimeInfo.PriceUSDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastPriceVNDNull() {
                return this.IsNull(this.tabledsBuildingExtraTimeInfo.LastPriceVNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastPriceVNDNull() {
                this[this.tabledsBuildingExtraTimeInfo.LastPriceVNDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastPriceUSDNull() {
                return this.IsNull(this.tabledsBuildingExtraTimeInfo.LastPriceUSDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastPriceUSDNull() {
                this[this.tabledsBuildingExtraTimeInfo.LastPriceUSDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsBuildingExtraTimeInfoRowChangeEvent : global::System.EventArgs {
            
            private dsBuildingExtraTimeInfoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsBuildingExtraTimeInfoRowChangeEvent(dsBuildingExtraTimeInfoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsBuildingExtraTimeInfoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591