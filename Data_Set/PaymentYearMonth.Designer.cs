//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5448
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Man.Data_Set {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("PaymentYearMonth")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class PaymentYearMonth : global::System.Data.DataSet {
        
        private dsPaymentYearMonthDataTable tabledsPaymentYearMonth;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PaymentYearMonth() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected PaymentYearMonth(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["dsPaymentYearMonth"] != null)) {
                    base.Tables.Add(new dsPaymentYearMonthDataTable(ds.Tables["dsPaymentYearMonth"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsPaymentYearMonthDataTable dsPaymentYearMonth {
            get {
                return this.tabledsPaymentYearMonth;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            PaymentYearMonth cln = ((PaymentYearMonth)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["dsPaymentYearMonth"] != null)) {
                    base.Tables.Add(new dsPaymentYearMonthDataTable(ds.Tables["dsPaymentYearMonth"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tabledsPaymentYearMonth = ((dsPaymentYearMonthDataTable)(base.Tables["dsPaymentYearMonth"]));
            if ((initTable == true)) {
                if ((this.tabledsPaymentYearMonth != null)) {
                    this.tabledsPaymentYearMonth.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "PaymentYearMonth";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/PaymentBooking.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabledsPaymentYearMonth = new dsPaymentYearMonthDataTable();
            base.Tables.Add(this.tabledsPaymentYearMonth);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsPaymentYearMonth() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            PaymentYearMonth ds = new PaymentYearMonth();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void dsPaymentYearMonthRowChangeEventHandler(object sender, dsPaymentYearMonthRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsPaymentYearMonthDataTable : global::System.Data.TypedTableBase<dsPaymentYearMonthRow> {
            
            private global::System.Data.DataColumn coloumnBuildingId;
            
            private global::System.Data.DataColumn coloumnCustomerId;
            
            private global::System.Data.DataColumn coloumnYearMonth;
            
            private global::System.Data.DataColumn coloumnBillDate;
            
            private global::System.Data.DataColumn coloumnUsdExchangeDate;
            
            private global::System.Data.DataColumn coloumnUsdExchange;
            
            private global::System.Data.DataColumn coloumnRentUSD;
            
            private global::System.Data.DataColumn coloumnRentVND;
            
            private global::System.Data.DataColumn coloumnManagerUSD;
            
            private global::System.Data.DataColumn coloumnManagerVND;
            
            private global::System.Data.DataColumn coloumnElectUSD;
            
            private global::System.Data.DataColumn coloumnElecVND;
            
            private global::System.Data.DataColumn coloumnWaterUSD;
            
            private global::System.Data.DataColumn coloumnWaterVND;
            
            private global::System.Data.DataColumn coloumnServiceUSD;
            
            private global::System.Data.DataColumn coloumnServiceVND;
            
            private global::System.Data.DataColumn coloumnParkingUSD;
            
            private global::System.Data.DataColumn coloumnParkingVND;
            
            private global::System.Data.DataColumn coloumnBookingUSD;
            
            private global::System.Data.DataColumn coloumnBookingVND;
            
            private global::System.Data.DataColumn coloumnPaidRentUSD;
            
            private global::System.Data.DataColumn coloumnPaidRentVND;
            
            private global::System.Data.DataColumn coloumnPaidManagerUSD;
            
            private global::System.Data.DataColumn coloumnPaidManagerVND;
            
            private global::System.Data.DataColumn coloumnPaidElectUSD;
            
            private global::System.Data.DataColumn coloumnPaidElecVND;
            
            private global::System.Data.DataColumn coloumnPaidWaterUSD;
            
            private global::System.Data.DataColumn coloumnPaidWaterVND;
            
            private global::System.Data.DataColumn coloumnPaidServiceUSD;
            
            private global::System.Data.DataColumn coloumnPaidServiceVND;
            
            private global::System.Data.DataColumn coloumnPaidParkingUSD;
            
            private global::System.Data.DataColumn coloumnPaidParkingVND;
            
            private global::System.Data.DataColumn coloumnPaidBookingUSD;
            
            private global::System.Data.DataColumn coloumnPaidBookingVND;
            
            private global::System.Data.DataColumn coloumnComment;
            
            private global::System.Data.DataColumn coloumnCreated;
            
            private global::System.Data.DataColumn coloumnCreatedBy;
            
            private global::System.Data.DataColumn coloumnModified;
            
            private global::System.Data.DataColumn coloumnModifiedBy;
            
            private global::System.Data.DataColumn coloumnDelFlag;
            
            private global::System.Data.DataColumn coloumnExtraTimePriceVND;
            
            private global::System.Data.DataColumn coloumnExtraTimePriceUSD;
            
            private global::System.Data.DataColumn coloumnPaidExtraTimePriceVND;
            
            private global::System.Data.DataColumn coloumnPaidExtraTimePriceUSD;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPaymentYearMonthDataTable() {
                this.TableName = "dsPaymentYearMonth";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsPaymentYearMonthDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsPaymentYearMonthDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BuildingIdColumn {
                get {
                    return this.coloumnBuildingId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerIdColumn {
                get {
                    return this.coloumnCustomerId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YearMonthColumn {
                get {
                    return this.coloumnYearMonth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BillDateColumn {
                get {
                    return this.coloumnBillDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UsdExchangeDateColumn {
                get {
                    return this.coloumnUsdExchangeDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UsdExchangeColumn {
                get {
                    return this.coloumnUsdExchange;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RentUSDColumn {
                get {
                    return this.coloumnRentUSD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RentVNDColumn {
                get {
                    return this.coloumnRentVND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ManagerUSDColumn {
                get {
                    return this.coloumnManagerUSD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ManagerVNDColumn {
                get {
                    return this.coloumnManagerVND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ElectUSDColumn {
                get {
                    return this.coloumnElectUSD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ElecVNDColumn {
                get {
                    return this.coloumnElecVND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WaterUSDColumn {
                get {
                    return this.coloumnWaterUSD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WaterVNDColumn {
                get {
                    return this.coloumnWaterVND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ServiceUSDColumn {
                get {
                    return this.coloumnServiceUSD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ServiceVNDColumn {
                get {
                    return this.coloumnServiceVND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParkingUSDColumn {
                get {
                    return this.coloumnParkingUSD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParkingVNDColumn {
                get {
                    return this.coloumnParkingVND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BookingUSDColumn {
                get {
                    return this.coloumnBookingUSD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BookingVNDColumn {
                get {
                    return this.coloumnBookingVND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaidRentUSDColumn {
                get {
                    return this.coloumnPaidRentUSD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaidRentVNDColumn {
                get {
                    return this.coloumnPaidRentVND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaidManagerUSDColumn {
                get {
                    return this.coloumnPaidManagerUSD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaidManagerVNDColumn {
                get {
                    return this.coloumnPaidManagerVND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaidElectUSDColumn {
                get {
                    return this.coloumnPaidElectUSD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaidElecVNDColumn {
                get {
                    return this.coloumnPaidElecVND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaidWaterUSDColumn {
                get {
                    return this.coloumnPaidWaterUSD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaidWaterVNDColumn {
                get {
                    return this.coloumnPaidWaterVND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaidServiceUSDColumn {
                get {
                    return this.coloumnPaidServiceUSD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaidServiceVNDColumn {
                get {
                    return this.coloumnPaidServiceVND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaidParkingUSDColumn {
                get {
                    return this.coloumnPaidParkingUSD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaidParkingVNDColumn {
                get {
                    return this.coloumnPaidParkingVND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaidBookingUSDColumn {
                get {
                    return this.coloumnPaidBookingUSD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaidBookingVNDColumn {
                get {
                    return this.coloumnPaidBookingVND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentColumn {
                get {
                    return this.coloumnComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedColumn {
                get {
                    return this.coloumnCreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.coloumnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedColumn {
                get {
                    return this.coloumnModified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedByColumn {
                get {
                    return this.coloumnModifiedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DelFlagColumn {
                get {
                    return this.coloumnDelFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExtraTimePriceVNDColumn {
                get {
                    return this.coloumnExtraTimePriceVND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExtraTimePriceUSDColumn {
                get {
                    return this.coloumnExtraTimePriceUSD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaidExtraTimePriceVNDColumn {
                get {
                    return this.coloumnPaidExtraTimePriceVND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaidExtraTimePriceUSDColumn {
                get {
                    return this.coloumnPaidExtraTimePriceUSD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPaymentYearMonthRow this[int index] {
                get {
                    return ((dsPaymentYearMonthRow)(this.Rows[index]));
                }
            }
            
            public event dsPaymentYearMonthRowChangeEventHandler dsPaymentYearMonthRowChanging;
            
            public event dsPaymentYearMonthRowChangeEventHandler dsPaymentYearMonthRowChanged;
            
            public event dsPaymentYearMonthRowChangeEventHandler dsPaymentYearMonthRowDeleting;
            
            public event dsPaymentYearMonthRowChangeEventHandler dsPaymentYearMonthRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsPaymentYearMonthRow(dsPaymentYearMonthRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPaymentYearMonthRow AdddsPaymentYearMonthRow(
                        string BuildingId, 
                        string CustomerId, 
                        string YearMonth, 
                        string BillDate, 
                        string UsdExchangeDate, 
                        string UsdExchange, 
                        string RentUSD, 
                        string RentVND, 
                        string ManagerUSD, 
                        string ManagerVND, 
                        string ElectUSD, 
                        string ElecVND, 
                        string WaterUSD, 
                        string WaterVND, 
                        string ServiceUSD, 
                        string ServiceVND, 
                        string ParkingUSD, 
                        string ParkingVND, 
                        string BookingUSD, 
                        string BookingVND, 
                        string PaidRentUSD, 
                        string PaidRentVND, 
                        string PaidManagerUSD, 
                        string PaidManagerVND, 
                        string PaidElectUSD, 
                        string PaidElecVND, 
                        string PaidWaterUSD, 
                        string PaidWaterVND, 
                        string PaidServiceUSD, 
                        string PaidServiceVND, 
                        string PaidParkingUSD, 
                        string PaidParkingVND, 
                        string PaidBookingUSD, 
                        string PaidBookingVND, 
                        string Comment, 
                        string Created, 
                        string CreatedBy, 
                        string Modified, 
                        string ModifiedBy, 
                        string DelFlag, 
                        string ExtraTimePriceVND, 
                        string ExtraTimePriceUSD, 
                        string PaidExtraTimePriceVND, 
                        string PaidExtraTimePriceUSD) {
                dsPaymentYearMonthRow rowdsPaymentYearMonthRow = ((dsPaymentYearMonthRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        BuildingId,
                        CustomerId,
                        YearMonth,
                        BillDate,
                        UsdExchangeDate,
                        UsdExchange,
                        RentUSD,
                        RentVND,
                        ManagerUSD,
                        ManagerVND,
                        ElectUSD,
                        ElecVND,
                        WaterUSD,
                        WaterVND,
                        ServiceUSD,
                        ServiceVND,
                        ParkingUSD,
                        ParkingVND,
                        BookingUSD,
                        BookingVND,
                        PaidRentUSD,
                        PaidRentVND,
                        PaidManagerUSD,
                        PaidManagerVND,
                        PaidElectUSD,
                        PaidElecVND,
                        PaidWaterUSD,
                        PaidWaterVND,
                        PaidServiceUSD,
                        PaidServiceVND,
                        PaidParkingUSD,
                        PaidParkingVND,
                        PaidBookingUSD,
                        PaidBookingVND,
                        Comment,
                        Created,
                        CreatedBy,
                        Modified,
                        ModifiedBy,
                        DelFlag,
                        ExtraTimePriceVND,
                        ExtraTimePriceUSD,
                        PaidExtraTimePriceVND,
                        PaidExtraTimePriceUSD};
                rowdsPaymentYearMonthRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsPaymentYearMonthRow);
                return rowdsPaymentYearMonthRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsPaymentYearMonthDataTable cln = ((dsPaymentYearMonthDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsPaymentYearMonthDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.coloumnBuildingId = base.Columns["BuildingId"];
                this.coloumnCustomerId = base.Columns["CustomerId"];
                this.coloumnYearMonth = base.Columns["YearMonth"];
                this.coloumnBillDate = base.Columns["BillDate"];
                this.coloumnUsdExchangeDate = base.Columns["UsdExchangeDate"];
                this.coloumnUsdExchange = base.Columns["UsdExchange"];
                this.coloumnRentUSD = base.Columns["RentUSD"];
                this.coloumnRentVND = base.Columns["RentVND"];
                this.coloumnManagerUSD = base.Columns["ManagerUSD"];
                this.coloumnManagerVND = base.Columns["ManagerVND"];
                this.coloumnElectUSD = base.Columns["ElectUSD"];
                this.coloumnElecVND = base.Columns["ElecVND"];
                this.coloumnWaterUSD = base.Columns["WaterUSD"];
                this.coloumnWaterVND = base.Columns["WaterVND"];
                this.coloumnServiceUSD = base.Columns["ServiceUSD"];
                this.coloumnServiceVND = base.Columns["ServiceVND"];
                this.coloumnParkingUSD = base.Columns["ParkingUSD"];
                this.coloumnParkingVND = base.Columns["ParkingVND"];
                this.coloumnBookingUSD = base.Columns["BookingUSD"];
                this.coloumnBookingVND = base.Columns["BookingVND"];
                this.coloumnPaidRentUSD = base.Columns["PaidRentUSD"];
                this.coloumnPaidRentVND = base.Columns["PaidRentVND"];
                this.coloumnPaidManagerUSD = base.Columns["PaidManagerUSD"];
                this.coloumnPaidManagerVND = base.Columns["PaidManagerVND"];
                this.coloumnPaidElectUSD = base.Columns["PaidElectUSD"];
                this.coloumnPaidElecVND = base.Columns["PaidElecVND"];
                this.coloumnPaidWaterUSD = base.Columns["PaidWaterUSD"];
                this.coloumnPaidWaterVND = base.Columns["PaidWaterVND"];
                this.coloumnPaidServiceUSD = base.Columns["PaidServiceUSD"];
                this.coloumnPaidServiceVND = base.Columns["PaidServiceVND"];
                this.coloumnPaidParkingUSD = base.Columns["PaidParkingUSD"];
                this.coloumnPaidParkingVND = base.Columns["PaidParkingVND"];
                this.coloumnPaidBookingUSD = base.Columns["PaidBookingUSD"];
                this.coloumnPaidBookingVND = base.Columns["PaidBookingVND"];
                this.coloumnComment = base.Columns["Comment"];
                this.coloumnCreated = base.Columns["Created"];
                this.coloumnCreatedBy = base.Columns["CreatedBy"];
                this.coloumnModified = base.Columns["Modified"];
                this.coloumnModifiedBy = base.Columns["ModifiedBy"];
                this.coloumnDelFlag = base.Columns["DelFlag"];
                this.coloumnExtraTimePriceVND = base.Columns["ExtraTimePriceVND"];
                this.coloumnExtraTimePriceUSD = base.Columns["ExtraTimePriceUSD"];
                this.coloumnPaidExtraTimePriceVND = base.Columns["PaidExtraTimePriceVND"];
                this.coloumnPaidExtraTimePriceUSD = base.Columns["PaidExtraTimePriceUSD"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.coloumnBuildingId = new global::System.Data.DataColumn("BuildingId", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnBuildingId.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnBuildingId");
                this.coloumnBuildingId.ExtendedProperties.Add("Generator_UserColumnName", "BuildingId");
                base.Columns.Add(this.coloumnBuildingId);
                this.coloumnCustomerId = new global::System.Data.DataColumn("CustomerId", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnCustomerId.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnCustomerId");
                this.coloumnCustomerId.ExtendedProperties.Add("Generator_UserColumnName", "CustomerId");
                base.Columns.Add(this.coloumnCustomerId);
                this.coloumnYearMonth = new global::System.Data.DataColumn("YearMonth", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnYearMonth.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnYearMonth");
                this.coloumnYearMonth.ExtendedProperties.Add("Generator_UserColumnName", "YearMonth");
                base.Columns.Add(this.coloumnYearMonth);
                this.coloumnBillDate = new global::System.Data.DataColumn("BillDate", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnBillDate.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnBillDate");
                this.coloumnBillDate.ExtendedProperties.Add("Generator_UserColumnName", "BillDate");
                base.Columns.Add(this.coloumnBillDate);
                this.coloumnUsdExchangeDate = new global::System.Data.DataColumn("UsdExchangeDate", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnUsdExchangeDate.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnUsdExchangeDate");
                this.coloumnUsdExchangeDate.ExtendedProperties.Add("Generator_UserColumnName", "UsdExchangeDate");
                base.Columns.Add(this.coloumnUsdExchangeDate);
                this.coloumnUsdExchange = new global::System.Data.DataColumn("UsdExchange", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnUsdExchange.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnUsdExchange");
                this.coloumnUsdExchange.ExtendedProperties.Add("Generator_UserColumnName", "UsdExchange");
                base.Columns.Add(this.coloumnUsdExchange);
                this.coloumnRentUSD = new global::System.Data.DataColumn("RentUSD", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnRentUSD.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnRentUSD");
                this.coloumnRentUSD.ExtendedProperties.Add("Generator_UserColumnName", "RentUSD");
                base.Columns.Add(this.coloumnRentUSD);
                this.coloumnRentVND = new global::System.Data.DataColumn("RentVND", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnRentVND.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnRentVND");
                this.coloumnRentVND.ExtendedProperties.Add("Generator_UserColumnName", "RentVND");
                base.Columns.Add(this.coloumnRentVND);
                this.coloumnManagerUSD = new global::System.Data.DataColumn("ManagerUSD", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnManagerUSD.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnManagerUSD");
                this.coloumnManagerUSD.ExtendedProperties.Add("Generator_UserColumnName", "ManagerUSD");
                base.Columns.Add(this.coloumnManagerUSD);
                this.coloumnManagerVND = new global::System.Data.DataColumn("ManagerVND", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnManagerVND.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnManagerVND");
                this.coloumnManagerVND.ExtendedProperties.Add("Generator_UserColumnName", "ManagerVND");
                base.Columns.Add(this.coloumnManagerVND);
                this.coloumnElectUSD = new global::System.Data.DataColumn("ElectUSD", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnElectUSD.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnElectUSD");
                this.coloumnElectUSD.ExtendedProperties.Add("Generator_UserColumnName", "ElectUSD");
                base.Columns.Add(this.coloumnElectUSD);
                this.coloumnElecVND = new global::System.Data.DataColumn("ElecVND", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnElecVND.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnElecVND");
                this.coloumnElecVND.ExtendedProperties.Add("Generator_UserColumnName", "ElecVND");
                base.Columns.Add(this.coloumnElecVND);
                this.coloumnWaterUSD = new global::System.Data.DataColumn("WaterUSD", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnWaterUSD.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnWaterUSD");
                this.coloumnWaterUSD.ExtendedProperties.Add("Generator_UserColumnName", "WaterUSD");
                base.Columns.Add(this.coloumnWaterUSD);
                this.coloumnWaterVND = new global::System.Data.DataColumn("WaterVND", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnWaterVND.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnWaterVND");
                this.coloumnWaterVND.ExtendedProperties.Add("Generator_UserColumnName", "WaterVND");
                base.Columns.Add(this.coloumnWaterVND);
                this.coloumnServiceUSD = new global::System.Data.DataColumn("ServiceUSD", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnServiceUSD.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnServiceUSD");
                this.coloumnServiceUSD.ExtendedProperties.Add("Generator_UserColumnName", "ServiceUSD");
                base.Columns.Add(this.coloumnServiceUSD);
                this.coloumnServiceVND = new global::System.Data.DataColumn("ServiceVND", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnServiceVND.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnServiceVND");
                this.coloumnServiceVND.ExtendedProperties.Add("Generator_UserColumnName", "ServiceVND");
                base.Columns.Add(this.coloumnServiceVND);
                this.coloumnParkingUSD = new global::System.Data.DataColumn("ParkingUSD", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnParkingUSD.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnParkingUSD");
                this.coloumnParkingUSD.ExtendedProperties.Add("Generator_UserColumnName", "ParkingUSD");
                base.Columns.Add(this.coloumnParkingUSD);
                this.coloumnParkingVND = new global::System.Data.DataColumn("ParkingVND", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnParkingVND.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnParkingVND");
                this.coloumnParkingVND.ExtendedProperties.Add("Generator_UserColumnName", "ParkingVND");
                base.Columns.Add(this.coloumnParkingVND);
                this.coloumnBookingUSD = new global::System.Data.DataColumn("BookingUSD", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnBookingUSD.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnBookingUSD");
                this.coloumnBookingUSD.ExtendedProperties.Add("Generator_UserColumnName", "BookingUSD");
                base.Columns.Add(this.coloumnBookingUSD);
                this.coloumnBookingVND = new global::System.Data.DataColumn("BookingVND", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnBookingVND.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnBookingVND");
                this.coloumnBookingVND.ExtendedProperties.Add("Generator_UserColumnName", "BookingVND");
                base.Columns.Add(this.coloumnBookingVND);
                this.coloumnPaidRentUSD = new global::System.Data.DataColumn("PaidRentUSD", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnPaidRentUSD.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnPaidRentUSD");
                this.coloumnPaidRentUSD.ExtendedProperties.Add("Generator_UserColumnName", "PaidRentUSD");
                base.Columns.Add(this.coloumnPaidRentUSD);
                this.coloumnPaidRentVND = new global::System.Data.DataColumn("PaidRentVND", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnPaidRentVND.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnPaidRentVND");
                this.coloumnPaidRentVND.ExtendedProperties.Add("Generator_UserColumnName", "PaidRentVND");
                base.Columns.Add(this.coloumnPaidRentVND);
                this.coloumnPaidManagerUSD = new global::System.Data.DataColumn("PaidManagerUSD", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnPaidManagerUSD.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnPaidManagerUSD");
                this.coloumnPaidManagerUSD.ExtendedProperties.Add("Generator_UserColumnName", "PaidManagerUSD");
                base.Columns.Add(this.coloumnPaidManagerUSD);
                this.coloumnPaidManagerVND = new global::System.Data.DataColumn("PaidManagerVND", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnPaidManagerVND.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnPaidManagerVND");
                this.coloumnPaidManagerVND.ExtendedProperties.Add("Generator_UserColumnName", "PaidManagerVND");
                base.Columns.Add(this.coloumnPaidManagerVND);
                this.coloumnPaidElectUSD = new global::System.Data.DataColumn("PaidElectUSD", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnPaidElectUSD.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnPaidElectUSD");
                this.coloumnPaidElectUSD.ExtendedProperties.Add("Generator_UserColumnName", "PaidElectUSD");
                base.Columns.Add(this.coloumnPaidElectUSD);
                this.coloumnPaidElecVND = new global::System.Data.DataColumn("PaidElecVND", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnPaidElecVND.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnPaidElecVND");
                this.coloumnPaidElecVND.ExtendedProperties.Add("Generator_UserColumnName", "PaidElecVND");
                base.Columns.Add(this.coloumnPaidElecVND);
                this.coloumnPaidWaterUSD = new global::System.Data.DataColumn("PaidWaterUSD", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnPaidWaterUSD.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnPaidWaterUSD");
                this.coloumnPaidWaterUSD.ExtendedProperties.Add("Generator_UserColumnName", "PaidWaterUSD");
                base.Columns.Add(this.coloumnPaidWaterUSD);
                this.coloumnPaidWaterVND = new global::System.Data.DataColumn("PaidWaterVND", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnPaidWaterVND.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnPaidWaterVND");
                this.coloumnPaidWaterVND.ExtendedProperties.Add("Generator_UserColumnName", "PaidWaterVND");
                base.Columns.Add(this.coloumnPaidWaterVND);
                this.coloumnPaidServiceUSD = new global::System.Data.DataColumn("PaidServiceUSD", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnPaidServiceUSD.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnPaidServiceUSD");
                this.coloumnPaidServiceUSD.ExtendedProperties.Add("Generator_UserColumnName", "PaidServiceUSD");
                base.Columns.Add(this.coloumnPaidServiceUSD);
                this.coloumnPaidServiceVND = new global::System.Data.DataColumn("PaidServiceVND", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnPaidServiceVND.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnPaidServiceVND");
                this.coloumnPaidServiceVND.ExtendedProperties.Add("Generator_UserColumnName", "PaidServiceVND");
                base.Columns.Add(this.coloumnPaidServiceVND);
                this.coloumnPaidParkingUSD = new global::System.Data.DataColumn("PaidParkingUSD", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnPaidParkingUSD.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnPaidParkingUSD");
                this.coloumnPaidParkingUSD.ExtendedProperties.Add("Generator_UserColumnName", "PaidParkingUSD");
                base.Columns.Add(this.coloumnPaidParkingUSD);
                this.coloumnPaidParkingVND = new global::System.Data.DataColumn("PaidParkingVND", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnPaidParkingVND.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnPaidParkingVND");
                this.coloumnPaidParkingVND.ExtendedProperties.Add("Generator_UserColumnName", "PaidParkingVND");
                base.Columns.Add(this.coloumnPaidParkingVND);
                this.coloumnPaidBookingUSD = new global::System.Data.DataColumn("PaidBookingUSD", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnPaidBookingUSD.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnPaidBookingUSD");
                this.coloumnPaidBookingUSD.ExtendedProperties.Add("Generator_UserColumnName", "PaidBookingUSD");
                base.Columns.Add(this.coloumnPaidBookingUSD);
                this.coloumnPaidBookingVND = new global::System.Data.DataColumn("PaidBookingVND", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnPaidBookingVND.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnPaidBookingVND");
                this.coloumnPaidBookingVND.ExtendedProperties.Add("Generator_UserColumnName", "PaidBookingVND");
                base.Columns.Add(this.coloumnPaidBookingVND);
                this.coloumnComment = new global::System.Data.DataColumn("Comment", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnComment.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnComment");
                this.coloumnComment.ExtendedProperties.Add("Generator_UserColumnName", "Comment");
                base.Columns.Add(this.coloumnComment);
                this.coloumnCreated = new global::System.Data.DataColumn("Created", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnCreated.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnCreated");
                this.coloumnCreated.ExtendedProperties.Add("Generator_UserColumnName", "Created");
                base.Columns.Add(this.coloumnCreated);
                this.coloumnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnCreatedBy.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnCreatedBy");
                this.coloumnCreatedBy.ExtendedProperties.Add("Generator_UserColumnName", "CreatedBy");
                base.Columns.Add(this.coloumnCreatedBy);
                this.coloumnModified = new global::System.Data.DataColumn("Modified", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnModified.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnModified");
                this.coloumnModified.ExtendedProperties.Add("Generator_UserColumnName", "Modified");
                base.Columns.Add(this.coloumnModified);
                this.coloumnModifiedBy = new global::System.Data.DataColumn("ModifiedBy", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnModifiedBy.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnModifiedBy");
                this.coloumnModifiedBy.ExtendedProperties.Add("Generator_UserColumnName", "ModifiedBy");
                base.Columns.Add(this.coloumnModifiedBy);
                this.coloumnDelFlag = new global::System.Data.DataColumn("DelFlag", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnDelFlag.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnDelFlag");
                this.coloumnDelFlag.ExtendedProperties.Add("Generator_UserColumnName", "DelFlag");
                base.Columns.Add(this.coloumnDelFlag);
                this.coloumnExtraTimePriceVND = new global::System.Data.DataColumn("ExtraTimePriceVND", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnExtraTimePriceVND.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnExtraTimePriceVND");
                this.coloumnExtraTimePriceVND.ExtendedProperties.Add("Generator_UserColumnName", "ExtraTimePriceVND");
                base.Columns.Add(this.coloumnExtraTimePriceVND);
                this.coloumnExtraTimePriceUSD = new global::System.Data.DataColumn("ExtraTimePriceUSD", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnExtraTimePriceUSD.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnExtraTimePriceUSD");
                this.coloumnExtraTimePriceUSD.ExtendedProperties.Add("Generator_UserColumnName", "ExtraTimePriceUSD");
                base.Columns.Add(this.coloumnExtraTimePriceUSD);
                this.coloumnPaidExtraTimePriceVND = new global::System.Data.DataColumn("PaidExtraTimePriceVND", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnPaidExtraTimePriceVND.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnPaidExtraTimePriceVND");
                this.coloumnPaidExtraTimePriceVND.ExtendedProperties.Add("Generator_UserColumnName", "PaidExtraTimePriceVND");
                base.Columns.Add(this.coloumnPaidExtraTimePriceVND);
                this.coloumnPaidExtraTimePriceUSD = new global::System.Data.DataColumn("PaidExtraTimePriceUSD", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnPaidExtraTimePriceUSD.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnPaidExtraTimePriceUSD");
                this.coloumnPaidExtraTimePriceUSD.ExtendedProperties.Add("Generator_UserColumnName", "PaidExtraTimePriceUSD");
                base.Columns.Add(this.coloumnPaidExtraTimePriceUSD);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPaymentYearMonthRow NewdsPaymentYearMonthRow() {
                return ((dsPaymentYearMonthRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsPaymentYearMonthRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsPaymentYearMonthRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsPaymentYearMonthRowChanged != null)) {
                    this.dsPaymentYearMonthRowChanged(this, new dsPaymentYearMonthRowChangeEvent(((dsPaymentYearMonthRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsPaymentYearMonthRowChanging != null)) {
                    this.dsPaymentYearMonthRowChanging(this, new dsPaymentYearMonthRowChangeEvent(((dsPaymentYearMonthRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsPaymentYearMonthRowDeleted != null)) {
                    this.dsPaymentYearMonthRowDeleted(this, new dsPaymentYearMonthRowChangeEvent(((dsPaymentYearMonthRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsPaymentYearMonthRowDeleting != null)) {
                    this.dsPaymentYearMonthRowDeleting(this, new dsPaymentYearMonthRowChangeEvent(((dsPaymentYearMonthRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsPaymentYearMonthRow(dsPaymentYearMonthRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                PaymentYearMonth ds = new PaymentYearMonth();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsPaymentYearMonthDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsPaymentYearMonthRow : global::System.Data.DataRow {
            
            private dsPaymentYearMonthDataTable tabledsPaymentYearMonth;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsPaymentYearMonthRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsPaymentYearMonth = ((dsPaymentYearMonthDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BuildingId {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentYearMonth.BuildingIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BuildingId\' in table \'dsPaymentYearMonth\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentYearMonth.BuildingIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerId {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentYearMonth.CustomerIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerId\' in table \'dsPaymentYearMonth\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentYearMonth.CustomerIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string YearMonth {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentYearMonth.YearMonthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'YearMonth\' in table \'dsPaymentYearMonth\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentYearMonth.YearMonthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BillDate {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentYearMonth.BillDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BillDate\' in table \'dsPaymentYearMonth\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentYearMonth.BillDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UsdExchangeDate {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentYearMonth.UsdExchangeDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UsdExchangeDate\' in table \'dsPaymentYearMonth\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentYearMonth.UsdExchangeDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UsdExchange {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentYearMonth.UsdExchangeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UsdExchange\' in table \'dsPaymentYearMonth\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentYearMonth.UsdExchangeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RentUSD {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentYearMonth.RentUSDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RentUSD\' in table \'dsPaymentYearMonth\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentYearMonth.RentUSDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RentVND {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentYearMonth.RentVNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RentVND\' in table \'dsPaymentYearMonth\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentYearMonth.RentVNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ManagerUSD {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentYearMonth.ManagerUSDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ManagerUSD\' in table \'dsPaymentYearMonth\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentYearMonth.ManagerUSDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ManagerVND {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentYearMonth.ManagerVNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ManagerVND\' in table \'dsPaymentYearMonth\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentYearMonth.ManagerVNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ElectUSD {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentYearMonth.ElectUSDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ElectUSD\' in table \'dsPaymentYearMonth\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentYearMonth.ElectUSDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ElecVND {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentYearMonth.ElecVNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ElecVND\' in table \'dsPaymentYearMonth\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentYearMonth.ElecVNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WaterUSD {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentYearMonth.WaterUSDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WaterUSD\' in table \'dsPaymentYearMonth\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentYearMonth.WaterUSDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WaterVND {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentYearMonth.WaterVNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WaterVND\' in table \'dsPaymentYearMonth\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentYearMonth.WaterVNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ServiceUSD {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentYearMonth.ServiceUSDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServiceUSD\' in table \'dsPaymentYearMonth\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentYearMonth.ServiceUSDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ServiceVND {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentYearMonth.ServiceVNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServiceVND\' in table \'dsPaymentYearMonth\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentYearMonth.ServiceVNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ParkingUSD {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentYearMonth.ParkingUSDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParkingUSD\' in table \'dsPaymentYearMonth\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentYearMonth.ParkingUSDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ParkingVND {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentYearMonth.ParkingVNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParkingVND\' in table \'dsPaymentYearMonth\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentYearMonth.ParkingVNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BookingUSD {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentYearMonth.BookingUSDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BookingUSD\' in table \'dsPaymentYearMonth\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentYearMonth.BookingUSDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BookingVND {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentYearMonth.BookingVNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BookingVND\' in table \'dsPaymentYearMonth\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentYearMonth.BookingVNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PaidRentUSD {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentYearMonth.PaidRentUSDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaidRentUSD\' in table \'dsPaymentYearMonth\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentYearMonth.PaidRentUSDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PaidRentVND {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentYearMonth.PaidRentVNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaidRentVND\' in table \'dsPaymentYearMonth\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentYearMonth.PaidRentVNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PaidManagerUSD {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentYearMonth.PaidManagerUSDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaidManagerUSD\' in table \'dsPaymentYearMonth\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentYearMonth.PaidManagerUSDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PaidManagerVND {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentYearMonth.PaidManagerVNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaidManagerVND\' in table \'dsPaymentYearMonth\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentYearMonth.PaidManagerVNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PaidElectUSD {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentYearMonth.PaidElectUSDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaidElectUSD\' in table \'dsPaymentYearMonth\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentYearMonth.PaidElectUSDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PaidElecVND {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentYearMonth.PaidElecVNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaidElecVND\' in table \'dsPaymentYearMonth\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentYearMonth.PaidElecVNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PaidWaterUSD {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentYearMonth.PaidWaterUSDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaidWaterUSD\' in table \'dsPaymentYearMonth\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentYearMonth.PaidWaterUSDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PaidWaterVND {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentYearMonth.PaidWaterVNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaidWaterVND\' in table \'dsPaymentYearMonth\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentYearMonth.PaidWaterVNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PaidServiceUSD {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentYearMonth.PaidServiceUSDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaidServiceUSD\' in table \'dsPaymentYearMonth\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentYearMonth.PaidServiceUSDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PaidServiceVND {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentYearMonth.PaidServiceVNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaidServiceVND\' in table \'dsPaymentYearMonth\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentYearMonth.PaidServiceVNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PaidParkingUSD {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentYearMonth.PaidParkingUSDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaidParkingUSD\' in table \'dsPaymentYearMonth\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentYearMonth.PaidParkingUSDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PaidParkingVND {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentYearMonth.PaidParkingVNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaidParkingVND\' in table \'dsPaymentYearMonth\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentYearMonth.PaidParkingVNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PaidBookingUSD {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentYearMonth.PaidBookingUSDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaidBookingUSD\' in table \'dsPaymentYearMonth\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentYearMonth.PaidBookingUSDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PaidBookingVND {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentYearMonth.PaidBookingVNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaidBookingVND\' in table \'dsPaymentYearMonth\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentYearMonth.PaidBookingVNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comment {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentYearMonth.CommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comment\' in table \'dsPaymentYearMonth\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentYearMonth.CommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Created {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentYearMonth.CreatedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Created\' in table \'dsPaymentYearMonth\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentYearMonth.CreatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CreatedBy {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentYearMonth.CreatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedBy\' in table \'dsPaymentYearMonth\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentYearMonth.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Modified {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentYearMonth.ModifiedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Modified\' in table \'dsPaymentYearMonth\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentYearMonth.ModifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ModifiedBy {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentYearMonth.ModifiedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModifiedBy\' in table \'dsPaymentYearMonth\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentYearMonth.ModifiedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DelFlag {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentYearMonth.DelFlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DelFlag\' in table \'dsPaymentYearMonth\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentYearMonth.DelFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExtraTimePriceVND {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentYearMonth.ExtraTimePriceVNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExtraTimePriceVND\' in table \'dsPaymentYearMonth\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tabledsPaymentYearMonth.ExtraTimePriceVNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExtraTimePriceUSD {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentYearMonth.ExtraTimePriceUSDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExtraTimePriceUSD\' in table \'dsPaymentYearMonth\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tabledsPaymentYearMonth.ExtraTimePriceUSDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PaidExtraTimePriceVND {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentYearMonth.PaidExtraTimePriceVNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaidExtraTimePriceVND\' in table \'dsPaymentYearMonth\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentYearMonth.PaidExtraTimePriceVNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PaidExtraTimePriceUSD {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentYearMonth.PaidExtraTimePriceUSDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaidExtraTimePriceUSD\' in table \'dsPaymentYearMonth\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentYearMonth.PaidExtraTimePriceUSDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBuildingIdNull() {
                return this.IsNull(this.tabledsPaymentYearMonth.BuildingIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBuildingIdNull() {
                this[this.tabledsPaymentYearMonth.BuildingIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerIdNull() {
                return this.IsNull(this.tabledsPaymentYearMonth.CustomerIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerIdNull() {
                this[this.tabledsPaymentYearMonth.CustomerIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsYearMonthNull() {
                return this.IsNull(this.tabledsPaymentYearMonth.YearMonthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetYearMonthNull() {
                this[this.tabledsPaymentYearMonth.YearMonthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBillDateNull() {
                return this.IsNull(this.tabledsPaymentYearMonth.BillDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBillDateNull() {
                this[this.tabledsPaymentYearMonth.BillDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUsdExchangeDateNull() {
                return this.IsNull(this.tabledsPaymentYearMonth.UsdExchangeDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUsdExchangeDateNull() {
                this[this.tabledsPaymentYearMonth.UsdExchangeDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUsdExchangeNull() {
                return this.IsNull(this.tabledsPaymentYearMonth.UsdExchangeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUsdExchangeNull() {
                this[this.tabledsPaymentYearMonth.UsdExchangeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRentUSDNull() {
                return this.IsNull(this.tabledsPaymentYearMonth.RentUSDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRentUSDNull() {
                this[this.tabledsPaymentYearMonth.RentUSDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRentVNDNull() {
                return this.IsNull(this.tabledsPaymentYearMonth.RentVNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRentVNDNull() {
                this[this.tabledsPaymentYearMonth.RentVNDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsManagerUSDNull() {
                return this.IsNull(this.tabledsPaymentYearMonth.ManagerUSDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetManagerUSDNull() {
                this[this.tabledsPaymentYearMonth.ManagerUSDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsManagerVNDNull() {
                return this.IsNull(this.tabledsPaymentYearMonth.ManagerVNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetManagerVNDNull() {
                this[this.tabledsPaymentYearMonth.ManagerVNDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsElectUSDNull() {
                return this.IsNull(this.tabledsPaymentYearMonth.ElectUSDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetElectUSDNull() {
                this[this.tabledsPaymentYearMonth.ElectUSDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsElecVNDNull() {
                return this.IsNull(this.tabledsPaymentYearMonth.ElecVNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetElecVNDNull() {
                this[this.tabledsPaymentYearMonth.ElecVNDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWaterUSDNull() {
                return this.IsNull(this.tabledsPaymentYearMonth.WaterUSDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWaterUSDNull() {
                this[this.tabledsPaymentYearMonth.WaterUSDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWaterVNDNull() {
                return this.IsNull(this.tabledsPaymentYearMonth.WaterVNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWaterVNDNull() {
                this[this.tabledsPaymentYearMonth.WaterVNDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsServiceUSDNull() {
                return this.IsNull(this.tabledsPaymentYearMonth.ServiceUSDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetServiceUSDNull() {
                this[this.tabledsPaymentYearMonth.ServiceUSDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsServiceVNDNull() {
                return this.IsNull(this.tabledsPaymentYearMonth.ServiceVNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetServiceVNDNull() {
                this[this.tabledsPaymentYearMonth.ServiceVNDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParkingUSDNull() {
                return this.IsNull(this.tabledsPaymentYearMonth.ParkingUSDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParkingUSDNull() {
                this[this.tabledsPaymentYearMonth.ParkingUSDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParkingVNDNull() {
                return this.IsNull(this.tabledsPaymentYearMonth.ParkingVNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParkingVNDNull() {
                this[this.tabledsPaymentYearMonth.ParkingVNDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBookingUSDNull() {
                return this.IsNull(this.tabledsPaymentYearMonth.BookingUSDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBookingUSDNull() {
                this[this.tabledsPaymentYearMonth.BookingUSDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBookingVNDNull() {
                return this.IsNull(this.tabledsPaymentYearMonth.BookingVNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBookingVNDNull() {
                this[this.tabledsPaymentYearMonth.BookingVNDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaidRentUSDNull() {
                return this.IsNull(this.tabledsPaymentYearMonth.PaidRentUSDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaidRentUSDNull() {
                this[this.tabledsPaymentYearMonth.PaidRentUSDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaidRentVNDNull() {
                return this.IsNull(this.tabledsPaymentYearMonth.PaidRentVNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaidRentVNDNull() {
                this[this.tabledsPaymentYearMonth.PaidRentVNDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaidManagerUSDNull() {
                return this.IsNull(this.tabledsPaymentYearMonth.PaidManagerUSDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaidManagerUSDNull() {
                this[this.tabledsPaymentYearMonth.PaidManagerUSDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaidManagerVNDNull() {
                return this.IsNull(this.tabledsPaymentYearMonth.PaidManagerVNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaidManagerVNDNull() {
                this[this.tabledsPaymentYearMonth.PaidManagerVNDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaidElectUSDNull() {
                return this.IsNull(this.tabledsPaymentYearMonth.PaidElectUSDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaidElectUSDNull() {
                this[this.tabledsPaymentYearMonth.PaidElectUSDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaidElecVNDNull() {
                return this.IsNull(this.tabledsPaymentYearMonth.PaidElecVNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaidElecVNDNull() {
                this[this.tabledsPaymentYearMonth.PaidElecVNDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaidWaterUSDNull() {
                return this.IsNull(this.tabledsPaymentYearMonth.PaidWaterUSDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaidWaterUSDNull() {
                this[this.tabledsPaymentYearMonth.PaidWaterUSDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaidWaterVNDNull() {
                return this.IsNull(this.tabledsPaymentYearMonth.PaidWaterVNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaidWaterVNDNull() {
                this[this.tabledsPaymentYearMonth.PaidWaterVNDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaidServiceUSDNull() {
                return this.IsNull(this.tabledsPaymentYearMonth.PaidServiceUSDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaidServiceUSDNull() {
                this[this.tabledsPaymentYearMonth.PaidServiceUSDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaidServiceVNDNull() {
                return this.IsNull(this.tabledsPaymentYearMonth.PaidServiceVNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaidServiceVNDNull() {
                this[this.tabledsPaymentYearMonth.PaidServiceVNDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaidParkingUSDNull() {
                return this.IsNull(this.tabledsPaymentYearMonth.PaidParkingUSDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaidParkingUSDNull() {
                this[this.tabledsPaymentYearMonth.PaidParkingUSDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaidParkingVNDNull() {
                return this.IsNull(this.tabledsPaymentYearMonth.PaidParkingVNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaidParkingVNDNull() {
                this[this.tabledsPaymentYearMonth.PaidParkingVNDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaidBookingUSDNull() {
                return this.IsNull(this.tabledsPaymentYearMonth.PaidBookingUSDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaidBookingUSDNull() {
                this[this.tabledsPaymentYearMonth.PaidBookingUSDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaidBookingVNDNull() {
                return this.IsNull(this.tabledsPaymentYearMonth.PaidBookingVNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaidBookingVNDNull() {
                this[this.tabledsPaymentYearMonth.PaidBookingVNDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentNull() {
                return this.IsNull(this.tabledsPaymentYearMonth.CommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentNull() {
                this[this.tabledsPaymentYearMonth.CommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreatedNull() {
                return this.IsNull(this.tabledsPaymentYearMonth.CreatedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreatedNull() {
                this[this.tabledsPaymentYearMonth.CreatedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreatedByNull() {
                return this.IsNull(this.tabledsPaymentYearMonth.CreatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreatedByNull() {
                this[this.tabledsPaymentYearMonth.CreatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModifiedNull() {
                return this.IsNull(this.tabledsPaymentYearMonth.ModifiedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModifiedNull() {
                this[this.tabledsPaymentYearMonth.ModifiedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModifiedByNull() {
                return this.IsNull(this.tabledsPaymentYearMonth.ModifiedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModifiedByNull() {
                this[this.tabledsPaymentYearMonth.ModifiedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDelFlagNull() {
                return this.IsNull(this.tabledsPaymentYearMonth.DelFlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDelFlagNull() {
                this[this.tabledsPaymentYearMonth.DelFlagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExtraTimePriceVNDNull() {
                return this.IsNull(this.tabledsPaymentYearMonth.ExtraTimePriceVNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExtraTimePriceVNDNull() {
                this[this.tabledsPaymentYearMonth.ExtraTimePriceVNDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExtraTimePriceUSDNull() {
                return this.IsNull(this.tabledsPaymentYearMonth.ExtraTimePriceUSDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExtraTimePriceUSDNull() {
                this[this.tabledsPaymentYearMonth.ExtraTimePriceUSDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaidExtraTimePriceVNDNull() {
                return this.IsNull(this.tabledsPaymentYearMonth.PaidExtraTimePriceVNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaidExtraTimePriceVNDNull() {
                this[this.tabledsPaymentYearMonth.PaidExtraTimePriceVNDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaidExtraTimePriceUSDNull() {
                return this.IsNull(this.tabledsPaymentYearMonth.PaidExtraTimePriceUSDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaidExtraTimePriceUSDNull() {
                this[this.tabledsPaymentYearMonth.PaidExtraTimePriceUSDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsPaymentYearMonthRowChangeEvent : global::System.EventArgs {
            
            private dsPaymentYearMonthRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPaymentYearMonthRowChangeEvent(dsPaymentYearMonthRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPaymentYearMonthRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591