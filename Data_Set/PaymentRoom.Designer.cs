//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5448
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Man.Data_Set {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("PaymentRoom")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class PaymentRoom : global::System.Data.DataSet {
        
        private dsPaymentRoomDataTable tabledsPaymentRoom;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PaymentRoom() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected PaymentRoom(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["dsPaymentRoom"] != null)) {
                    base.Tables.Add(new dsPaymentRoomDataTable(ds.Tables["dsPaymentRoom"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsPaymentRoomDataTable dsPaymentRoom {
            get {
                return this.tabledsPaymentRoom;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            PaymentRoom cln = ((PaymentRoom)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["dsPaymentRoom"] != null)) {
                    base.Tables.Add(new dsPaymentRoomDataTable(ds.Tables["dsPaymentRoom"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tabledsPaymentRoom = ((dsPaymentRoomDataTable)(base.Tables["dsPaymentRoom"]));
            if ((initTable == true)) {
                if ((this.tabledsPaymentRoom != null)) {
                    this.tabledsPaymentRoom.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "PaymentRoom";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/PaymentRoom.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabledsPaymentRoom = new dsPaymentRoomDataTable();
            base.Tables.Add(this.tabledsPaymentRoom);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsPaymentRoom() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            PaymentRoom ds = new PaymentRoom();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void dsPaymentRoomRowChangeEventHandler(object sender, dsPaymentRoomRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsPaymentRoomDataTable : global::System.Data.TypedTableBase<dsPaymentRoomRow> {
            
            private global::System.Data.DataColumn coloumnid;
            
            private global::System.Data.DataColumn coloumnYearMonth;
            
            private global::System.Data.DataColumn coloumnBuildingId;
            
            private global::System.Data.DataColumn coloumnCustomerId;
            
            private global::System.Data.DataColumn coloumnContractId;
            
            private global::System.Data.DataColumn coloumnRoomId;
            
            private global::System.Data.DataColumn coloumnArea;
            
            private global::System.Data.DataColumn coloumnName;
            
            private global::System.Data.DataColumn coloumnRegional;
            
            private global::System.Data.DataColumn coloumnFloor;
            
            private global::System.Data.DataColumn coloumnBeginContract;
            
            private global::System.Data.DataColumn coloumnEndContract;
            
            private global::System.Data.DataColumn coloumnVAT;
            
            private global::System.Data.DataColumn coloumnOtherFee01;
            
            private global::System.Data.DataColumn coloumnOtherFee02;
            
            private global::System.Data.DataColumn coloumnVatRentPriceVND;
            
            private global::System.Data.DataColumn coloumnVatRentPriceUSD;
            
            private global::System.Data.DataColumn coloumnVatManagerPriceVND;
            
            private global::System.Data.DataColumn coloumnVatManagerPriceUSD;
            
            private global::System.Data.DataColumn coloumnMonthRentSumUSD;
            
            private global::System.Data.DataColumn coloumnMonthRentSumVND;
            
            private global::System.Data.DataColumn coloumnMonthManagerSumVND;
            
            private global::System.Data.DataColumn coloumnMonthManagerSumUSD;
            
            private global::System.Data.DataColumn coloumnLastRentSumUSD;
            
            private global::System.Data.DataColumn coloumnLastRentSumVND;
            
            private global::System.Data.DataColumn coloumnLastManagerSumVND;
            
            private global::System.Data.DataColumn coloumnLastManagerSumUSD;
            
            private global::System.Data.DataColumn coloumnMonthRentPriceVND;
            
            private global::System.Data.DataColumn coloumnMonthRentPriceUSD;
            
            private global::System.Data.DataColumn coloumnMonthManagerPriceVND;
            
            private global::System.Data.DataColumn coloumnMonthManagerPriceUSD;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPaymentRoomDataTable() {
                this.TableName = "dsPaymentRoom";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsPaymentRoomDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsPaymentRoomDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.coloumnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YearMonthColumn {
                get {
                    return this.coloumnYearMonth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BuildingIdColumn {
                get {
                    return this.coloumnBuildingId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerIdColumn {
                get {
                    return this.coloumnCustomerId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContractIdColumn {
                get {
                    return this.coloumnContractId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RoomIdColumn {
                get {
                    return this.coloumnRoomId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AreaColumn {
                get {
                    return this.coloumnArea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.coloumnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RegionalColumn {
                get {
                    return this.coloumnRegional;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FloorColumn {
                get {
                    return this.coloumnFloor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BeginContractColumn {
                get {
                    return this.coloumnBeginContract;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EndContractColumn {
                get {
                    return this.coloumnEndContract;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VATColumn {
                get {
                    return this.coloumnVAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OtherFee01Column {
                get {
                    return this.coloumnOtherFee01;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OtherFee02Column {
                get {
                    return this.coloumnOtherFee02;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VatRentPriceVNDColumn {
                get {
                    return this.coloumnVatRentPriceVND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VatRentPriceUSDColumn {
                get {
                    return this.coloumnVatRentPriceUSD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VatManagerPriceVNDColumn {
                get {
                    return this.coloumnVatManagerPriceVND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VatManagerPriceUSDColumn {
                get {
                    return this.coloumnVatManagerPriceUSD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonthRentSumUSDColumn {
                get {
                    return this.coloumnMonthRentSumUSD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonthRentSumVNDColumn {
                get {
                    return this.coloumnMonthRentSumVND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonthManagerSumVNDColumn {
                get {
                    return this.coloumnMonthManagerSumVND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonthManagerSumUSDColumn {
                get {
                    return this.coloumnMonthManagerSumUSD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastRentSumUSDColumn {
                get {
                    return this.coloumnLastRentSumUSD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastRentSumVNDColumn {
                get {
                    return this.coloumnLastRentSumVND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastManagerSumVNDColumn {
                get {
                    return this.coloumnLastManagerSumVND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastManagerSumUSDColumn {
                get {
                    return this.coloumnLastManagerSumUSD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonthRentPriceVNDColumn {
                get {
                    return this.coloumnMonthRentPriceVND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonthRentPriceUSDColumn {
                get {
                    return this.coloumnMonthRentPriceUSD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonthManagerPriceVNDColumn {
                get {
                    return this.coloumnMonthManagerPriceVND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonthManagerPriceUSDColumn {
                get {
                    return this.coloumnMonthManagerPriceUSD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPaymentRoomRow this[int index] {
                get {
                    return ((dsPaymentRoomRow)(this.Rows[index]));
                }
            }
            
            public event dsPaymentRoomRowChangeEventHandler dsPaymentRoomRowChanging;
            
            public event dsPaymentRoomRowChangeEventHandler dsPaymentRoomRowChanged;
            
            public event dsPaymentRoomRowChangeEventHandler dsPaymentRoomRowDeleting;
            
            public event dsPaymentRoomRowChangeEventHandler dsPaymentRoomRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsPaymentRoomRow(dsPaymentRoomRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPaymentRoomRow AdddsPaymentRoomRow(
                        string id, 
                        string YearMonth, 
                        string BuildingId, 
                        string CustomerId, 
                        string ContractId, 
                        string RoomId, 
                        decimal Area, 
                        string Name, 
                        string Regional, 
                        string Floor, 
                        string BeginContract, 
                        string EndContract, 
                        decimal VAT, 
                        decimal OtherFee01, 
                        decimal OtherFee02, 
                        double VatRentPriceVND, 
                        decimal VatRentPriceUSD, 
                        double VatManagerPriceVND, 
                        double VatManagerPriceUSD, 
                        decimal MonthRentSumUSD, 
                        double MonthRentSumVND, 
                        double MonthManagerSumVND, 
                        decimal MonthManagerSumUSD, 
                        decimal LastRentSumUSD, 
                        double LastRentSumVND, 
                        double LastManagerSumVND, 
                        decimal LastManagerSumUSD, 
                        double MonthRentPriceVND, 
                        decimal MonthRentPriceUSD, 
                        double MonthManagerPriceVND, 
                        decimal MonthManagerPriceUSD) {
                dsPaymentRoomRow rowdsPaymentRoomRow = ((dsPaymentRoomRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        id,
                        YearMonth,
                        BuildingId,
                        CustomerId,
                        ContractId,
                        RoomId,
                        Area,
                        Name,
                        Regional,
                        Floor,
                        BeginContract,
                        EndContract,
                        VAT,
                        OtherFee01,
                        OtherFee02,
                        VatRentPriceVND,
                        VatRentPriceUSD,
                        VatManagerPriceVND,
                        VatManagerPriceUSD,
                        MonthRentSumUSD,
                        MonthRentSumVND,
                        MonthManagerSumVND,
                        MonthManagerSumUSD,
                        LastRentSumUSD,
                        LastRentSumVND,
                        LastManagerSumVND,
                        LastManagerSumUSD,
                        MonthRentPriceVND,
                        MonthRentPriceUSD,
                        MonthManagerPriceVND,
                        MonthManagerPriceUSD};
                rowdsPaymentRoomRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsPaymentRoomRow);
                return rowdsPaymentRoomRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsPaymentRoomDataTable cln = ((dsPaymentRoomDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsPaymentRoomDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.coloumnid = base.Columns["id"];
                this.coloumnYearMonth = base.Columns["YearMonth"];
                this.coloumnBuildingId = base.Columns["BuildingId"];
                this.coloumnCustomerId = base.Columns["CustomerId"];
                this.coloumnContractId = base.Columns["ContractId"];
                this.coloumnRoomId = base.Columns["RoomId"];
                this.coloumnArea = base.Columns["Area"];
                this.coloumnName = base.Columns["Name"];
                this.coloumnRegional = base.Columns["Regional"];
                this.coloumnFloor = base.Columns["Floor"];
                this.coloumnBeginContract = base.Columns["BeginContract"];
                this.coloumnEndContract = base.Columns["EndContract"];
                this.coloumnVAT = base.Columns["VAT"];
                this.coloumnOtherFee01 = base.Columns["OtherFee01"];
                this.coloumnOtherFee02 = base.Columns["OtherFee02"];
                this.coloumnVatRentPriceVND = base.Columns["VatRentPriceVND"];
                this.coloumnVatRentPriceUSD = base.Columns["VatRentPriceUSD"];
                this.coloumnVatManagerPriceVND = base.Columns["VatManagerPriceVND"];
                this.coloumnVatManagerPriceUSD = base.Columns["VatManagerPriceUSD"];
                this.coloumnMonthRentSumUSD = base.Columns["MonthRentSumUSD"];
                this.coloumnMonthRentSumVND = base.Columns["MonthRentSumVND"];
                this.coloumnMonthManagerSumVND = base.Columns["MonthManagerSumVND"];
                this.coloumnMonthManagerSumUSD = base.Columns["MonthManagerSumUSD"];
                this.coloumnLastRentSumUSD = base.Columns["LastRentSumUSD"];
                this.coloumnLastRentSumVND = base.Columns["LastRentSumVND"];
                this.coloumnLastManagerSumVND = base.Columns["LastManagerSumVND"];
                this.coloumnLastManagerSumUSD = base.Columns["LastManagerSumUSD"];
                this.coloumnMonthRentPriceVND = base.Columns["MonthRentPriceVND"];
                this.coloumnMonthRentPriceUSD = base.Columns["MonthRentPriceUSD"];
                this.coloumnMonthManagerPriceVND = base.Columns["MonthManagerPriceVND"];
                this.coloumnMonthManagerPriceUSD = base.Columns["MonthManagerPriceUSD"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.coloumnid = new global::System.Data.DataColumn("id", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnid.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnid");
                this.coloumnid.ExtendedProperties.Add("Generator_UserColumnName", "id");
                base.Columns.Add(this.coloumnid);
                this.coloumnYearMonth = new global::System.Data.DataColumn("YearMonth", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnYearMonth.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnYearMonth");
                this.coloumnYearMonth.ExtendedProperties.Add("Generator_UserColumnName", "YearMonth");
                base.Columns.Add(this.coloumnYearMonth);
                this.coloumnBuildingId = new global::System.Data.DataColumn("BuildingId", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnBuildingId.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnBuildingId");
                this.coloumnBuildingId.ExtendedProperties.Add("Generator_UserColumnName", "BuildingId");
                base.Columns.Add(this.coloumnBuildingId);
                this.coloumnCustomerId = new global::System.Data.DataColumn("CustomerId", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnCustomerId.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnCustomerId");
                this.coloumnCustomerId.ExtendedProperties.Add("Generator_UserColumnName", "CustomerId");
                base.Columns.Add(this.coloumnCustomerId);
                this.coloumnContractId = new global::System.Data.DataColumn("ContractId", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnContractId.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnContractId");
                this.coloumnContractId.ExtendedProperties.Add("Generator_UserColumnName", "ContractId");
                base.Columns.Add(this.coloumnContractId);
                this.coloumnRoomId = new global::System.Data.DataColumn("RoomId", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnRoomId.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnRoomId");
                this.coloumnRoomId.ExtendedProperties.Add("Generator_UserColumnName", "RoomId");
                base.Columns.Add(this.coloumnRoomId);
                this.coloumnArea = new global::System.Data.DataColumn("Area", typeof(decimal), null, global::System.Data.MappingType.Element);
                this.coloumnArea.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnArea");
                this.coloumnArea.ExtendedProperties.Add("Generator_UserColumnName", "Area");
                base.Columns.Add(this.coloumnArea);
                this.coloumnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnName.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnName");
                this.coloumnName.ExtendedProperties.Add("Generator_UserColumnName", "Name");
                base.Columns.Add(this.coloumnName);
                this.coloumnRegional = new global::System.Data.DataColumn("Regional", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnRegional.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnRegional");
                this.coloumnRegional.ExtendedProperties.Add("Generator_UserColumnName", "Regional");
                base.Columns.Add(this.coloumnRegional);
                this.coloumnFloor = new global::System.Data.DataColumn("Floor", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnFloor.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnFloor");
                this.coloumnFloor.ExtendedProperties.Add("Generator_UserColumnName", "Floor");
                base.Columns.Add(this.coloumnFloor);
                this.coloumnBeginContract = new global::System.Data.DataColumn("BeginContract", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnBeginContract.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnBeginContract");
                this.coloumnBeginContract.ExtendedProperties.Add("Generator_UserColumnName", "BeginContract");
                base.Columns.Add(this.coloumnBeginContract);
                this.coloumnEndContract = new global::System.Data.DataColumn("EndContract", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnEndContract.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnEndContract");
                this.coloumnEndContract.ExtendedProperties.Add("Generator_UserColumnName", "EndContract");
                base.Columns.Add(this.coloumnEndContract);
                this.coloumnVAT = new global::System.Data.DataColumn("VAT", typeof(decimal), null, global::System.Data.MappingType.Element);
                this.coloumnVAT.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnVAT");
                this.coloumnVAT.ExtendedProperties.Add("Generator_UserColumnName", "VAT");
                base.Columns.Add(this.coloumnVAT);
                this.coloumnOtherFee01 = new global::System.Data.DataColumn("OtherFee01", typeof(decimal), null, global::System.Data.MappingType.Element);
                this.coloumnOtherFee01.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnOtherFee01");
                this.coloumnOtherFee01.ExtendedProperties.Add("Generator_UserColumnName", "OtherFee01");
                base.Columns.Add(this.coloumnOtherFee01);
                this.coloumnOtherFee02 = new global::System.Data.DataColumn("OtherFee02", typeof(decimal), null, global::System.Data.MappingType.Element);
                this.coloumnOtherFee02.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnOtherFee02");
                this.coloumnOtherFee02.ExtendedProperties.Add("Generator_UserColumnName", "OtherFee02");
                base.Columns.Add(this.coloumnOtherFee02);
                this.coloumnVatRentPriceVND = new global::System.Data.DataColumn("VatRentPriceVND", typeof(double), null, global::System.Data.MappingType.Element);
                this.coloumnVatRentPriceVND.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnVatRentPriceVND");
                this.coloumnVatRentPriceVND.ExtendedProperties.Add("Generator_UserColumnName", "VatRentPriceVND");
                base.Columns.Add(this.coloumnVatRentPriceVND);
                this.coloumnVatRentPriceUSD = new global::System.Data.DataColumn("VatRentPriceUSD", typeof(decimal), null, global::System.Data.MappingType.Element);
                this.coloumnVatRentPriceUSD.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnVatRentPriceUSD");
                this.coloumnVatRentPriceUSD.ExtendedProperties.Add("Generator_UserColumnName", "VatRentPriceUSD");
                base.Columns.Add(this.coloumnVatRentPriceUSD);
                this.coloumnVatManagerPriceVND = new global::System.Data.DataColumn("VatManagerPriceVND", typeof(double), null, global::System.Data.MappingType.Element);
                this.coloumnVatManagerPriceVND.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnVatManagerPriceVND");
                this.coloumnVatManagerPriceVND.ExtendedProperties.Add("Generator_UserColumnName", "VatManagerPriceVND");
                base.Columns.Add(this.coloumnVatManagerPriceVND);
                this.coloumnVatManagerPriceUSD = new global::System.Data.DataColumn("VatManagerPriceUSD", typeof(double), null, global::System.Data.MappingType.Element);
                this.coloumnVatManagerPriceUSD.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnVatManagerPriceUSD");
                this.coloumnVatManagerPriceUSD.ExtendedProperties.Add("Generator_UserColumnName", "VatManagerPriceUSD");
                base.Columns.Add(this.coloumnVatManagerPriceUSD);
                this.coloumnMonthRentSumUSD = new global::System.Data.DataColumn("MonthRentSumUSD", typeof(decimal), null, global::System.Data.MappingType.Element);
                this.coloumnMonthRentSumUSD.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnMonthRentSumUSD");
                this.coloumnMonthRentSumUSD.ExtendedProperties.Add("Generator_UserColumnName", "MonthRentSumUSD");
                base.Columns.Add(this.coloumnMonthRentSumUSD);
                this.coloumnMonthRentSumVND = new global::System.Data.DataColumn("MonthRentSumVND", typeof(double), null, global::System.Data.MappingType.Element);
                this.coloumnMonthRentSumVND.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnMonthRentSumVND");
                this.coloumnMonthRentSumVND.ExtendedProperties.Add("Generator_UserColumnName", "MonthRentSumVND");
                base.Columns.Add(this.coloumnMonthRentSumVND);
                this.coloumnMonthManagerSumVND = new global::System.Data.DataColumn("MonthManagerSumVND", typeof(double), null, global::System.Data.MappingType.Element);
                this.coloumnMonthManagerSumVND.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnMonthManagerSumVND");
                this.coloumnMonthManagerSumVND.ExtendedProperties.Add("Generator_UserColumnName", "MonthManagerSumVND");
                base.Columns.Add(this.coloumnMonthManagerSumVND);
                this.coloumnMonthManagerSumUSD = new global::System.Data.DataColumn("MonthManagerSumUSD", typeof(decimal), null, global::System.Data.MappingType.Element);
                this.coloumnMonthManagerSumUSD.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnMonthManagerSumUSD");
                this.coloumnMonthManagerSumUSD.ExtendedProperties.Add("Generator_UserColumnName", "MonthManagerSumUSD");
                base.Columns.Add(this.coloumnMonthManagerSumUSD);
                this.coloumnLastRentSumUSD = new global::System.Data.DataColumn("LastRentSumUSD", typeof(decimal), null, global::System.Data.MappingType.Element);
                this.coloumnLastRentSumUSD.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnLastRentSumUSD");
                this.coloumnLastRentSumUSD.ExtendedProperties.Add("Generator_UserColumnName", "LastRentSumUSD");
                base.Columns.Add(this.coloumnLastRentSumUSD);
                this.coloumnLastRentSumVND = new global::System.Data.DataColumn("LastRentSumVND", typeof(double), null, global::System.Data.MappingType.Element);
                this.coloumnLastRentSumVND.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnLastRentSumVND");
                this.coloumnLastRentSumVND.ExtendedProperties.Add("Generator_UserColumnName", "LastRentSumVND");
                base.Columns.Add(this.coloumnLastRentSumVND);
                this.coloumnLastManagerSumVND = new global::System.Data.DataColumn("LastManagerSumVND", typeof(double), null, global::System.Data.MappingType.Element);
                this.coloumnLastManagerSumVND.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnLastManagerSumVND");
                this.coloumnLastManagerSumVND.ExtendedProperties.Add("Generator_UserColumnName", "LastManagerSumVND");
                base.Columns.Add(this.coloumnLastManagerSumVND);
                this.coloumnLastManagerSumUSD = new global::System.Data.DataColumn("LastManagerSumUSD", typeof(decimal), null, global::System.Data.MappingType.Element);
                this.coloumnLastManagerSumUSD.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnLastManagerSumUSD");
                this.coloumnLastManagerSumUSD.ExtendedProperties.Add("Generator_UserColumnName", "LastManagerSumUSD");
                base.Columns.Add(this.coloumnLastManagerSumUSD);
                this.coloumnMonthRentPriceVND = new global::System.Data.DataColumn("MonthRentPriceVND", typeof(double), null, global::System.Data.MappingType.Element);
                this.coloumnMonthRentPriceVND.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnMonthRentPriceVND");
                this.coloumnMonthRentPriceVND.ExtendedProperties.Add("Generator_UserColumnName", "MonthRentPriceVND");
                base.Columns.Add(this.coloumnMonthRentPriceVND);
                this.coloumnMonthRentPriceUSD = new global::System.Data.DataColumn("MonthRentPriceUSD", typeof(decimal), null, global::System.Data.MappingType.Element);
                this.coloumnMonthRentPriceUSD.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnMonthRentPriceUSD");
                this.coloumnMonthRentPriceUSD.ExtendedProperties.Add("Generator_UserColumnName", "MonthRentPriceUSD");
                base.Columns.Add(this.coloumnMonthRentPriceUSD);
                this.coloumnMonthManagerPriceVND = new global::System.Data.DataColumn("MonthManagerPriceVND", typeof(double), null, global::System.Data.MappingType.Element);
                this.coloumnMonthManagerPriceVND.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnMonthManagerPriceVND");
                this.coloumnMonthManagerPriceVND.ExtendedProperties.Add("Generator_UserColumnName", "MonthManagerPriceVND");
                base.Columns.Add(this.coloumnMonthManagerPriceVND);
                this.coloumnMonthManagerPriceUSD = new global::System.Data.DataColumn("MonthManagerPriceUSD", typeof(decimal), null, global::System.Data.MappingType.Element);
                this.coloumnMonthManagerPriceUSD.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnMonthManagerPriceUSD");
                this.coloumnMonthManagerPriceUSD.ExtendedProperties.Add("Generator_UserColumnName", "MonthManagerPriceUSD");
                base.Columns.Add(this.coloumnMonthManagerPriceUSD);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("dsPaymentRoomKey1", new global::System.Data.DataColumn[] {
                                this.coloumnBuildingId,
                                this.coloumnCustomerId,
                                this.coloumnContractId,
                                this.coloumnRoomId,
                                this.coloumnYearMonth}, false));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPaymentRoomRow NewdsPaymentRoomRow() {
                return ((dsPaymentRoomRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsPaymentRoomRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsPaymentRoomRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsPaymentRoomRowChanged != null)) {
                    this.dsPaymentRoomRowChanged(this, new dsPaymentRoomRowChangeEvent(((dsPaymentRoomRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsPaymentRoomRowChanging != null)) {
                    this.dsPaymentRoomRowChanging(this, new dsPaymentRoomRowChangeEvent(((dsPaymentRoomRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsPaymentRoomRowDeleted != null)) {
                    this.dsPaymentRoomRowDeleted(this, new dsPaymentRoomRowChangeEvent(((dsPaymentRoomRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsPaymentRoomRowDeleting != null)) {
                    this.dsPaymentRoomRowDeleting(this, new dsPaymentRoomRowChangeEvent(((dsPaymentRoomRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsPaymentRoomRow(dsPaymentRoomRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                PaymentRoom ds = new PaymentRoom();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsPaymentRoomDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsPaymentRoomRow : global::System.Data.DataRow {
            
            private dsPaymentRoomDataTable tabledsPaymentRoom;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsPaymentRoomRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsPaymentRoom = ((dsPaymentRoomDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string id {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentRoom.idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'id\' in table \'dsPaymentRoom\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentRoom.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string YearMonth {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentRoom.YearMonthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'YearMonth\' in table \'dsPaymentRoom\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentRoom.YearMonthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BuildingId {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentRoom.BuildingIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BuildingId\' in table \'dsPaymentRoom\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentRoom.BuildingIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerId {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentRoom.CustomerIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerId\' in table \'dsPaymentRoom\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentRoom.CustomerIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContractId {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentRoom.ContractIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContractId\' in table \'dsPaymentRoom\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentRoom.ContractIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RoomId {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentRoom.RoomIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RoomId\' in table \'dsPaymentRoom\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentRoom.RoomIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Area {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPaymentRoom.AreaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Area\' in table \'dsPaymentRoom\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentRoom.AreaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentRoom.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'dsPaymentRoom\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentRoom.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Regional {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentRoom.RegionalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Regional\' in table \'dsPaymentRoom\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentRoom.RegionalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Floor {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentRoom.FloorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Floor\' in table \'dsPaymentRoom\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentRoom.FloorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BeginContract {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentRoom.BeginContractColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BeginContract\' in table \'dsPaymentRoom\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentRoom.BeginContractColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EndContract {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentRoom.EndContractColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EndContract\' in table \'dsPaymentRoom\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentRoom.EndContractColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal VAT {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPaymentRoom.VATColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VAT\' in table \'dsPaymentRoom\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentRoom.VATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OtherFee01 {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPaymentRoom.OtherFee01Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherFee01\' in table \'dsPaymentRoom\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentRoom.OtherFee01Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OtherFee02 {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPaymentRoom.OtherFee02Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherFee02\' in table \'dsPaymentRoom\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentRoom.OtherFee02Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double VatRentPriceVND {
                get {
                    try {
                        return ((double)(this[this.tabledsPaymentRoom.VatRentPriceVNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VatRentPriceVND\' in table \'dsPaymentRoom\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentRoom.VatRentPriceVNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal VatRentPriceUSD {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPaymentRoom.VatRentPriceUSDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VatRentPriceUSD\' in table \'dsPaymentRoom\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentRoom.VatRentPriceUSDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double VatManagerPriceVND {
                get {
                    try {
                        return ((double)(this[this.tabledsPaymentRoom.VatManagerPriceVNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VatManagerPriceVND\' in table \'dsPaymentRoom\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentRoom.VatManagerPriceVNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double VatManagerPriceUSD {
                get {
                    try {
                        return ((double)(this[this.tabledsPaymentRoom.VatManagerPriceUSDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VatManagerPriceUSD\' in table \'dsPaymentRoom\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentRoom.VatManagerPriceUSDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MonthRentSumUSD {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPaymentRoom.MonthRentSumUSDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MonthRentSumUSD\' in table \'dsPaymentRoom\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentRoom.MonthRentSumUSDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MonthRentSumVND {
                get {
                    try {
                        return ((double)(this[this.tabledsPaymentRoom.MonthRentSumVNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MonthRentSumVND\' in table \'dsPaymentRoom\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentRoom.MonthRentSumVNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MonthManagerSumVND {
                get {
                    try {
                        return ((double)(this[this.tabledsPaymentRoom.MonthManagerSumVNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MonthManagerSumVND\' in table \'dsPaymentRoom\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentRoom.MonthManagerSumVNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MonthManagerSumUSD {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPaymentRoom.MonthManagerSumUSDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MonthManagerSumUSD\' in table \'dsPaymentRoom\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentRoom.MonthManagerSumUSDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LastRentSumUSD {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPaymentRoom.LastRentSumUSDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastRentSumUSD\' in table \'dsPaymentRoom\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentRoom.LastRentSumUSDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double LastRentSumVND {
                get {
                    try {
                        return ((double)(this[this.tabledsPaymentRoom.LastRentSumVNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastRentSumVND\' in table \'dsPaymentRoom\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentRoom.LastRentSumVNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double LastManagerSumVND {
                get {
                    try {
                        return ((double)(this[this.tabledsPaymentRoom.LastManagerSumVNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastManagerSumVND\' in table \'dsPaymentRoom\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentRoom.LastManagerSumVNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LastManagerSumUSD {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPaymentRoom.LastManagerSumUSDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastManagerSumUSD\' in table \'dsPaymentRoom\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentRoom.LastManagerSumUSDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MonthRentPriceVND {
                get {
                    try {
                        return ((double)(this[this.tabledsPaymentRoom.MonthRentPriceVNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MonthRentPriceVND\' in table \'dsPaymentRoom\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentRoom.MonthRentPriceVNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MonthRentPriceUSD {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPaymentRoom.MonthRentPriceUSDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MonthRentPriceUSD\' in table \'dsPaymentRoom\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentRoom.MonthRentPriceUSDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MonthManagerPriceVND {
                get {
                    try {
                        return ((double)(this[this.tabledsPaymentRoom.MonthManagerPriceVNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MonthManagerPriceVND\' in table \'dsPaymentRoom\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentRoom.MonthManagerPriceVNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MonthManagerPriceUSD {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPaymentRoom.MonthManagerPriceUSDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MonthManagerPriceUSD\' in table \'dsPaymentRoom\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentRoom.MonthManagerPriceUSDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidNull() {
                return this.IsNull(this.tabledsPaymentRoom.idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidNull() {
                this[this.tabledsPaymentRoom.idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsYearMonthNull() {
                return this.IsNull(this.tabledsPaymentRoom.YearMonthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetYearMonthNull() {
                this[this.tabledsPaymentRoom.YearMonthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBuildingIdNull() {
                return this.IsNull(this.tabledsPaymentRoom.BuildingIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBuildingIdNull() {
                this[this.tabledsPaymentRoom.BuildingIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerIdNull() {
                return this.IsNull(this.tabledsPaymentRoom.CustomerIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerIdNull() {
                this[this.tabledsPaymentRoom.CustomerIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContractIdNull() {
                return this.IsNull(this.tabledsPaymentRoom.ContractIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContractIdNull() {
                this[this.tabledsPaymentRoom.ContractIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRoomIdNull() {
                return this.IsNull(this.tabledsPaymentRoom.RoomIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRoomIdNull() {
                this[this.tabledsPaymentRoom.RoomIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAreaNull() {
                return this.IsNull(this.tabledsPaymentRoom.AreaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAreaNull() {
                this[this.tabledsPaymentRoom.AreaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tabledsPaymentRoom.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tabledsPaymentRoom.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRegionalNull() {
                return this.IsNull(this.tabledsPaymentRoom.RegionalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRegionalNull() {
                this[this.tabledsPaymentRoom.RegionalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFloorNull() {
                return this.IsNull(this.tabledsPaymentRoom.FloorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFloorNull() {
                this[this.tabledsPaymentRoom.FloorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBeginContractNull() {
                return this.IsNull(this.tabledsPaymentRoom.BeginContractColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBeginContractNull() {
                this[this.tabledsPaymentRoom.BeginContractColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEndContractNull() {
                return this.IsNull(this.tabledsPaymentRoom.EndContractColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEndContractNull() {
                this[this.tabledsPaymentRoom.EndContractColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVATNull() {
                return this.IsNull(this.tabledsPaymentRoom.VATColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVATNull() {
                this[this.tabledsPaymentRoom.VATColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOtherFee01Null() {
                return this.IsNull(this.tabledsPaymentRoom.OtherFee01Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOtherFee01Null() {
                this[this.tabledsPaymentRoom.OtherFee01Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOtherFee02Null() {
                return this.IsNull(this.tabledsPaymentRoom.OtherFee02Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOtherFee02Null() {
                this[this.tabledsPaymentRoom.OtherFee02Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVatRentPriceVNDNull() {
                return this.IsNull(this.tabledsPaymentRoom.VatRentPriceVNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVatRentPriceVNDNull() {
                this[this.tabledsPaymentRoom.VatRentPriceVNDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVatRentPriceUSDNull() {
                return this.IsNull(this.tabledsPaymentRoom.VatRentPriceUSDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVatRentPriceUSDNull() {
                this[this.tabledsPaymentRoom.VatRentPriceUSDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVatManagerPriceVNDNull() {
                return this.IsNull(this.tabledsPaymentRoom.VatManagerPriceVNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVatManagerPriceVNDNull() {
                this[this.tabledsPaymentRoom.VatManagerPriceVNDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVatManagerPriceUSDNull() {
                return this.IsNull(this.tabledsPaymentRoom.VatManagerPriceUSDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVatManagerPriceUSDNull() {
                this[this.tabledsPaymentRoom.VatManagerPriceUSDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonthRentSumUSDNull() {
                return this.IsNull(this.tabledsPaymentRoom.MonthRentSumUSDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonthRentSumUSDNull() {
                this[this.tabledsPaymentRoom.MonthRentSumUSDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonthRentSumVNDNull() {
                return this.IsNull(this.tabledsPaymentRoom.MonthRentSumVNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonthRentSumVNDNull() {
                this[this.tabledsPaymentRoom.MonthRentSumVNDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonthManagerSumVNDNull() {
                return this.IsNull(this.tabledsPaymentRoom.MonthManagerSumVNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonthManagerSumVNDNull() {
                this[this.tabledsPaymentRoom.MonthManagerSumVNDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonthManagerSumUSDNull() {
                return this.IsNull(this.tabledsPaymentRoom.MonthManagerSumUSDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonthManagerSumUSDNull() {
                this[this.tabledsPaymentRoom.MonthManagerSumUSDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastRentSumUSDNull() {
                return this.IsNull(this.tabledsPaymentRoom.LastRentSumUSDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastRentSumUSDNull() {
                this[this.tabledsPaymentRoom.LastRentSumUSDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastRentSumVNDNull() {
                return this.IsNull(this.tabledsPaymentRoom.LastRentSumVNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastRentSumVNDNull() {
                this[this.tabledsPaymentRoom.LastRentSumVNDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastManagerSumVNDNull() {
                return this.IsNull(this.tabledsPaymentRoom.LastManagerSumVNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastManagerSumVNDNull() {
                this[this.tabledsPaymentRoom.LastManagerSumVNDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastManagerSumUSDNull() {
                return this.IsNull(this.tabledsPaymentRoom.LastManagerSumUSDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastManagerSumUSDNull() {
                this[this.tabledsPaymentRoom.LastManagerSumUSDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonthRentPriceVNDNull() {
                return this.IsNull(this.tabledsPaymentRoom.MonthRentPriceVNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonthRentPriceVNDNull() {
                this[this.tabledsPaymentRoom.MonthRentPriceVNDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonthRentPriceUSDNull() {
                return this.IsNull(this.tabledsPaymentRoom.MonthRentPriceUSDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonthRentPriceUSDNull() {
                this[this.tabledsPaymentRoom.MonthRentPriceUSDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonthManagerPriceVNDNull() {
                return this.IsNull(this.tabledsPaymentRoom.MonthManagerPriceVNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonthManagerPriceVNDNull() {
                this[this.tabledsPaymentRoom.MonthManagerPriceVNDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonthManagerPriceUSDNull() {
                return this.IsNull(this.tabledsPaymentRoom.MonthManagerPriceUSDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonthManagerPriceUSDNull() {
                this[this.tabledsPaymentRoom.MonthManagerPriceUSDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsPaymentRoomRowChangeEvent : global::System.EventArgs {
            
            private dsPaymentRoomRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPaymentRoomRowChangeEvent(dsPaymentRoomRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPaymentRoomRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591