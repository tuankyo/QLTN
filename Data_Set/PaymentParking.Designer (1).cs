//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5448
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Man.Data_Set {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("PaymentParking")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class PaymentParking : global::System.Data.DataSet {
        
        private dsPaymentParkingDataTable tabledsPaymentParking;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PaymentParking() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected PaymentParking(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["dsPaymentParking"] != null)) {
                    base.Tables.Add(new dsPaymentParkingDataTable(ds.Tables["dsPaymentParking"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsPaymentParkingDataTable dsPaymentParking {
            get {
                return this.tabledsPaymentParking;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            PaymentParking cln = ((PaymentParking)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["dsPaymentParking"] != null)) {
                    base.Tables.Add(new dsPaymentParkingDataTable(ds.Tables["dsPaymentParking"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tabledsPaymentParking = ((dsPaymentParkingDataTable)(base.Tables["dsPaymentParking"]));
            if ((initTable == true)) {
                if ((this.tabledsPaymentParking != null)) {
                    this.tabledsPaymentParking.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "PaymentParking";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/PaymentBooking.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabledsPaymentParking = new dsPaymentParkingDataTable();
            base.Tables.Add(this.tabledsPaymentParking);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsPaymentParking() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            PaymentParking ds = new PaymentParking();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void dsPaymentParkingRowChangeEventHandler(object sender, dsPaymentParkingRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsPaymentParkingDataTable : global::System.Data.TypedTableBase<dsPaymentParkingRow> {
            
            private global::System.Data.DataColumn coloumnid;
            
            private global::System.Data.DataColumn coloumnYearMonth;
            
            private global::System.Data.DataColumn coloumnBuildingId;
            
            private global::System.Data.DataColumn coloumnCustomerId;
            
            private global::System.Data.DataColumn coloumnParkingId;
            
            private global::System.Data.DataColumn coloumnTariffsParkingName;
            
            private global::System.Data.DataColumn coloumnVehicleCode;
            
            private global::System.Data.DataColumn coloumnVehicleName;
            
            private global::System.Data.DataColumn coloumnOwnerName;
            
            private global::System.Data.DataColumn coloumnOwnerPhone;
            
            private global::System.Data.DataColumn coloumnParkingBegin;
            
            private global::System.Data.DataColumn coloumnParkingEnd;
            
            private global::System.Data.DataColumn coloumnVAT;
            
            private global::System.Data.DataColumn coloumnOtherFee01;
            
            private global::System.Data.DataColumn coloumnOtherFee02;
            
            private global::System.Data.DataColumn coloumnPriceUSD;
            
            private global::System.Data.DataColumn coloumnPriceVND;
            
            private global::System.Data.DataColumn coloumnVatUSD;
            
            private global::System.Data.DataColumn coloumnVatVND;
            
            private global::System.Data.DataColumn coloumnSumUSD;
            
            private global::System.Data.DataColumn coloumnSumVND;
            
            private global::System.Data.DataColumn coloumnLastPriceUSD;
            
            private global::System.Data.DataColumn coloumnLastPriceVND;
            
            private global::System.Data.DataColumn columnNumber;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPaymentParkingDataTable() {
                this.TableName = "dsPaymentParking";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsPaymentParkingDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsPaymentParkingDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.coloumnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YearMonthColumn {
                get {
                    return this.coloumnYearMonth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BuildingIdColumn {
                get {
                    return this.coloumnBuildingId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerIdColumn {
                get {
                    return this.coloumnCustomerId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParkingIdColumn {
                get {
                    return this.coloumnParkingId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TariffsParkingNameColumn {
                get {
                    return this.coloumnTariffsParkingName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VehicleCodeColumn {
                get {
                    return this.coloumnVehicleCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VehicleNameColumn {
                get {
                    return this.coloumnVehicleName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OwnerNameColumn {
                get {
                    return this.coloumnOwnerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OwnerPhoneColumn {
                get {
                    return this.coloumnOwnerPhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParkingBeginColumn {
                get {
                    return this.coloumnParkingBegin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParkingEndColumn {
                get {
                    return this.coloumnParkingEnd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VATColumn {
                get {
                    return this.coloumnVAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OtherFee01Column {
                get {
                    return this.coloumnOtherFee01;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OtherFee02Column {
                get {
                    return this.coloumnOtherFee02;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PriceUSDColumn {
                get {
                    return this.coloumnPriceUSD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PriceVNDColumn {
                get {
                    return this.coloumnPriceVND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VatUSDColumn {
                get {
                    return this.coloumnVatUSD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VatVNDColumn {
                get {
                    return this.coloumnVatVND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SumUSDColumn {
                get {
                    return this.coloumnSumUSD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SumVNDColumn {
                get {
                    return this.coloumnSumVND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastPriceUSDColumn {
                get {
                    return this.coloumnLastPriceUSD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastPriceVNDColumn {
                get {
                    return this.coloumnLastPriceVND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NumberColumn {
                get {
                    return this.columnNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPaymentParkingRow this[int index] {
                get {
                    return ((dsPaymentParkingRow)(this.Rows[index]));
                }
            }
            
            public event dsPaymentParkingRowChangeEventHandler dsPaymentParkingRowChanging;
            
            public event dsPaymentParkingRowChangeEventHandler dsPaymentParkingRowChanged;
            
            public event dsPaymentParkingRowChangeEventHandler dsPaymentParkingRowDeleting;
            
            public event dsPaymentParkingRowChangeEventHandler dsPaymentParkingRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsPaymentParkingRow(dsPaymentParkingRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPaymentParkingRow AdddsPaymentParkingRow(
                        string id, 
                        string YearMonth, 
                        string BuildingId, 
                        string CustomerId, 
                        string ParkingId, 
                        string TariffsParkingName, 
                        string VehicleCode, 
                        string VehicleName, 
                        string OwnerName, 
                        string OwnerPhone, 
                        string ParkingBegin, 
                        string ParkingEnd, 
                        decimal VAT, 
                        decimal OtherFee01, 
                        decimal OtherFee02, 
                        decimal PriceUSD, 
                        double PriceVND, 
                        decimal VatUSD, 
                        double VatVND, 
                        decimal SumUSD, 
                        double SumVND, 
                        decimal LastPriceUSD, 
                        double LastPriceVND, 
                        double Number) {
                dsPaymentParkingRow rowdsPaymentParkingRow = ((dsPaymentParkingRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        id,
                        YearMonth,
                        BuildingId,
                        CustomerId,
                        ParkingId,
                        TariffsParkingName,
                        VehicleCode,
                        VehicleName,
                        OwnerName,
                        OwnerPhone,
                        ParkingBegin,
                        ParkingEnd,
                        VAT,
                        OtherFee01,
                        OtherFee02,
                        PriceUSD,
                        PriceVND,
                        VatUSD,
                        VatVND,
                        SumUSD,
                        SumVND,
                        LastPriceUSD,
                        LastPriceVND,
                        Number};
                rowdsPaymentParkingRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsPaymentParkingRow);
                return rowdsPaymentParkingRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsPaymentParkingDataTable cln = ((dsPaymentParkingDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsPaymentParkingDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.coloumnid = base.Columns["id"];
                this.coloumnYearMonth = base.Columns["YearMonth"];
                this.coloumnBuildingId = base.Columns["BuildingId"];
                this.coloumnCustomerId = base.Columns["CustomerId"];
                this.coloumnParkingId = base.Columns["ParkingId"];
                this.coloumnTariffsParkingName = base.Columns["TariffsParkingName"];
                this.coloumnVehicleCode = base.Columns["VehicleCode"];
                this.coloumnVehicleName = base.Columns["VehicleName"];
                this.coloumnOwnerName = base.Columns["OwnerName"];
                this.coloumnOwnerPhone = base.Columns["OwnerPhone"];
                this.coloumnParkingBegin = base.Columns["ParkingBegin"];
                this.coloumnParkingEnd = base.Columns["ParkingEnd"];
                this.coloumnVAT = base.Columns["VAT"];
                this.coloumnOtherFee01 = base.Columns["OtherFee01"];
                this.coloumnOtherFee02 = base.Columns["OtherFee02"];
                this.coloumnPriceUSD = base.Columns["PriceUSD"];
                this.coloumnPriceVND = base.Columns["PriceVND"];
                this.coloumnVatUSD = base.Columns["VatUSD"];
                this.coloumnVatVND = base.Columns["VatVND"];
                this.coloumnSumUSD = base.Columns["SumUSD"];
                this.coloumnSumVND = base.Columns["SumVND"];
                this.coloumnLastPriceUSD = base.Columns["LastPriceUSD"];
                this.coloumnLastPriceVND = base.Columns["LastPriceVND"];
                this.columnNumber = base.Columns["Number"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.coloumnid = new global::System.Data.DataColumn("id", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnid.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnid");
                this.coloumnid.ExtendedProperties.Add("Generator_UserColumnName", "id");
                base.Columns.Add(this.coloumnid);
                this.coloumnYearMonth = new global::System.Data.DataColumn("YearMonth", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnYearMonth.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnYearMonth");
                this.coloumnYearMonth.ExtendedProperties.Add("Generator_UserColumnName", "YearMonth");
                base.Columns.Add(this.coloumnYearMonth);
                this.coloumnBuildingId = new global::System.Data.DataColumn("BuildingId", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnBuildingId.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnBuildingId");
                this.coloumnBuildingId.ExtendedProperties.Add("Generator_UserColumnName", "BuildingId");
                base.Columns.Add(this.coloumnBuildingId);
                this.coloumnCustomerId = new global::System.Data.DataColumn("CustomerId", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnCustomerId.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnCustomerId");
                this.coloumnCustomerId.ExtendedProperties.Add("Generator_UserColumnName", "CustomerId");
                base.Columns.Add(this.coloumnCustomerId);
                this.coloumnParkingId = new global::System.Data.DataColumn("ParkingId", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnParkingId.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnParkingId");
                this.coloumnParkingId.ExtendedProperties.Add("Generator_UserColumnName", "ParkingId");
                base.Columns.Add(this.coloumnParkingId);
                this.coloumnTariffsParkingName = new global::System.Data.DataColumn("TariffsParkingName", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnTariffsParkingName.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnTariffsParkingName");
                this.coloumnTariffsParkingName.ExtendedProperties.Add("Generator_UserColumnName", "TariffsParkingName");
                base.Columns.Add(this.coloumnTariffsParkingName);
                this.coloumnVehicleCode = new global::System.Data.DataColumn("VehicleCode", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnVehicleCode.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnVehicleCode");
                this.coloumnVehicleCode.ExtendedProperties.Add("Generator_UserColumnName", "VehicleCode");
                base.Columns.Add(this.coloumnVehicleCode);
                this.coloumnVehicleName = new global::System.Data.DataColumn("VehicleName", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnVehicleName.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnVehicleName");
                this.coloumnVehicleName.ExtendedProperties.Add("Generator_UserColumnName", "VehicleName");
                base.Columns.Add(this.coloumnVehicleName);
                this.coloumnOwnerName = new global::System.Data.DataColumn("OwnerName", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnOwnerName.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnOwnerName");
                this.coloumnOwnerName.ExtendedProperties.Add("Generator_UserColumnName", "OwnerName");
                base.Columns.Add(this.coloumnOwnerName);
                this.coloumnOwnerPhone = new global::System.Data.DataColumn("OwnerPhone", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnOwnerPhone.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnOwnerPhone");
                this.coloumnOwnerPhone.ExtendedProperties.Add("Generator_UserColumnName", "OwnerPhone");
                base.Columns.Add(this.coloumnOwnerPhone);
                this.coloumnParkingBegin = new global::System.Data.DataColumn("ParkingBegin", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnParkingBegin.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnParkingBegin");
                this.coloumnParkingBegin.ExtendedProperties.Add("Generator_UserColumnName", "ParkingBegin");
                base.Columns.Add(this.coloumnParkingBegin);
                this.coloumnParkingEnd = new global::System.Data.DataColumn("ParkingEnd", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnParkingEnd.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnParkingEnd");
                this.coloumnParkingEnd.ExtendedProperties.Add("Generator_UserColumnName", "ParkingEnd");
                base.Columns.Add(this.coloumnParkingEnd);
                this.coloumnVAT = new global::System.Data.DataColumn("VAT", typeof(decimal), null, global::System.Data.MappingType.Element);
                this.coloumnVAT.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnVAT");
                this.coloumnVAT.ExtendedProperties.Add("Generator_UserColumnName", "VAT");
                base.Columns.Add(this.coloumnVAT);
                this.coloumnOtherFee01 = new global::System.Data.DataColumn("OtherFee01", typeof(decimal), null, global::System.Data.MappingType.Element);
                this.coloumnOtherFee01.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnOtherFee01");
                this.coloumnOtherFee01.ExtendedProperties.Add("Generator_UserColumnName", "OtherFee01");
                base.Columns.Add(this.coloumnOtherFee01);
                this.coloumnOtherFee02 = new global::System.Data.DataColumn("OtherFee02", typeof(decimal), null, global::System.Data.MappingType.Element);
                this.coloumnOtherFee02.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnOtherFee02");
                this.coloumnOtherFee02.ExtendedProperties.Add("Generator_UserColumnName", "OtherFee02");
                base.Columns.Add(this.coloumnOtherFee02);
                this.coloumnPriceUSD = new global::System.Data.DataColumn("PriceUSD", typeof(decimal), null, global::System.Data.MappingType.Element);
                this.coloumnPriceUSD.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnPriceUSD");
                this.coloumnPriceUSD.ExtendedProperties.Add("Generator_UserColumnName", "PriceUSD");
                base.Columns.Add(this.coloumnPriceUSD);
                this.coloumnPriceVND = new global::System.Data.DataColumn("PriceVND", typeof(double), null, global::System.Data.MappingType.Element);
                this.coloumnPriceVND.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnPriceVND");
                this.coloumnPriceVND.ExtendedProperties.Add("Generator_UserColumnName", "PriceVND");
                base.Columns.Add(this.coloumnPriceVND);
                this.coloumnVatUSD = new global::System.Data.DataColumn("VatUSD", typeof(decimal), null, global::System.Data.MappingType.Element);
                this.coloumnVatUSD.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnVatUSD");
                this.coloumnVatUSD.ExtendedProperties.Add("Generator_UserColumnName", "VatUSD");
                base.Columns.Add(this.coloumnVatUSD);
                this.coloumnVatVND = new global::System.Data.DataColumn("VatVND", typeof(double), null, global::System.Data.MappingType.Element);
                this.coloumnVatVND.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnVatVND");
                this.coloumnVatVND.ExtendedProperties.Add("Generator_UserColumnName", "VatVND");
                base.Columns.Add(this.coloumnVatVND);
                this.coloumnSumUSD = new global::System.Data.DataColumn("SumUSD", typeof(decimal), null, global::System.Data.MappingType.Element);
                this.coloumnSumUSD.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnSumUSD");
                this.coloumnSumUSD.ExtendedProperties.Add("Generator_UserColumnName", "SumUSD");
                base.Columns.Add(this.coloumnSumUSD);
                this.coloumnSumVND = new global::System.Data.DataColumn("SumVND", typeof(double), null, global::System.Data.MappingType.Element);
                this.coloumnSumVND.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnSumVND");
                this.coloumnSumVND.ExtendedProperties.Add("Generator_UserColumnName", "SumVND");
                base.Columns.Add(this.coloumnSumVND);
                this.coloumnLastPriceUSD = new global::System.Data.DataColumn("LastPriceUSD", typeof(decimal), null, global::System.Data.MappingType.Element);
                this.coloumnLastPriceUSD.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnLastPriceUSD");
                this.coloumnLastPriceUSD.ExtendedProperties.Add("Generator_UserColumnName", "LastPriceUSD");
                base.Columns.Add(this.coloumnLastPriceUSD);
                this.coloumnLastPriceVND = new global::System.Data.DataColumn("LastPriceVND", typeof(double), null, global::System.Data.MappingType.Element);
                this.coloumnLastPriceVND.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnLastPriceVND");
                this.coloumnLastPriceVND.ExtendedProperties.Add("Generator_UserColumnName", "LastPriceVND");
                base.Columns.Add(this.coloumnLastPriceVND);
                this.columnNumber = new global::System.Data.DataColumn("Number", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumber);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPaymentParkingRow NewdsPaymentParkingRow() {
                return ((dsPaymentParkingRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsPaymentParkingRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsPaymentParkingRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsPaymentParkingRowChanged != null)) {
                    this.dsPaymentParkingRowChanged(this, new dsPaymentParkingRowChangeEvent(((dsPaymentParkingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsPaymentParkingRowChanging != null)) {
                    this.dsPaymentParkingRowChanging(this, new dsPaymentParkingRowChangeEvent(((dsPaymentParkingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsPaymentParkingRowDeleted != null)) {
                    this.dsPaymentParkingRowDeleted(this, new dsPaymentParkingRowChangeEvent(((dsPaymentParkingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsPaymentParkingRowDeleting != null)) {
                    this.dsPaymentParkingRowDeleting(this, new dsPaymentParkingRowChangeEvent(((dsPaymentParkingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsPaymentParkingRow(dsPaymentParkingRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                PaymentParking ds = new PaymentParking();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsPaymentParkingDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsPaymentParkingRow : global::System.Data.DataRow {
            
            private dsPaymentParkingDataTable tabledsPaymentParking;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsPaymentParkingRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsPaymentParking = ((dsPaymentParkingDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string id {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentParking.idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'id\' in table \'dsPaymentParking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentParking.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string YearMonth {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentParking.YearMonthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'YearMonth\' in table \'dsPaymentParking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentParking.YearMonthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BuildingId {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentParking.BuildingIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BuildingId\' in table \'dsPaymentParking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentParking.BuildingIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerId {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentParking.CustomerIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerId\' in table \'dsPaymentParking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentParking.CustomerIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ParkingId {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentParking.ParkingIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParkingId\' in table \'dsPaymentParking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentParking.ParkingIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TariffsParkingName {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentParking.TariffsParkingNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TariffsParkingName\' in table \'dsPaymentParking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentParking.TariffsParkingNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VehicleCode {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentParking.VehicleCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VehicleCode\' in table \'dsPaymentParking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentParking.VehicleCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VehicleName {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentParking.VehicleNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VehicleName\' in table \'dsPaymentParking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentParking.VehicleNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OwnerName {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentParking.OwnerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OwnerName\' in table \'dsPaymentParking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentParking.OwnerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OwnerPhone {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentParking.OwnerPhoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OwnerPhone\' in table \'dsPaymentParking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentParking.OwnerPhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ParkingBegin {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentParking.ParkingBeginColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParkingBegin\' in table \'dsPaymentParking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentParking.ParkingBeginColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ParkingEnd {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentParking.ParkingEndColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParkingEnd\' in table \'dsPaymentParking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentParking.ParkingEndColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal VAT {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPaymentParking.VATColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VAT\' in table \'dsPaymentParking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentParking.VATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OtherFee01 {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPaymentParking.OtherFee01Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherFee01\' in table \'dsPaymentParking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentParking.OtherFee01Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OtherFee02 {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPaymentParking.OtherFee02Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherFee02\' in table \'dsPaymentParking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentParking.OtherFee02Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PriceUSD {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPaymentParking.PriceUSDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PriceUSD\' in table \'dsPaymentParking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentParking.PriceUSDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PriceVND {
                get {
                    try {
                        return ((double)(this[this.tabledsPaymentParking.PriceVNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PriceVND\' in table \'dsPaymentParking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentParking.PriceVNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal VatUSD {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPaymentParking.VatUSDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VatUSD\' in table \'dsPaymentParking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentParking.VatUSDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double VatVND {
                get {
                    try {
                        return ((double)(this[this.tabledsPaymentParking.VatVNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VatVND\' in table \'dsPaymentParking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentParking.VatVNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SumUSD {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPaymentParking.SumUSDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SumUSD\' in table \'dsPaymentParking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentParking.SumUSDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SumVND {
                get {
                    try {
                        return ((double)(this[this.tabledsPaymentParking.SumVNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SumVND\' in table \'dsPaymentParking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentParking.SumVNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LastPriceUSD {
                get {
                    try {
                        return ((decimal)(this[this.tabledsPaymentParking.LastPriceUSDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastPriceUSD\' in table \'dsPaymentParking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentParking.LastPriceUSDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double LastPriceVND {
                get {
                    try {
                        return ((double)(this[this.tabledsPaymentParking.LastPriceVNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastPriceVND\' in table \'dsPaymentParking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentParking.LastPriceVNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Number {
                get {
                    try {
                        return ((double)(this[this.tabledsPaymentParking.NumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Number\' in table \'dsPaymentParking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentParking.NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidNull() {
                return this.IsNull(this.tabledsPaymentParking.idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidNull() {
                this[this.tabledsPaymentParking.idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsYearMonthNull() {
                return this.IsNull(this.tabledsPaymentParking.YearMonthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetYearMonthNull() {
                this[this.tabledsPaymentParking.YearMonthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBuildingIdNull() {
                return this.IsNull(this.tabledsPaymentParking.BuildingIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBuildingIdNull() {
                this[this.tabledsPaymentParking.BuildingIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerIdNull() {
                return this.IsNull(this.tabledsPaymentParking.CustomerIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerIdNull() {
                this[this.tabledsPaymentParking.CustomerIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParkingIdNull() {
                return this.IsNull(this.tabledsPaymentParking.ParkingIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParkingIdNull() {
                this[this.tabledsPaymentParking.ParkingIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTariffsParkingNameNull() {
                return this.IsNull(this.tabledsPaymentParking.TariffsParkingNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTariffsParkingNameNull() {
                this[this.tabledsPaymentParking.TariffsParkingNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVehicleCodeNull() {
                return this.IsNull(this.tabledsPaymentParking.VehicleCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVehicleCodeNull() {
                this[this.tabledsPaymentParking.VehicleCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVehicleNameNull() {
                return this.IsNull(this.tabledsPaymentParking.VehicleNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVehicleNameNull() {
                this[this.tabledsPaymentParking.VehicleNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOwnerNameNull() {
                return this.IsNull(this.tabledsPaymentParking.OwnerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOwnerNameNull() {
                this[this.tabledsPaymentParking.OwnerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOwnerPhoneNull() {
                return this.IsNull(this.tabledsPaymentParking.OwnerPhoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOwnerPhoneNull() {
                this[this.tabledsPaymentParking.OwnerPhoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParkingBeginNull() {
                return this.IsNull(this.tabledsPaymentParking.ParkingBeginColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParkingBeginNull() {
                this[this.tabledsPaymentParking.ParkingBeginColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParkingEndNull() {
                return this.IsNull(this.tabledsPaymentParking.ParkingEndColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParkingEndNull() {
                this[this.tabledsPaymentParking.ParkingEndColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVATNull() {
                return this.IsNull(this.tabledsPaymentParking.VATColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVATNull() {
                this[this.tabledsPaymentParking.VATColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOtherFee01Null() {
                return this.IsNull(this.tabledsPaymentParking.OtherFee01Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOtherFee01Null() {
                this[this.tabledsPaymentParking.OtherFee01Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOtherFee02Null() {
                return this.IsNull(this.tabledsPaymentParking.OtherFee02Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOtherFee02Null() {
                this[this.tabledsPaymentParking.OtherFee02Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPriceUSDNull() {
                return this.IsNull(this.tabledsPaymentParking.PriceUSDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPriceUSDNull() {
                this[this.tabledsPaymentParking.PriceUSDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPriceVNDNull() {
                return this.IsNull(this.tabledsPaymentParking.PriceVNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPriceVNDNull() {
                this[this.tabledsPaymentParking.PriceVNDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVatUSDNull() {
                return this.IsNull(this.tabledsPaymentParking.VatUSDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVatUSDNull() {
                this[this.tabledsPaymentParking.VatUSDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVatVNDNull() {
                return this.IsNull(this.tabledsPaymentParking.VatVNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVatVNDNull() {
                this[this.tabledsPaymentParking.VatVNDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSumUSDNull() {
                return this.IsNull(this.tabledsPaymentParking.SumUSDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSumUSDNull() {
                this[this.tabledsPaymentParking.SumUSDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSumVNDNull() {
                return this.IsNull(this.tabledsPaymentParking.SumVNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSumVNDNull() {
                this[this.tabledsPaymentParking.SumVNDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastPriceUSDNull() {
                return this.IsNull(this.tabledsPaymentParking.LastPriceUSDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastPriceUSDNull() {
                this[this.tabledsPaymentParking.LastPriceUSDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastPriceVNDNull() {
                return this.IsNull(this.tabledsPaymentParking.LastPriceVNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastPriceVNDNull() {
                this[this.tabledsPaymentParking.LastPriceVNDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNumberNull() {
                return this.IsNull(this.tabledsPaymentParking.NumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNumberNull() {
                this[this.tabledsPaymentParking.NumberColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsPaymentParkingRowChangeEvent : global::System.EventArgs {
            
            private dsPaymentParkingRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPaymentParkingRowChangeEvent(dsPaymentParkingRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPaymentParkingRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591