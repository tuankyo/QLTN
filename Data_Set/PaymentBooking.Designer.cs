//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5448
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Man.Data_Set {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("PaymentBooking")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class PaymentBooking : global::System.Data.DataSet {
        
        private dsPaymentBookingDataTable tabledsPaymentBooking;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PaymentBooking() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected PaymentBooking(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["dsPaymentBooking"] != null)) {
                    base.Tables.Add(new dsPaymentBookingDataTable(ds.Tables["dsPaymentBooking"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsPaymentBookingDataTable dsPaymentBooking {
            get {
                return this.tabledsPaymentBooking;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            PaymentBooking cln = ((PaymentBooking)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["dsPaymentBooking"] != null)) {
                    base.Tables.Add(new dsPaymentBookingDataTable(ds.Tables["dsPaymentBooking"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tabledsPaymentBooking = ((dsPaymentBookingDataTable)(base.Tables["dsPaymentBooking"]));
            if ((initTable == true)) {
                if ((this.tabledsPaymentBooking != null)) {
                    this.tabledsPaymentBooking.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "PaymentBooking";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/PaymentBooking.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabledsPaymentBooking = new dsPaymentBookingDataTable();
            base.Tables.Add(this.tabledsPaymentBooking);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsPaymentBooking() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            PaymentBooking ds = new PaymentBooking();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void dsPaymentBookingRowChangeEventHandler(object sender, dsPaymentBookingRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsPaymentBookingDataTable : global::System.Data.TypedTableBase<dsPaymentBookingRow> {
            
            private global::System.Data.DataColumn coloumnYearMonth;
            
            private global::System.Data.DataColumn coloumnBuildingId;
            
            private global::System.Data.DataColumn coloumnCustomerId;
            
            private global::System.Data.DataColumn coloumnRoomId;
            
            private global::System.Data.DataColumn coloumnBookingId;
            
            private global::System.Data.DataColumn coloumnBookingDate;
            
            private global::System.Data.DataColumn coloumnBookingHourFrom;
            
            private global::System.Data.DataColumn coloumnBookingMinuteFrom;
            
            private global::System.Data.DataColumn coloumnBookingHourTo;
            
            private global::System.Data.DataColumn coloumnBookingMinuteTo;
            
            private global::System.Data.DataColumn coloumnRentHourFrom;
            
            private global::System.Data.DataColumn coloumnRentMinuteFrom;
            
            private global::System.Data.DataColumn coloumnRentHourTo;
            
            private global::System.Data.DataColumn coloumnRentMinuteTo;
            
            private global::System.Data.DataColumn coloumnHourExtraPriceVND;
            
            private global::System.Data.DataColumn coloumnHourExtraPriceUSD;
            
            private global::System.Data.DataColumn coloumnVAT;
            
            private global::System.Data.DataColumn coloumnOtherFee01;
            
            private global::System.Data.DataColumn coloumnOtherFee02;
            
            private global::System.Data.DataColumn coloumnPriceUSD;
            
            private global::System.Data.DataColumn coloumnPriceVND;
            
            private global::System.Data.DataColumn coloumnVatUSD;
            
            private global::System.Data.DataColumn coloumnVatVND;
            
            private global::System.Data.DataColumn coloumnSumPriceUSD;
            
            private global::System.Data.DataColumn coloumnSumPriceVND;
            
            private global::System.Data.DataColumn coloumnLastPriceUSD;
            
            private global::System.Data.DataColumn coloumnLastPriceVND;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPaymentBookingDataTable() {
                this.TableName = "dsPaymentBooking";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsPaymentBookingDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsPaymentBookingDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YearMonthColumn {
                get {
                    return this.coloumnYearMonth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BuildingIdColumn {
                get {
                    return this.coloumnBuildingId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerIdColumn {
                get {
                    return this.coloumnCustomerId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RoomIdColumn {
                get {
                    return this.coloumnRoomId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BookingIdColumn {
                get {
                    return this.coloumnBookingId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BookingDateColumn {
                get {
                    return this.coloumnBookingDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BookingHourFromColumn {
                get {
                    return this.coloumnBookingHourFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BookingMinuteFromColumn {
                get {
                    return this.coloumnBookingMinuteFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BookingHourToColumn {
                get {
                    return this.coloumnBookingHourTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BookingMinuteToColumn {
                get {
                    return this.coloumnBookingMinuteTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RentHourFromColumn {
                get {
                    return this.coloumnRentHourFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RentMinuteFromColumn {
                get {
                    return this.coloumnRentMinuteFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RentHourToColumn {
                get {
                    return this.coloumnRentHourTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RentMinuteToColumn {
                get {
                    return this.coloumnRentMinuteTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HourExtraPriceVNDColumn {
                get {
                    return this.coloumnHourExtraPriceVND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HourExtraPriceUSDColumn {
                get {
                    return this.coloumnHourExtraPriceUSD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VATColumn {
                get {
                    return this.coloumnVAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OtherFee01Column {
                get {
                    return this.coloumnOtherFee01;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OtherFee02Column {
                get {
                    return this.coloumnOtherFee02;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PriceUSDColumn {
                get {
                    return this.coloumnPriceUSD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PriceVNDColumn {
                get {
                    return this.coloumnPriceVND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VatUSDColumn {
                get {
                    return this.coloumnVatUSD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VatVNDColumn {
                get {
                    return this.coloumnVatVND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SumPriceUSDColumn {
                get {
                    return this.coloumnSumPriceUSD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SumPriceVNDColumn {
                get {
                    return this.coloumnSumPriceVND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastPriceUSDColumn {
                get {
                    return this.coloumnLastPriceUSD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastPriceVNDColumn {
                get {
                    return this.coloumnLastPriceVND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPaymentBookingRow this[int index] {
                get {
                    return ((dsPaymentBookingRow)(this.Rows[index]));
                }
            }
            
            public event dsPaymentBookingRowChangeEventHandler dsPaymentBookingRowChanging;
            
            public event dsPaymentBookingRowChangeEventHandler dsPaymentBookingRowChanged;
            
            public event dsPaymentBookingRowChangeEventHandler dsPaymentBookingRowDeleting;
            
            public event dsPaymentBookingRowChangeEventHandler dsPaymentBookingRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsPaymentBookingRow(dsPaymentBookingRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPaymentBookingRow AdddsPaymentBookingRow(
                        string YearMonth, 
                        string BuildingId, 
                        string CustomerId, 
                        string RoomId, 
                        string BookingId, 
                        string BookingDate, 
                        string BookingHourFrom, 
                        string BookingMinuteFrom, 
                        string BookingHourTo, 
                        string BookingMinuteTo, 
                        string RentHourFrom, 
                        string RentMinuteFrom, 
                        string RentHourTo, 
                        string RentMinuteTo, 
                        string HourExtraPriceVND, 
                        string HourExtraPriceUSD, 
                        string VAT, 
                        string OtherFee01, 
                        string OtherFee02, 
                        string PriceUSD, 
                        string PriceVND, 
                        string VatUSD, 
                        string VatVND, 
                        string SumPriceUSD, 
                        string SumPriceVND, 
                        string LastPriceUSD, 
                        string LastPriceVND) {
                dsPaymentBookingRow rowdsPaymentBookingRow = ((dsPaymentBookingRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        YearMonth,
                        BuildingId,
                        CustomerId,
                        RoomId,
                        BookingId,
                        BookingDate,
                        BookingHourFrom,
                        BookingMinuteFrom,
                        BookingHourTo,
                        BookingMinuteTo,
                        RentHourFrom,
                        RentMinuteFrom,
                        RentHourTo,
                        RentMinuteTo,
                        HourExtraPriceVND,
                        HourExtraPriceUSD,
                        VAT,
                        OtherFee01,
                        OtherFee02,
                        PriceUSD,
                        PriceVND,
                        VatUSD,
                        VatVND,
                        SumPriceUSD,
                        SumPriceVND,
                        LastPriceUSD,
                        LastPriceVND};
                rowdsPaymentBookingRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsPaymentBookingRow);
                return rowdsPaymentBookingRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsPaymentBookingDataTable cln = ((dsPaymentBookingDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsPaymentBookingDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.coloumnYearMonth = base.Columns["YearMonth"];
                this.coloumnBuildingId = base.Columns["BuildingId"];
                this.coloumnCustomerId = base.Columns["CustomerId"];
                this.coloumnRoomId = base.Columns["RoomId"];
                this.coloumnBookingId = base.Columns["BookingId"];
                this.coloumnBookingDate = base.Columns["BookingDate"];
                this.coloumnBookingHourFrom = base.Columns["BookingHourFrom"];
                this.coloumnBookingMinuteFrom = base.Columns["BookingMinuteFrom"];
                this.coloumnBookingHourTo = base.Columns["BookingHourTo"];
                this.coloumnBookingMinuteTo = base.Columns["BookingMinuteTo"];
                this.coloumnRentHourFrom = base.Columns["RentHourFrom"];
                this.coloumnRentMinuteFrom = base.Columns["RentMinuteFrom"];
                this.coloumnRentHourTo = base.Columns["RentHourTo"];
                this.coloumnRentMinuteTo = base.Columns["RentMinuteTo"];
                this.coloumnHourExtraPriceVND = base.Columns["HourExtraPriceVND"];
                this.coloumnHourExtraPriceUSD = base.Columns["HourExtraPriceUSD"];
                this.coloumnVAT = base.Columns["VAT"];
                this.coloumnOtherFee01 = base.Columns["OtherFee01"];
                this.coloumnOtherFee02 = base.Columns["OtherFee02"];
                this.coloumnPriceUSD = base.Columns["PriceUSD"];
                this.coloumnPriceVND = base.Columns["PriceVND"];
                this.coloumnVatUSD = base.Columns["VatUSD"];
                this.coloumnVatVND = base.Columns["VatVND"];
                this.coloumnSumPriceUSD = base.Columns["SumPriceUSD"];
                this.coloumnSumPriceVND = base.Columns["SumPriceVND"];
                this.coloumnLastPriceUSD = base.Columns["LastPriceUSD"];
                this.coloumnLastPriceVND = base.Columns["LastPriceVND"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.coloumnYearMonth = new global::System.Data.DataColumn("YearMonth", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnYearMonth.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnYearMonth");
                this.coloumnYearMonth.ExtendedProperties.Add("Generator_UserColumnName", "YearMonth");
                base.Columns.Add(this.coloumnYearMonth);
                this.coloumnBuildingId = new global::System.Data.DataColumn("BuildingId", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnBuildingId.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnBuildingId");
                this.coloumnBuildingId.ExtendedProperties.Add("Generator_UserColumnName", "BuildingId");
                base.Columns.Add(this.coloumnBuildingId);
                this.coloumnCustomerId = new global::System.Data.DataColumn("CustomerId", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnCustomerId.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnCustomerId");
                this.coloumnCustomerId.ExtendedProperties.Add("Generator_UserColumnName", "CustomerId");
                base.Columns.Add(this.coloumnCustomerId);
                this.coloumnRoomId = new global::System.Data.DataColumn("RoomId", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnRoomId.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnRoomId");
                this.coloumnRoomId.ExtendedProperties.Add("Generator_UserColumnName", "RoomId");
                base.Columns.Add(this.coloumnRoomId);
                this.coloumnBookingId = new global::System.Data.DataColumn("BookingId", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnBookingId.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnBookingId");
                this.coloumnBookingId.ExtendedProperties.Add("Generator_UserColumnName", "BookingId");
                base.Columns.Add(this.coloumnBookingId);
                this.coloumnBookingDate = new global::System.Data.DataColumn("BookingDate", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnBookingDate.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnBookingDate");
                this.coloumnBookingDate.ExtendedProperties.Add("Generator_UserColumnName", "BookingDate");
                base.Columns.Add(this.coloumnBookingDate);
                this.coloumnBookingHourFrom = new global::System.Data.DataColumn("BookingHourFrom", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnBookingHourFrom.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnBookingHourFrom");
                this.coloumnBookingHourFrom.ExtendedProperties.Add("Generator_UserColumnName", "BookingHourFrom");
                base.Columns.Add(this.coloumnBookingHourFrom);
                this.coloumnBookingMinuteFrom = new global::System.Data.DataColumn("BookingMinuteFrom", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnBookingMinuteFrom.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnBookingMinuteFrom");
                this.coloumnBookingMinuteFrom.ExtendedProperties.Add("Generator_UserColumnName", "BookingMinuteFrom");
                base.Columns.Add(this.coloumnBookingMinuteFrom);
                this.coloumnBookingHourTo = new global::System.Data.DataColumn("BookingHourTo", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnBookingHourTo.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnBookingHourTo");
                this.coloumnBookingHourTo.ExtendedProperties.Add("Generator_UserColumnName", "BookingHourTo");
                base.Columns.Add(this.coloumnBookingHourTo);
                this.coloumnBookingMinuteTo = new global::System.Data.DataColumn("BookingMinuteTo", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnBookingMinuteTo.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnBookingMinuteTo");
                this.coloumnBookingMinuteTo.ExtendedProperties.Add("Generator_UserColumnName", "BookingMinuteTo");
                base.Columns.Add(this.coloumnBookingMinuteTo);
                this.coloumnRentHourFrom = new global::System.Data.DataColumn("RentHourFrom", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnRentHourFrom.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnRentHourFrom");
                this.coloumnRentHourFrom.ExtendedProperties.Add("Generator_UserColumnName", "RentHourFrom");
                base.Columns.Add(this.coloumnRentHourFrom);
                this.coloumnRentMinuteFrom = new global::System.Data.DataColumn("RentMinuteFrom", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnRentMinuteFrom.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnRentMinuteFrom");
                this.coloumnRentMinuteFrom.ExtendedProperties.Add("Generator_UserColumnName", "RentMinuteFrom");
                base.Columns.Add(this.coloumnRentMinuteFrom);
                this.coloumnRentHourTo = new global::System.Data.DataColumn("RentHourTo", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnRentHourTo.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnRentHourTo");
                this.coloumnRentHourTo.ExtendedProperties.Add("Generator_UserColumnName", "RentHourTo");
                base.Columns.Add(this.coloumnRentHourTo);
                this.coloumnRentMinuteTo = new global::System.Data.DataColumn("RentMinuteTo", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnRentMinuteTo.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnRentMinuteTo");
                this.coloumnRentMinuteTo.ExtendedProperties.Add("Generator_UserColumnName", "RentMinuteTo");
                base.Columns.Add(this.coloumnRentMinuteTo);
                this.coloumnHourExtraPriceVND = new global::System.Data.DataColumn("HourExtraPriceVND", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnHourExtraPriceVND.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnHourExtraPriceVND");
                this.coloumnHourExtraPriceVND.ExtendedProperties.Add("Generator_UserColumnName", "HourExtraPriceVND");
                base.Columns.Add(this.coloumnHourExtraPriceVND);
                this.coloumnHourExtraPriceUSD = new global::System.Data.DataColumn("HourExtraPriceUSD", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnHourExtraPriceUSD.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnHourExtraPriceUSD");
                this.coloumnHourExtraPriceUSD.ExtendedProperties.Add("Generator_UserColumnName", "HourExtraPriceUSD");
                base.Columns.Add(this.coloumnHourExtraPriceUSD);
                this.coloumnVAT = new global::System.Data.DataColumn("VAT", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnVAT.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnVAT");
                this.coloumnVAT.ExtendedProperties.Add("Generator_UserColumnName", "VAT");
                base.Columns.Add(this.coloumnVAT);
                this.coloumnOtherFee01 = new global::System.Data.DataColumn("OtherFee01", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnOtherFee01.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnOtherFee01");
                this.coloumnOtherFee01.ExtendedProperties.Add("Generator_UserColumnName", "OtherFee01");
                base.Columns.Add(this.coloumnOtherFee01);
                this.coloumnOtherFee02 = new global::System.Data.DataColumn("OtherFee02", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnOtherFee02.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnOtherFee02");
                this.coloumnOtherFee02.ExtendedProperties.Add("Generator_UserColumnName", "OtherFee02");
                base.Columns.Add(this.coloumnOtherFee02);
                this.coloumnPriceUSD = new global::System.Data.DataColumn("PriceUSD", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnPriceUSD.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnPriceUSD");
                this.coloumnPriceUSD.ExtendedProperties.Add("Generator_UserColumnName", "PriceUSD");
                base.Columns.Add(this.coloumnPriceUSD);
                this.coloumnPriceVND = new global::System.Data.DataColumn("PriceVND", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnPriceVND.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnPriceVND");
                this.coloumnPriceVND.ExtendedProperties.Add("Generator_UserColumnName", "PriceVND");
                base.Columns.Add(this.coloumnPriceVND);
                this.coloumnVatUSD = new global::System.Data.DataColumn("VatUSD", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnVatUSD.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnVatUSD");
                this.coloumnVatUSD.ExtendedProperties.Add("Generator_UserColumnName", "VatUSD");
                base.Columns.Add(this.coloumnVatUSD);
                this.coloumnVatVND = new global::System.Data.DataColumn("VatVND", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnVatVND.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnVatVND");
                this.coloumnVatVND.ExtendedProperties.Add("Generator_UserColumnName", "VatVND");
                base.Columns.Add(this.coloumnVatVND);
                this.coloumnSumPriceUSD = new global::System.Data.DataColumn("SumPriceUSD", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnSumPriceUSD.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnSumPriceUSD");
                this.coloumnSumPriceUSD.ExtendedProperties.Add("Generator_UserColumnName", "SumPriceUSD");
                base.Columns.Add(this.coloumnSumPriceUSD);
                this.coloumnSumPriceVND = new global::System.Data.DataColumn("SumPriceVND", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnSumPriceVND.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnSumPriceVND");
                this.coloumnSumPriceVND.ExtendedProperties.Add("Generator_UserColumnName", "SumPriceVND");
                base.Columns.Add(this.coloumnSumPriceVND);
                this.coloumnLastPriceUSD = new global::System.Data.DataColumn("LastPriceUSD", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnLastPriceUSD.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnLastPriceUSD");
                this.coloumnLastPriceUSD.ExtendedProperties.Add("Generator_UserColumnName", "LastPriceUSD");
                base.Columns.Add(this.coloumnLastPriceUSD);
                this.coloumnLastPriceVND = new global::System.Data.DataColumn("LastPriceVND", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnLastPriceVND.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnLastPriceVND");
                this.coloumnLastPriceVND.ExtendedProperties.Add("Generator_UserColumnName", "LastPriceVND");
                base.Columns.Add(this.coloumnLastPriceVND);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPaymentBookingRow NewdsPaymentBookingRow() {
                return ((dsPaymentBookingRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsPaymentBookingRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsPaymentBookingRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsPaymentBookingRowChanged != null)) {
                    this.dsPaymentBookingRowChanged(this, new dsPaymentBookingRowChangeEvent(((dsPaymentBookingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsPaymentBookingRowChanging != null)) {
                    this.dsPaymentBookingRowChanging(this, new dsPaymentBookingRowChangeEvent(((dsPaymentBookingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsPaymentBookingRowDeleted != null)) {
                    this.dsPaymentBookingRowDeleted(this, new dsPaymentBookingRowChangeEvent(((dsPaymentBookingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsPaymentBookingRowDeleting != null)) {
                    this.dsPaymentBookingRowDeleting(this, new dsPaymentBookingRowChangeEvent(((dsPaymentBookingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsPaymentBookingRow(dsPaymentBookingRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                PaymentBooking ds = new PaymentBooking();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsPaymentBookingDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsPaymentBookingRow : global::System.Data.DataRow {
            
            private dsPaymentBookingDataTable tabledsPaymentBooking;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsPaymentBookingRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsPaymentBooking = ((dsPaymentBookingDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string YearMonth {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentBooking.YearMonthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'YearMonth\' in table \'dsPaymentBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentBooking.YearMonthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BuildingId {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentBooking.BuildingIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BuildingId\' in table \'dsPaymentBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentBooking.BuildingIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerId {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentBooking.CustomerIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerId\' in table \'dsPaymentBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentBooking.CustomerIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RoomId {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentBooking.RoomIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RoomId\' in table \'dsPaymentBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentBooking.RoomIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BookingId {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentBooking.BookingIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BookingId\' in table \'dsPaymentBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentBooking.BookingIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BookingDate {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentBooking.BookingDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BookingDate\' in table \'dsPaymentBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentBooking.BookingDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BookingHourFrom {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentBooking.BookingHourFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BookingHourFrom\' in table \'dsPaymentBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentBooking.BookingHourFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BookingMinuteFrom {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentBooking.BookingMinuteFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BookingMinuteFrom\' in table \'dsPaymentBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentBooking.BookingMinuteFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BookingHourTo {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentBooking.BookingHourToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BookingHourTo\' in table \'dsPaymentBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentBooking.BookingHourToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BookingMinuteTo {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentBooking.BookingMinuteToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BookingMinuteTo\' in table \'dsPaymentBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentBooking.BookingMinuteToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RentHourFrom {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentBooking.RentHourFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RentHourFrom\' in table \'dsPaymentBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentBooking.RentHourFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RentMinuteFrom {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentBooking.RentMinuteFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RentMinuteFrom\' in table \'dsPaymentBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentBooking.RentMinuteFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RentHourTo {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentBooking.RentHourToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RentHourTo\' in table \'dsPaymentBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentBooking.RentHourToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RentMinuteTo {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentBooking.RentMinuteToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RentMinuteTo\' in table \'dsPaymentBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentBooking.RentMinuteToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HourExtraPriceVND {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentBooking.HourExtraPriceVNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HourExtraPriceVND\' in table \'dsPaymentBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentBooking.HourExtraPriceVNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HourExtraPriceUSD {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentBooking.HourExtraPriceUSDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HourExtraPriceUSD\' in table \'dsPaymentBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentBooking.HourExtraPriceUSDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VAT {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentBooking.VATColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VAT\' in table \'dsPaymentBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentBooking.VATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OtherFee01 {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentBooking.OtherFee01Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherFee01\' in table \'dsPaymentBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentBooking.OtherFee01Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OtherFee02 {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentBooking.OtherFee02Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherFee02\' in table \'dsPaymentBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentBooking.OtherFee02Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PriceUSD {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentBooking.PriceUSDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PriceUSD\' in table \'dsPaymentBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentBooking.PriceUSDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PriceVND {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentBooking.PriceVNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PriceVND\' in table \'dsPaymentBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentBooking.PriceVNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VatUSD {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentBooking.VatUSDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VatUSD\' in table \'dsPaymentBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentBooking.VatUSDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VatVND {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentBooking.VatVNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VatVND\' in table \'dsPaymentBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentBooking.VatVNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SumPriceUSD {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentBooking.SumPriceUSDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SumPriceUSD\' in table \'dsPaymentBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentBooking.SumPriceUSDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SumPriceVND {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentBooking.SumPriceVNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SumPriceVND\' in table \'dsPaymentBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentBooking.SumPriceVNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LastPriceUSD {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentBooking.LastPriceUSDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastPriceUSD\' in table \'dsPaymentBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentBooking.LastPriceUSDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LastPriceVND {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentBooking.LastPriceVNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastPriceVND\' in table \'dsPaymentBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentBooking.LastPriceVNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsYearMonthNull() {
                return this.IsNull(this.tabledsPaymentBooking.YearMonthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetYearMonthNull() {
                this[this.tabledsPaymentBooking.YearMonthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBuildingIdNull() {
                return this.IsNull(this.tabledsPaymentBooking.BuildingIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBuildingIdNull() {
                this[this.tabledsPaymentBooking.BuildingIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerIdNull() {
                return this.IsNull(this.tabledsPaymentBooking.CustomerIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerIdNull() {
                this[this.tabledsPaymentBooking.CustomerIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRoomIdNull() {
                return this.IsNull(this.tabledsPaymentBooking.RoomIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRoomIdNull() {
                this[this.tabledsPaymentBooking.RoomIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBookingIdNull() {
                return this.IsNull(this.tabledsPaymentBooking.BookingIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBookingIdNull() {
                this[this.tabledsPaymentBooking.BookingIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBookingDateNull() {
                return this.IsNull(this.tabledsPaymentBooking.BookingDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBookingDateNull() {
                this[this.tabledsPaymentBooking.BookingDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBookingHourFromNull() {
                return this.IsNull(this.tabledsPaymentBooking.BookingHourFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBookingHourFromNull() {
                this[this.tabledsPaymentBooking.BookingHourFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBookingMinuteFromNull() {
                return this.IsNull(this.tabledsPaymentBooking.BookingMinuteFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBookingMinuteFromNull() {
                this[this.tabledsPaymentBooking.BookingMinuteFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBookingHourToNull() {
                return this.IsNull(this.tabledsPaymentBooking.BookingHourToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBookingHourToNull() {
                this[this.tabledsPaymentBooking.BookingHourToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBookingMinuteToNull() {
                return this.IsNull(this.tabledsPaymentBooking.BookingMinuteToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBookingMinuteToNull() {
                this[this.tabledsPaymentBooking.BookingMinuteToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRentHourFromNull() {
                return this.IsNull(this.tabledsPaymentBooking.RentHourFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRentHourFromNull() {
                this[this.tabledsPaymentBooking.RentHourFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRentMinuteFromNull() {
                return this.IsNull(this.tabledsPaymentBooking.RentMinuteFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRentMinuteFromNull() {
                this[this.tabledsPaymentBooking.RentMinuteFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRentHourToNull() {
                return this.IsNull(this.tabledsPaymentBooking.RentHourToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRentHourToNull() {
                this[this.tabledsPaymentBooking.RentHourToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRentMinuteToNull() {
                return this.IsNull(this.tabledsPaymentBooking.RentMinuteToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRentMinuteToNull() {
                this[this.tabledsPaymentBooking.RentMinuteToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHourExtraPriceVNDNull() {
                return this.IsNull(this.tabledsPaymentBooking.HourExtraPriceVNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHourExtraPriceVNDNull() {
                this[this.tabledsPaymentBooking.HourExtraPriceVNDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHourExtraPriceUSDNull() {
                return this.IsNull(this.tabledsPaymentBooking.HourExtraPriceUSDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHourExtraPriceUSDNull() {
                this[this.tabledsPaymentBooking.HourExtraPriceUSDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVATNull() {
                return this.IsNull(this.tabledsPaymentBooking.VATColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVATNull() {
                this[this.tabledsPaymentBooking.VATColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOtherFee01Null() {
                return this.IsNull(this.tabledsPaymentBooking.OtherFee01Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOtherFee01Null() {
                this[this.tabledsPaymentBooking.OtherFee01Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOtherFee02Null() {
                return this.IsNull(this.tabledsPaymentBooking.OtherFee02Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOtherFee02Null() {
                this[this.tabledsPaymentBooking.OtherFee02Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPriceUSDNull() {
                return this.IsNull(this.tabledsPaymentBooking.PriceUSDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPriceUSDNull() {
                this[this.tabledsPaymentBooking.PriceUSDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPriceVNDNull() {
                return this.IsNull(this.tabledsPaymentBooking.PriceVNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPriceVNDNull() {
                this[this.tabledsPaymentBooking.PriceVNDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVatUSDNull() {
                return this.IsNull(this.tabledsPaymentBooking.VatUSDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVatUSDNull() {
                this[this.tabledsPaymentBooking.VatUSDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVatVNDNull() {
                return this.IsNull(this.tabledsPaymentBooking.VatVNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVatVNDNull() {
                this[this.tabledsPaymentBooking.VatVNDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSumPriceUSDNull() {
                return this.IsNull(this.tabledsPaymentBooking.SumPriceUSDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSumPriceUSDNull() {
                this[this.tabledsPaymentBooking.SumPriceUSDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSumPriceVNDNull() {
                return this.IsNull(this.tabledsPaymentBooking.SumPriceVNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSumPriceVNDNull() {
                this[this.tabledsPaymentBooking.SumPriceVNDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastPriceUSDNull() {
                return this.IsNull(this.tabledsPaymentBooking.LastPriceUSDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastPriceUSDNull() {
                this[this.tabledsPaymentBooking.LastPriceUSDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastPriceVNDNull() {
                return this.IsNull(this.tabledsPaymentBooking.LastPriceVNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastPriceVNDNull() {
                this[this.tabledsPaymentBooking.LastPriceVNDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsPaymentBookingRowChangeEvent : global::System.EventArgs {
            
            private dsPaymentBookingRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPaymentBookingRowChangeEvent(dsPaymentBookingRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPaymentBookingRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591