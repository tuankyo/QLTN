//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5448
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Man.Data_Set {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("PaymentExtraTime")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class PaymentExtraTime : global::System.Data.DataSet {
        
        private dsPaymentExtraTimeDataTable tabledsPaymentExtraTime;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PaymentExtraTime() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected PaymentExtraTime(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["dsPaymentExtraTime"] != null)) {
                    base.Tables.Add(new dsPaymentExtraTimeDataTable(ds.Tables["dsPaymentExtraTime"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsPaymentExtraTimeDataTable dsPaymentExtraTime {
            get {
                return this.tabledsPaymentExtraTime;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            PaymentExtraTime cln = ((PaymentExtraTime)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["dsPaymentExtraTime"] != null)) {
                    base.Tables.Add(new dsPaymentExtraTimeDataTable(ds.Tables["dsPaymentExtraTime"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tabledsPaymentExtraTime = ((dsPaymentExtraTimeDataTable)(base.Tables["dsPaymentExtraTime"]));
            if ((initTable == true)) {
                if ((this.tabledsPaymentExtraTime != null)) {
                    this.tabledsPaymentExtraTime.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "PaymentExtraTime";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/PaymentBooking.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabledsPaymentExtraTime = new dsPaymentExtraTimeDataTable();
            base.Tables.Add(this.tabledsPaymentExtraTime);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsPaymentExtraTime() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            PaymentExtraTime ds = new PaymentExtraTime();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void dsPaymentExtraTimeRowChangeEventHandler(object sender, dsPaymentExtraTimeRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsPaymentExtraTimeDataTable : global::System.Data.TypedTableBase<dsPaymentExtraTimeRow> {
            
            private global::System.Data.DataColumn coloumnid;
            
            private global::System.Data.DataColumn coloumnYearMonth;
            
            private global::System.Data.DataColumn coloumnBuildingId;
            
            private global::System.Data.DataColumn coloumnCustomerId;
            
            private global::System.Data.DataColumn coloumnRoomId;
            
            private global::System.Data.DataColumn coloumnRoomExtraTimeId;
            
            private global::System.Data.DataColumn coloumnWorkingDate;
            
            private global::System.Data.DataColumn coloumnExtraHour;
            
            private global::System.Data.DataColumn coloumnVAT;
            
            private global::System.Data.DataColumn coloumnOtherFee01;
            
            private global::System.Data.DataColumn coloumnOtherFee02;
            
            private global::System.Data.DataColumn coloumnPriceUSD;
            
            private global::System.Data.DataColumn coloumnPriceVND;
            
            private global::System.Data.DataColumn coloumnVatUSD;
            
            private global::System.Data.DataColumn coloumnVatVND;
            
            private global::System.Data.DataColumn coloumnSumUSD;
            
            private global::System.Data.DataColumn coloumnSumVND;
            
            private global::System.Data.DataColumn coloumnLastPriceUSD;
            
            private global::System.Data.DataColumn coloumnLastPriceVND;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPaymentExtraTimeDataTable() {
                this.TableName = "dsPaymentExtraTime";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsPaymentExtraTimeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsPaymentExtraTimeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.coloumnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YearMonthColumn {
                get {
                    return this.coloumnYearMonth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BuildingIdColumn {
                get {
                    return this.coloumnBuildingId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerIdColumn {
                get {
                    return this.coloumnCustomerId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RoomIdColumn {
                get {
                    return this.coloumnRoomId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RoomExtraTimeIdColumn {
                get {
                    return this.coloumnRoomExtraTimeId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkingDateColumn {
                get {
                    return this.coloumnWorkingDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExtraHourColumn {
                get {
                    return this.coloumnExtraHour;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VATColumn {
                get {
                    return this.coloumnVAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OtherFee01Column {
                get {
                    return this.coloumnOtherFee01;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OtherFee02Column {
                get {
                    return this.coloumnOtherFee02;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PriceUSDColumn {
                get {
                    return this.coloumnPriceUSD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PriceVNDColumn {
                get {
                    return this.coloumnPriceVND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VatUSDColumn {
                get {
                    return this.coloumnVatUSD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VatVNDColumn {
                get {
                    return this.coloumnVatVND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SumUSDColumn {
                get {
                    return this.coloumnSumUSD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SumVNDColumn {
                get {
                    return this.coloumnSumVND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastPriceUSDColumn {
                get {
                    return this.coloumnLastPriceUSD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastPriceVNDColumn {
                get {
                    return this.coloumnLastPriceVND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPaymentExtraTimeRow this[int index] {
                get {
                    return ((dsPaymentExtraTimeRow)(this.Rows[index]));
                }
            }
            
            public event dsPaymentExtraTimeRowChangeEventHandler dsPaymentExtraTimeRowChanging;
            
            public event dsPaymentExtraTimeRowChangeEventHandler dsPaymentExtraTimeRowChanged;
            
            public event dsPaymentExtraTimeRowChangeEventHandler dsPaymentExtraTimeRowDeleting;
            
            public event dsPaymentExtraTimeRowChangeEventHandler dsPaymentExtraTimeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsPaymentExtraTimeRow(dsPaymentExtraTimeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPaymentExtraTimeRow AdddsPaymentExtraTimeRow(
                        string id, 
                        string YearMonth, 
                        string BuildingId, 
                        string CustomerId, 
                        string RoomId, 
                        string RoomExtraTimeId, 
                        System.DateTime WorkingDate, 
                        double ExtraHour, 
                        double VAT, 
                        double OtherFee01, 
                        double OtherFee02, 
                        double PriceUSD, 
                        double PriceVND, 
                        double VatUSD, 
                        double VatVND, 
                        double SumUSD, 
                        double SumVND, 
                        double LastPriceUSD, 
                        double LastPriceVND) {
                dsPaymentExtraTimeRow rowdsPaymentExtraTimeRow = ((dsPaymentExtraTimeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        id,
                        YearMonth,
                        BuildingId,
                        CustomerId,
                        RoomId,
                        RoomExtraTimeId,
                        WorkingDate,
                        ExtraHour,
                        VAT,
                        OtherFee01,
                        OtherFee02,
                        PriceUSD,
                        PriceVND,
                        VatUSD,
                        VatVND,
                        SumUSD,
                        SumVND,
                        LastPriceUSD,
                        LastPriceVND};
                rowdsPaymentExtraTimeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsPaymentExtraTimeRow);
                return rowdsPaymentExtraTimeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsPaymentExtraTimeDataTable cln = ((dsPaymentExtraTimeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsPaymentExtraTimeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.coloumnid = base.Columns["id"];
                this.coloumnYearMonth = base.Columns["YearMonth"];
                this.coloumnBuildingId = base.Columns["BuildingId"];
                this.coloumnCustomerId = base.Columns["CustomerId"];
                this.coloumnRoomId = base.Columns["RoomId"];
                this.coloumnRoomExtraTimeId = base.Columns["RoomExtraTimeId"];
                this.coloumnWorkingDate = base.Columns["WorkingDate"];
                this.coloumnExtraHour = base.Columns["ExtraHour"];
                this.coloumnVAT = base.Columns["VAT"];
                this.coloumnOtherFee01 = base.Columns["OtherFee01"];
                this.coloumnOtherFee02 = base.Columns["OtherFee02"];
                this.coloumnPriceUSD = base.Columns["PriceUSD"];
                this.coloumnPriceVND = base.Columns["PriceVND"];
                this.coloumnVatUSD = base.Columns["VatUSD"];
                this.coloumnVatVND = base.Columns["VatVND"];
                this.coloumnSumUSD = base.Columns["SumUSD"];
                this.coloumnSumVND = base.Columns["SumVND"];
                this.coloumnLastPriceUSD = base.Columns["LastPriceUSD"];
                this.coloumnLastPriceVND = base.Columns["LastPriceVND"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.coloumnid = new global::System.Data.DataColumn("id", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnid.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnid");
                this.coloumnid.ExtendedProperties.Add("Generator_UserColumnName", "id");
                base.Columns.Add(this.coloumnid);
                this.coloumnYearMonth = new global::System.Data.DataColumn("YearMonth", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnYearMonth.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnYearMonth");
                this.coloumnYearMonth.ExtendedProperties.Add("Generator_UserColumnName", "YearMonth");
                base.Columns.Add(this.coloumnYearMonth);
                this.coloumnBuildingId = new global::System.Data.DataColumn("BuildingId", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnBuildingId.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnBuildingId");
                this.coloumnBuildingId.ExtendedProperties.Add("Generator_UserColumnName", "BuildingId");
                base.Columns.Add(this.coloumnBuildingId);
                this.coloumnCustomerId = new global::System.Data.DataColumn("CustomerId", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnCustomerId.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnCustomerId");
                this.coloumnCustomerId.ExtendedProperties.Add("Generator_UserColumnName", "CustomerId");
                base.Columns.Add(this.coloumnCustomerId);
                this.coloumnRoomId = new global::System.Data.DataColumn("RoomId", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnRoomId.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnRoomId");
                this.coloumnRoomId.ExtendedProperties.Add("Generator_UserColumnName", "RoomId");
                base.Columns.Add(this.coloumnRoomId);
                this.coloumnRoomExtraTimeId = new global::System.Data.DataColumn("RoomExtraTimeId", typeof(string), null, global::System.Data.MappingType.Element);
                this.coloumnRoomExtraTimeId.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnRoomExtraTimeId");
                this.coloumnRoomExtraTimeId.ExtendedProperties.Add("Generator_UserColumnName", "RoomExtraTimeId");
                base.Columns.Add(this.coloumnRoomExtraTimeId);
                this.coloumnWorkingDate = new global::System.Data.DataColumn("WorkingDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                this.coloumnWorkingDate.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnWorkingDate");
                this.coloumnWorkingDate.ExtendedProperties.Add("Generator_UserColumnName", "WorkingDate");
                base.Columns.Add(this.coloumnWorkingDate);
                this.coloumnExtraHour = new global::System.Data.DataColumn("ExtraHour", typeof(double), null, global::System.Data.MappingType.Element);
                this.coloumnExtraHour.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnExtraHour");
                this.coloumnExtraHour.ExtendedProperties.Add("Generator_UserColumnName", "ExtraHour");
                base.Columns.Add(this.coloumnExtraHour);
                this.coloumnVAT = new global::System.Data.DataColumn("VAT", typeof(double), null, global::System.Data.MappingType.Element);
                this.coloumnVAT.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnVAT");
                this.coloumnVAT.ExtendedProperties.Add("Generator_UserColumnName", "VAT");
                base.Columns.Add(this.coloumnVAT);
                this.coloumnOtherFee01 = new global::System.Data.DataColumn("OtherFee01", typeof(double), null, global::System.Data.MappingType.Element);
                this.coloumnOtherFee01.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnOtherFee01");
                this.coloumnOtherFee01.ExtendedProperties.Add("Generator_UserColumnName", "OtherFee01");
                base.Columns.Add(this.coloumnOtherFee01);
                this.coloumnOtherFee02 = new global::System.Data.DataColumn("OtherFee02", typeof(double), null, global::System.Data.MappingType.Element);
                this.coloumnOtherFee02.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnOtherFee02");
                this.coloumnOtherFee02.ExtendedProperties.Add("Generator_UserColumnName", "OtherFee02");
                base.Columns.Add(this.coloumnOtherFee02);
                this.coloumnPriceUSD = new global::System.Data.DataColumn("PriceUSD", typeof(double), null, global::System.Data.MappingType.Element);
                this.coloumnPriceUSD.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnPriceUSD");
                this.coloumnPriceUSD.ExtendedProperties.Add("Generator_UserColumnName", "PriceUSD");
                base.Columns.Add(this.coloumnPriceUSD);
                this.coloumnPriceVND = new global::System.Data.DataColumn("PriceVND", typeof(double), null, global::System.Data.MappingType.Element);
                this.coloumnPriceVND.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnPriceVND");
                this.coloumnPriceVND.ExtendedProperties.Add("Generator_UserColumnName", "PriceVND");
                base.Columns.Add(this.coloumnPriceVND);
                this.coloumnVatUSD = new global::System.Data.DataColumn("VatUSD", typeof(double), null, global::System.Data.MappingType.Element);
                this.coloumnVatUSD.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnVatUSD");
                this.coloumnVatUSD.ExtendedProperties.Add("Generator_UserColumnName", "VatUSD");
                base.Columns.Add(this.coloumnVatUSD);
                this.coloumnVatVND = new global::System.Data.DataColumn("VatVND", typeof(double), null, global::System.Data.MappingType.Element);
                this.coloumnVatVND.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnVatVND");
                this.coloumnVatVND.ExtendedProperties.Add("Generator_UserColumnName", "VatVND");
                base.Columns.Add(this.coloumnVatVND);
                this.coloumnSumUSD = new global::System.Data.DataColumn("SumUSD", typeof(double), null, global::System.Data.MappingType.Element);
                this.coloumnSumUSD.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnSumUSD");
                this.coloumnSumUSD.ExtendedProperties.Add("Generator_UserColumnName", "SumUSD");
                base.Columns.Add(this.coloumnSumUSD);
                this.coloumnSumVND = new global::System.Data.DataColumn("SumVND", typeof(double), null, global::System.Data.MappingType.Element);
                this.coloumnSumVND.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnSumVND");
                this.coloumnSumVND.ExtendedProperties.Add("Generator_UserColumnName", "SumVND");
                base.Columns.Add(this.coloumnSumVND);
                this.coloumnLastPriceUSD = new global::System.Data.DataColumn("LastPriceUSD", typeof(double), null, global::System.Data.MappingType.Element);
                this.coloumnLastPriceUSD.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnLastPriceUSD");
                this.coloumnLastPriceUSD.ExtendedProperties.Add("Generator_UserColumnName", "LastPriceUSD");
                base.Columns.Add(this.coloumnLastPriceUSD);
                this.coloumnLastPriceVND = new global::System.Data.DataColumn("LastPriceVND", typeof(double), null, global::System.Data.MappingType.Element);
                this.coloumnLastPriceVND.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "coloumnLastPriceVND");
                this.coloumnLastPriceVND.ExtendedProperties.Add("Generator_UserColumnName", "LastPriceVND");
                base.Columns.Add(this.coloumnLastPriceVND);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPaymentExtraTimeRow NewdsPaymentExtraTimeRow() {
                return ((dsPaymentExtraTimeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsPaymentExtraTimeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsPaymentExtraTimeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsPaymentExtraTimeRowChanged != null)) {
                    this.dsPaymentExtraTimeRowChanged(this, new dsPaymentExtraTimeRowChangeEvent(((dsPaymentExtraTimeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsPaymentExtraTimeRowChanging != null)) {
                    this.dsPaymentExtraTimeRowChanging(this, new dsPaymentExtraTimeRowChangeEvent(((dsPaymentExtraTimeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsPaymentExtraTimeRowDeleted != null)) {
                    this.dsPaymentExtraTimeRowDeleted(this, new dsPaymentExtraTimeRowChangeEvent(((dsPaymentExtraTimeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsPaymentExtraTimeRowDeleting != null)) {
                    this.dsPaymentExtraTimeRowDeleting(this, new dsPaymentExtraTimeRowChangeEvent(((dsPaymentExtraTimeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsPaymentExtraTimeRow(dsPaymentExtraTimeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                PaymentExtraTime ds = new PaymentExtraTime();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsPaymentExtraTimeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsPaymentExtraTimeRow : global::System.Data.DataRow {
            
            private dsPaymentExtraTimeDataTable tabledsPaymentExtraTime;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsPaymentExtraTimeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsPaymentExtraTime = ((dsPaymentExtraTimeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string id {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentExtraTime.idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'id\' in table \'dsPaymentExtraTime\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentExtraTime.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string YearMonth {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentExtraTime.YearMonthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'YearMonth\' in table \'dsPaymentExtraTime\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentExtraTime.YearMonthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BuildingId {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentExtraTime.BuildingIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BuildingId\' in table \'dsPaymentExtraTime\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentExtraTime.BuildingIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerId {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentExtraTime.CustomerIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerId\' in table \'dsPaymentExtraTime\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentExtraTime.CustomerIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RoomId {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentExtraTime.RoomIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RoomId\' in table \'dsPaymentExtraTime\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentExtraTime.RoomIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RoomExtraTimeId {
                get {
                    try {
                        return ((string)(this[this.tabledsPaymentExtraTime.RoomExtraTimeIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RoomExtraTimeId\' in table \'dsPaymentExtraTime\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentExtraTime.RoomExtraTimeIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime WorkingDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledsPaymentExtraTime.WorkingDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WorkingDate\' in table \'dsPaymentExtraTime\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentExtraTime.WorkingDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ExtraHour {
                get {
                    try {
                        return ((double)(this[this.tabledsPaymentExtraTime.ExtraHourColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExtraHour\' in table \'dsPaymentExtraTime\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentExtraTime.ExtraHourColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double VAT {
                get {
                    try {
                        return ((double)(this[this.tabledsPaymentExtraTime.VATColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VAT\' in table \'dsPaymentExtraTime\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentExtraTime.VATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double OtherFee01 {
                get {
                    try {
                        return ((double)(this[this.tabledsPaymentExtraTime.OtherFee01Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherFee01\' in table \'dsPaymentExtraTime\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentExtraTime.OtherFee01Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double OtherFee02 {
                get {
                    try {
                        return ((double)(this[this.tabledsPaymentExtraTime.OtherFee02Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherFee02\' in table \'dsPaymentExtraTime\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentExtraTime.OtherFee02Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PriceUSD {
                get {
                    try {
                        return ((double)(this[this.tabledsPaymentExtraTime.PriceUSDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PriceUSD\' in table \'dsPaymentExtraTime\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentExtraTime.PriceUSDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PriceVND {
                get {
                    try {
                        return ((double)(this[this.tabledsPaymentExtraTime.PriceVNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PriceVND\' in table \'dsPaymentExtraTime\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentExtraTime.PriceVNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double VatUSD {
                get {
                    try {
                        return ((double)(this[this.tabledsPaymentExtraTime.VatUSDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VatUSD\' in table \'dsPaymentExtraTime\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentExtraTime.VatUSDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double VatVND {
                get {
                    try {
                        return ((double)(this[this.tabledsPaymentExtraTime.VatVNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VatVND\' in table \'dsPaymentExtraTime\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentExtraTime.VatVNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SumUSD {
                get {
                    try {
                        return ((double)(this[this.tabledsPaymentExtraTime.SumUSDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SumUSD\' in table \'dsPaymentExtraTime\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentExtraTime.SumUSDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SumVND {
                get {
                    try {
                        return ((double)(this[this.tabledsPaymentExtraTime.SumVNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SumVND\' in table \'dsPaymentExtraTime\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentExtraTime.SumVNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double LastPriceUSD {
                get {
                    try {
                        return ((double)(this[this.tabledsPaymentExtraTime.LastPriceUSDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastPriceUSD\' in table \'dsPaymentExtraTime\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentExtraTime.LastPriceUSDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double LastPriceVND {
                get {
                    try {
                        return ((double)(this[this.tabledsPaymentExtraTime.LastPriceVNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastPriceVND\' in table \'dsPaymentExtraTime\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsPaymentExtraTime.LastPriceVNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidNull() {
                return this.IsNull(this.tabledsPaymentExtraTime.idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidNull() {
                this[this.tabledsPaymentExtraTime.idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsYearMonthNull() {
                return this.IsNull(this.tabledsPaymentExtraTime.YearMonthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetYearMonthNull() {
                this[this.tabledsPaymentExtraTime.YearMonthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBuildingIdNull() {
                return this.IsNull(this.tabledsPaymentExtraTime.BuildingIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBuildingIdNull() {
                this[this.tabledsPaymentExtraTime.BuildingIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerIdNull() {
                return this.IsNull(this.tabledsPaymentExtraTime.CustomerIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerIdNull() {
                this[this.tabledsPaymentExtraTime.CustomerIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRoomIdNull() {
                return this.IsNull(this.tabledsPaymentExtraTime.RoomIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRoomIdNull() {
                this[this.tabledsPaymentExtraTime.RoomIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRoomExtraTimeIdNull() {
                return this.IsNull(this.tabledsPaymentExtraTime.RoomExtraTimeIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRoomExtraTimeIdNull() {
                this[this.tabledsPaymentExtraTime.RoomExtraTimeIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWorkingDateNull() {
                return this.IsNull(this.tabledsPaymentExtraTime.WorkingDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWorkingDateNull() {
                this[this.tabledsPaymentExtraTime.WorkingDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExtraHourNull() {
                return this.IsNull(this.tabledsPaymentExtraTime.ExtraHourColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExtraHourNull() {
                this[this.tabledsPaymentExtraTime.ExtraHourColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVATNull() {
                return this.IsNull(this.tabledsPaymentExtraTime.VATColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVATNull() {
                this[this.tabledsPaymentExtraTime.VATColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOtherFee01Null() {
                return this.IsNull(this.tabledsPaymentExtraTime.OtherFee01Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOtherFee01Null() {
                this[this.tabledsPaymentExtraTime.OtherFee01Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOtherFee02Null() {
                return this.IsNull(this.tabledsPaymentExtraTime.OtherFee02Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOtherFee02Null() {
                this[this.tabledsPaymentExtraTime.OtherFee02Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPriceUSDNull() {
                return this.IsNull(this.tabledsPaymentExtraTime.PriceUSDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPriceUSDNull() {
                this[this.tabledsPaymentExtraTime.PriceUSDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPriceVNDNull() {
                return this.IsNull(this.tabledsPaymentExtraTime.PriceVNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPriceVNDNull() {
                this[this.tabledsPaymentExtraTime.PriceVNDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVatUSDNull() {
                return this.IsNull(this.tabledsPaymentExtraTime.VatUSDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVatUSDNull() {
                this[this.tabledsPaymentExtraTime.VatUSDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVatVNDNull() {
                return this.IsNull(this.tabledsPaymentExtraTime.VatVNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVatVNDNull() {
                this[this.tabledsPaymentExtraTime.VatVNDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSumUSDNull() {
                return this.IsNull(this.tabledsPaymentExtraTime.SumUSDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSumUSDNull() {
                this[this.tabledsPaymentExtraTime.SumUSDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSumVNDNull() {
                return this.IsNull(this.tabledsPaymentExtraTime.SumVNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSumVNDNull() {
                this[this.tabledsPaymentExtraTime.SumVNDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastPriceUSDNull() {
                return this.IsNull(this.tabledsPaymentExtraTime.LastPriceUSDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastPriceUSDNull() {
                this[this.tabledsPaymentExtraTime.LastPriceUSDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastPriceVNDNull() {
                return this.IsNull(this.tabledsPaymentExtraTime.LastPriceVNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastPriceVNDNull() {
                this[this.tabledsPaymentExtraTime.LastPriceVNDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsPaymentExtraTimeRowChangeEvent : global::System.EventArgs {
            
            private dsPaymentExtraTimeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPaymentExtraTimeRowChangeEvent(dsPaymentExtraTimeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsPaymentExtraTimeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591